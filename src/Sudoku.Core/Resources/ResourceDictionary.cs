namespace Sudoku.Resources;

/// <summary>
/// Represents a easy way to fetch resource values using the specified key and culture information.
/// </summary>
public static class ResourceDictionary
{
	/// <summary>
	/// Try to get resource via the key.
	/// </summary>
	/// <param name="resourceKey">The resource key.</param>
	/// <param name="culture">The culture.</param>
	/// <param name="assembly">The assembly storing the resource dictionaries.</param>
	/// <returns>The result string.</returns>
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static string GetString(string resourceKey, CultureInfo? culture = null, Assembly? assembly = null)
		=> GetAssemblyResourceReader(assembly)!.GetResource(resourceKey, culture);

	/// <summary>
	/// Try to fetch an instance for the resource dictionary for the specified assembly.
	/// The return type may be a <see cref="ResourceReader"/> object, because it is generated by compiler.
	/// </summary>
	/// <param name="this">The assembly instance.</param>
	/// <returns>A dynamic object that describes the resource dictionary.</returns>
	/// <exception cref="Exception">
	/// Throws when the resource reader is not found, meaning the assembly doesn't store any resources.
	/// </exception>
	/// <seealso cref="ResourceReader"/>
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[SuppressMessage("Performance", "CA1859:Use concrete types when possible for improved performance", Justification = "<Pending>")]
	private static IResourceReader GetAssemblyResourceReader(Assembly? @this = null)
	{
		@this ??= Assembly.GetCallingAssembly();

		if (@this.GetCustomAttribute<ResourceLocationAttribute>() is not { ResourceFileSpecifier: var specifier }
			|| specifier.GetProperty(nameof(ResourceManager), BindingFlags.Public | BindingFlags.Static) is not { } pi)
		{
			throw new();
		}

		return new EntryResourceReader((ResourceManager)pi.GetValue(null)!);
	}
}

/// <summary>
/// The entry resource reader.
/// </summary>
/// <param name="resourceManager">The resource manager.</param>
file sealed class EntryResourceReader(ResourceManager resourceManager) : IResourceReader
{
	/// <inheritdoc/>
	ResourceManager IResourceReader.ResourceManager => resourceManager;
}
