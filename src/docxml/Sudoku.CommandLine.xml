<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.CommandLine</name>
    </assembly>
    <members>
        <member name="T:Sudoku.CommandLine.Arguments.IArgument`1">
            <summary>
            Represents an argument.
            </summary>
            <typeparam name="T">The type of the result parsed from the argument.</typeparam>
        </member>
        <member name="T:Sudoku.CommandLine.Arguments.TwoGridArgument">
            <summary>
            Represents two grid argument.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.Arguments.TwoGridArgument.#ctor">
            <summary>
            Initializes a <see cref="T:Sudoku.CommandLine.Arguments.TwoGridArgument"/> instance.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.Arguments.TwoGridArgument.Sudoku#CommandLine#IOptionOrArgument{System#ValueTuple{Sudoku#Concepts#Grid,Sudoku#Concepts#Grid}}#ParseArgument(System.CommandLine.Parsing.ArgumentResult)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.CommandLine.Arguments.TwoGridArgument.ParseArgument(System.CommandLine.Parsing.ArgumentResult)">
            <inheritdoc cref="M:Sudoku.CommandLine.IOptionOrArgument`1.ParseArgument(System.CommandLine.Parsing.ArgumentResult)"/>
        </member>
        <member name="T:Sudoku.CommandLine.CommandLineParser">
            <summary>
            Provides an entry that parses command-line arguments.
            </summary>
        </member>
        <member name="F:Sudoku.CommandLine.CommandLineParser.RootCommand">
            <summary>
            Indicates the root command.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.CommandLineParser.#cctor">
            <static-constructor>
		<summary>
			<para>
				Indicates the <see langword="static" /> constructor of the current type.
			</para>
			<para>
				This constructor will initialize some <see langword="static readonly" /> data members
				of this type that can't use a simple expression to describe the initial value.
			</para>
		</summary>
	</static-constructor>
        </member>
        <member name="M:Sudoku.CommandLine.CommandLineParser.ParseAsync(System.String[])">
            <summary>
            Try to parse the command-line.
            </summary>
            <param name="args">The arguments.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that handles the operation.</returns>
            <remarks>
            In command line project, use the following code to parse command lines:
            <code>
            <see langword="await"/> <see cref="T:Sudoku.CommandLine.CommandLineParser"/>.ParseAsync(<see langword="args"/>);
            </code>
            </remarks>
        </member>
        <member name="T:Sudoku.CommandLine.Commands.CompareCommand">
            <summary>
            Represents compare command.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.Commands.CompareCommand.#ctor">
            <summary>
            Initializes a <see cref="T:Sudoku.CommandLine.Commands.CompareCommand"/> instance.
            </summary>
        </member>
        <member name="P:Sudoku.CommandLine.Commands.CompareCommand.OptionsCore">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.CommandLine.Commands.CompareCommand.ArgumentsCore">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.CommandLine.Commands.CompareCommand.Sudoku#CommandLine#Commands#ICommand#HandleCore()">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.CommandLine.Commands.CompareCommand.HandleCore(System.ValueTuple{Sudoku.Concepts.Grid,Sudoku.Concepts.Grid},Puzzles.Meta.Transforming.BoardComparison)">
            <inheritdoc cref="M:Sudoku.CommandLine.Commands.ICommand.HandleCore()"/>
        </member>
        <member name="T:Sudoku.CommandLine.Commands.ICommand">
            <summary>
            Represents a command.
            </summary>
        </member>
        <member name="P:Sudoku.CommandLine.Commands.ICommand.OptionsCore">
            <summary>
            Indicates the options.
            </summary>
        </member>
        <member name="P:Sudoku.CommandLine.Commands.ICommand.ArgumentsCore">
            <summary>
            Indicates the arguments.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.Commands.ICommand.HandleCore()">
            <summary>
            <para>The backing handler method.</para>
            <para>
            This method only provides a constraint on implementation for multiple arguments with different types.
            <b>Do not consume this method or expose it outside.</b>
            </para>
            </summary>
        </member>
        <member name="T:Sudoku.CommandLine.Commands.MinlexCommand">
            <summary>
            Represents a minlex command.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.Commands.MinlexCommand.#ctor">
            <summary>
            Initializes a <see cref="T:Sudoku.CommandLine.Commands.MinlexCommand"/> instance.
            </summary>
        </member>
        <member name="P:Sudoku.CommandLine.Commands.MinlexCommand.OptionsCore">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.CommandLine.Commands.MinlexCommand.ArgumentsCore">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.CommandLine.Commands.MinlexCommand.Sudoku#CommandLine#Commands#ICommand#HandleCore()">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.CommandLine.Commands.MinlexCommand.HandleCore(Sudoku.Concepts.Grid)">
            <inheritdoc cref="M:Sudoku.CommandLine.Commands.ICommand.HandleCore()"/>
        </member>
        <member name="T:Sudoku.CommandLine.Commands.SolveCommand">
            <summary>
            Represents a solve command.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.Commands.SolveCommand.#ctor">
            <summary>
            Initializes a <see cref="T:Sudoku.CommandLine.Commands.SolveCommand"/> instance.
            </summary>
        </member>
        <member name="P:Sudoku.CommandLine.Commands.SolveCommand.OptionsCore">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.CommandLine.Commands.SolveCommand.ArgumentsCore">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.CommandLine.Commands.SolveCommand.Sudoku#CommandLine#Commands#ICommand#HandleCore()">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.CommandLine.Commands.SolveCommand.HandleCore(Sudoku.Concepts.Grid,Sudoku.Solving.SolverType)">
            <inheritdoc cref="M:Sudoku.CommandLine.Commands.ICommand.HandleCore()"/>
        </member>
        <member name="T:Sudoku.CommandLine.Commands.TransformCommand">
            <summary>
            Represents transform command.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.Commands.TransformCommand.#ctor">
            <summary>
            Initializes a <see cref="T:Sudoku.CommandLine.Commands.TransformCommand"/> instance.
            </summary>
        </member>
        <member name="P:Sudoku.CommandLine.Commands.TransformCommand.OptionsCore">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.CommandLine.Commands.TransformCommand.ArgumentsCore">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.CommandLine.Commands.TransformCommand.Sudoku#CommandLine#Commands#ICommand#HandleCore()">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.CommandLine.Commands.TransformCommand.HandleCore(Sudoku.Concepts.Grid,Sudoku.Shuffling.Transforming.TransformType)">
            <inheritdoc cref="M:Sudoku.CommandLine.Commands.ICommand.HandleCore()"/>
        </member>
        <member name="T:Sudoku.CommandLine.CommonPreprocessors">
            <summary>
            Provides a list of commonly-used preprocessor methods.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.CommonPreprocessors.OutputIfPuzzleNotUnique(Sudoku.Concepts.Grid@,Sudoku.Solving.ISolver,Sudoku.Concepts.Grid@)">
            <summary>
            Output invalid puzzle on puzzle after having been checked.
            </summary>
            <param name="grid">The grid.</param>
            <param name="solver">The solver.</param>
            <param name="solution">The solution.</param>
        </member>
        <member name="T:Sudoku.CommandLine.IOptionOrArgument`1">
            <summary>
            Represents an argument or option.
            </summary>
            <typeparam name="T">The type of the result parsed from the argument or option.</typeparam>
        </member>
        <member name="M:Sudoku.CommandLine.IOptionOrArgument`1.ParseArgument(System.CommandLine.Parsing.ArgumentResult)">
            <summary>
            <para>
            To parse the argument via <see cref="T:System.CommandLine.Parsing.ArgumentResult"/> instance;
            use <see cref="P:System.CommandLine.Parsing.SymbolResult.ErrorMessage"/> to report invalid values.
            </para>
            <para>
            <inheritdoc cref="M:Sudoku.CommandLine.Commands.ICommand.HandleCore()" path="/summary/para[2]"/>
            </para>
            </summary>
            <param name="result">The result.</param>
            <returns>The result instance parsed.</returns>
        </member>
        <member name="T:Sudoku.CommandLine.Options.ComparingMethodOption">
            <summary>
            Represents a comparing method option.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.Options.ComparingMethodOption.#ctor">
            <summary>
            Initializes a <see cref="T:Sudoku.CommandLine.Options.ComparingMethodOption"/> instance.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.Options.ComparingMethodOption.Sudoku#CommandLine#IOptionOrArgument{Puzzles#Meta#Transforming#BoardComparison}#ParseArgument(System.CommandLine.Parsing.ArgumentResult)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.CommandLine.Options.ComparingMethodOption.ParseArgument(System.CommandLine.Parsing.ArgumentResult)">
            <inheritdoc cref="M:Sudoku.CommandLine.IOptionOrArgument`1.ParseArgument(System.CommandLine.Parsing.ArgumentResult)"/>
        </member>
        <member name="T:Sudoku.CommandLine.Options.GridOption">
            <summary>
            Represents a grid option.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.Options.GridOption.#ctor">
            <summary>
            Initializes a <see cref="T:Sudoku.CommandLine.Options.GridOption"/> instance.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.Options.GridOption.#ctor(System.Boolean)">
            <summary>
            Initializes a <see cref="T:Sudoku.CommandLine.Options.GridOption"/> instance.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.Options.GridOption.Sudoku#CommandLine#IOptionOrArgument{Sudoku#Concepts#Grid}#ParseArgument(System.CommandLine.Parsing.ArgumentResult)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.CommandLine.Options.GridOption.ParseArgument(System.CommandLine.Parsing.ArgumentResult,System.Boolean)">
            <inheritdoc cref="M:Sudoku.CommandLine.IOptionOrArgument`1.ParseArgument(System.CommandLine.Parsing.ArgumentResult)"/>
        </member>
        <member name="T:Sudoku.CommandLine.Options.IOption`1">
            <summary>
            Represents an option.
            </summary>
            <typeparam name="T">The type of the result parsed from the option.</typeparam>
        </member>
        <member name="T:Sudoku.CommandLine.Options.SolvingMethodOption">
            <summary>
            Represents a solving method option.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.Options.SolvingMethodOption.#ctor">
            <summary>
            Initializes a <see cref="T:Sudoku.CommandLine.Options.SolvingMethodOption"/> instance.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.Options.SolvingMethodOption.Sudoku#CommandLine#IOptionOrArgument{Sudoku#Solving#SolverType}#ParseArgument(System.CommandLine.Parsing.ArgumentResult)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.CommandLine.Options.SolvingMethodOption.ParseArgument(System.CommandLine.Parsing.ArgumentResult)">
            <inheritdoc cref="M:Sudoku.CommandLine.IOptionOrArgument`1.ParseArgument(System.CommandLine.Parsing.ArgumentResult)"/>
        </member>
        <member name="T:Sudoku.CommandLine.Options.TransformatingMethodOption">
            <summary>
            Provides a transforming method option.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.Options.TransformatingMethodOption.#ctor">
            <summary>
            Initializes a <see cref="T:Sudoku.CommandLine.Options.TransformatingMethodOption"/> instance.
            </summary>
        </member>
        <member name="M:Sudoku.CommandLine.Options.TransformatingMethodOption.Sudoku#CommandLine#IOptionOrArgument{Sudoku#Shuffling#Transforming#TransformType}#ParseArgument(System.CommandLine.Parsing.ArgumentResult)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.CommandLine.Options.TransformatingMethodOption.ParseArgument(System.CommandLine.Parsing.ArgumentResult)">
            <inheritdoc cref="M:Sudoku.CommandLine.IOptionOrArgument`1.ParseArgument(System.CommandLine.Parsing.ArgumentResult)"/>
        </member>
        <member name="T:System.CommandLine.CommandExtensions">
            <summary>
            Provides with extension methods on <see cref="T:System.CommandLine.Command"/>.
            </summary>
            <seealso cref="T:System.CommandLine.Command"/>
        </member>
        <member name="M:System.CommandLine.CommandExtensions.AddRange(System.CommandLine.Command,System.ReadOnlySpan{System.CommandLine.Option})">
            <summary>
            Adds a list of <see cref="T:System.CommandLine.Option"/> instances into the command.
            </summary>
            <param name="this">The command.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:System.CommandLine.CommandExtensions.AddRange(System.CommandLine.Command,System.ReadOnlySpan{System.CommandLine.Argument})">
            <summary>
            Adds a list of <see cref="T:System.CommandLine.Argument"/> instances into the command.
            </summary>
            <param name="this">The command.</param>
            <param name="arguments">The arguments.</param>
        </member>
    </members>
</doc>
