<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.SourceGeneration</name>
    </assembly>
    <members>
        <member name="T:System.StringExtensions">
            <summary>
            Provides with extension methods on <see cref="T:System.String"/>.
            </summary>
            <seealso cref="T:System.String"/>
        </member>
        <member name="M:System.StringExtensions.ToPascalCasing(System.String)">
            <summary>
            Try to convert the specified identifier into pascal casing.
            </summary>
        </member>
        <member name="M:System.StringExtensions.ToCamelCasing(System.String)">
            <summary>
            Try to convert the specified identifier into camel casing.
            </summary>
        </member>
        <member name="M:System.StringExtensions.ToUnderscoreCamelCasing(System.String)">
            <summary>
            Try to convert the specified identifier into camel casing, with a leading underscore character.
            </summary>
        </member>
        <member name="T:Sudoku.SourceGeneration.Generator">
            <summary>
            Represents a source generator type that runs multiple different usage of source output services on compiling code.
            </summary>
        </member>
        <member name="M:Sudoku.SourceGeneration.Generator.Initialize(Microsoft.CodeAnalysis.IncrementalGeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.SourceGeneration.CommonMethods">
            <summary>
            Represents a set of methods that can be used by the types in this file.
            </summary>
        </member>
        <member name="M:Sudoku.SourceGeneration.CommonMethods.SyntaxNodeTypePredicate``1(Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)">
            <summary>
            Determine whether the specified <see cref="T:Microsoft.CodeAnalysis.SyntaxNode"/> is of type <typeparamref name="TSyntaxNode"/>.
            </summary>
            <typeparam name="TSyntaxNode">The possible type of the node.</typeparam>
            <param name="node">Indicates the target node.</param>
            <param name="_"/>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="M:Sudoku.SourceGeneration.CommonMethods.IsPartialTypePredicate``1(``0,System.Threading.CancellationToken)">
            <summary>
            Determine whether the specified type declaration syntax node contains a <see langword="partial"/> modifier.
            </summary>
            <typeparam name="TSyntaxNode">The type of the declaration syntax node.</typeparam>
            <param name="node">The node to be determined.</param>
            <param name="_"/>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="M:Sudoku.SourceGeneration.CommonMethods.IsPartialMethodPredicate(Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)">
            <summary>
            Determine whether the specified <see cref="T:Microsoft.CodeAnalysis.SyntaxNode"/> is a <see cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax"/>,
            and contains <see langword="partial"/> modifier.
            </summary>
            <param name="node">The node.</param>
            <param name="_"/>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="M:Sudoku.SourceGeneration.CommonMethods.NotNullPredicate``1(``0)">
            <summary>
            Determine whether the value is not <see langword="null"/>.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="value">The value.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="M:Sudoku.SourceGeneration.CommonMethods.NotNullSelector``1(``0,System.Threading.CancellationToken)">
            <summary>
            Try to get the internal value without nullability checking.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="value">The value with <c>?</c> token being annotated, but not <see langword="null"/> currently.</param>
            <param name="_"/>
            <returns>The value.</returns>
        </member>
        <member name="M:Sudoku.SourceGeneration.CommonMethods.NotNullSelector``1(System.Nullable{``0},System.Threading.CancellationToken)">
            <summary>
            Try to get the internal value without nullability checking.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="value">The value with <c>?</c> token being annotated, but not <see langword="null"/> currently.</param>
            <param name="_"/>
            <returns>The value.</returns>
        </member>
        <member name="T:Sudoku.SourceGeneration.Handlers.ImplicitFieldHandler">
            <summary>
            The generator handler for implicit fields.
            </summary>
        </member>
        <member name="M:Sudoku.SourceGeneration.Handlers.ImplicitFieldHandler.Transform(Microsoft.CodeAnalysis.GeneratorAttributeSyntaxContext,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.SourceGeneration.Handlers.ImplicitFieldHandler.CollectedResult">
            <summary>
            Indicates the data collected via <see cref="T:Sudoku.SourceGeneration.Handlers.ImplicitFieldHandler"/>.
            </summary>
            <seealso cref="T:Sudoku.SourceGeneration.Handlers.ImplicitFieldHandler"/>
        </member>
        <member name="M:Sudoku.SourceGeneration.Handlers.ImplicitFieldHandler.CollectedResult.#ctor(Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.IPropertySymbol,System.Boolean)">
            <summary>
            Indicates the data collected via <see cref="T:Sudoku.SourceGeneration.Handlers.ImplicitFieldHandler"/>.
            </summary>
            <seealso cref="T:Sudoku.SourceGeneration.Handlers.ImplicitFieldHandler"/>
        </member>
        <member name="T:Sudoku.SourceGeneration.Handlers.PrimaryConstructorMemberHandler">
            <summary>
            The generator handler for primary constructor member parameters.
            </summary>
        </member>
        <member name="M:Sudoku.SourceGeneration.Handlers.PrimaryConstructorMemberHandler.Output(Microsoft.CodeAnalysis.SourceProductionContext,System.Collections.Immutable.ImmutableArray{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.SourceGeneration.Handlers.PrimaryConstructorMemberHandler.Transform(Microsoft.CodeAnalysis.GeneratorSyntaxContext,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.SourceGeneration.Handlers.LocalEmitPropertyStyle">
            <summary>
            Represents a local emit property style.
            </summary>
        </member>
        <member name="F:Sudoku.SourceGeneration.Handlers.LocalEmitPropertyStyle.AssignToProperty">
            <summary>
            Indicates the behavior is to generate an assignment to property:
            <code><![CDATA[public int Property { get; } = value;]]></code>
            </summary>
        </member>
        <member name="F:Sudoku.SourceGeneration.Handlers.LocalEmitPropertyStyle.ReturnParameter">
            <summary>
            Indicates the behavior is to generate a return statement that directly returns parameter:
            <code><![CDATA[public int Property => value;]]></code>
            </summary>
        </member>
        <member name="T:Sudoku.SourceGeneration.Handlers.ParameterLocalData">
            <summary>
            Represents local data of parameter symbol.
            </summary>
            <param name="Symbol">Indicates the symbol itself.</param>
            <param name="FieldPart">Indicates the field part.</param>
            <param name="PropertyPart">Indicates the property part.</param>
        </member>
        <member name="M:Sudoku.SourceGeneration.Handlers.ParameterLocalData.#ctor(Microsoft.CodeAnalysis.IParameterSymbol,Microsoft.CodeAnalysis.AttributeData,Microsoft.CodeAnalysis.AttributeData)">
            <summary>
            Represents local data of parameter symbol.
            </summary>
            <param name="Symbol">Indicates the symbol itself.</param>
            <param name="FieldPart">Indicates the field part.</param>
            <param name="PropertyPart">Indicates the property part.</param>
        </member>
        <member name="P:Sudoku.SourceGeneration.Handlers.ParameterLocalData.Symbol">
            <summary>Indicates the symbol itself.</summary>
        </member>
        <member name="P:Sudoku.SourceGeneration.Handlers.ParameterLocalData.FieldPart">
            <summary>Indicates the field part.</summary>
        </member>
        <member name="P:Sudoku.SourceGeneration.Handlers.ParameterLocalData.PropertyPart">
            <summary>Indicates the property part.</summary>
        </member>
        <member name="T:Sudoku.SourceGeneration.Handlers.TypeImplHandler">
            <summary>
            The hub file that generates modal source code on some commonly-used members.
            </summary>
        </member>
        <member name="T:Sudoku.SourceGeneration.Handlers.TypeImplFlag">
            <summary>
            Indicates the implementation flags.
            </summary>
        </member>
        <member name="T:Sudoku.SourceGeneration.Handlers.LengthOrCountPropertyKind">
            <summary>
            Indicates the property kind of length or count property.
            </summary>
        </member>
        <member name="T:Sudoku.SourceGeneration.Handlers.EqualsBehavior">
            <summary>
            Represents a behavior for generating <see cref="M:System.Object.Equals(System.Object)"/> method.
            </summary>
            <seealso cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="T:Sudoku.SourceGeneration.Handlers.GetHashCodeBehavior">
            <summary>
            Represents a behavior for generating <see cref="M:System.Object.GetHashCode"/> method.
            </summary>
            <seealso cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="T:Sudoku.SourceGeneration.Handlers.ToStringBehavior">
            <summary>
            Represents a behavior for generating <see cref="M:System.Object.ToString"/> method.
            </summary>
            <seealso cref="M:System.Object.ToString"/>
        </member>
        <member name="T:Sudoku.SourceGeneration.Handlers.EqualityOperatorsBehavior">
            <summary>
            Represents a behavior for generating equality operators.
            </summary>
        </member>
        <member name="T:Sudoku.SourceGeneration.Handlers.ComparisonOperatorsBehavior">
            <summary>
            Represents a behavior for generating comparison operators.
            </summary>
        </member>
        <member name="T:Sudoku.SourceGeneration.Handlers.PrimaryConstructor">
            <summary>
            Provides with primary constructor operations.
            </summary>
        </member>
        <member name="M:Sudoku.SourceGeneration.Handlers.PrimaryConstructor.MapMemberNames``1(Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.INamedTypeSymbol,System.Func{Microsoft.CodeAnalysis.AttributeData,System.Boolean},System.Func{Microsoft.CodeAnalysis.ISymbol,``0},System.Threading.CancellationToken)">
            <summary>
            Try to map member names.
            </summary>
            <typeparam name="TExtraData">The type of projected result after argument <paramref name="extraDataSelector"/> handled.</typeparam>
            <param name="this">The type symbol.</param>
            <param name="model">The semantic model instance.</param>
            <param name="parameterList">The parameter list.</param>
            <param name="targetAttributeSymbol">The primary constructor parameter type symbol.</param>
            <param name="attributeMatcher">Indicates the primary constructor attribute matcher.</param>
            <param name="extraDataSelector">Extra data selector.</param>
            <param name="cancellationToken">The cancellation token that can cancel the operation.</param>
            <returns>A list of values (member names and extra data).</returns>
        </member>
        <member name="T:Sudoku.SourceGeneration.Handlers.Extensions">
            <target name="class" when="extension">
				<summary>
					Provides with file-local extension methods.
				</summary>
			</target>
        </member>
        <member name="M:Sudoku.SourceGeneration.Handlers.Extensions.InternalHandle(System.String,System.String)">
            <summary>
            Internal handle the naming rule, converting it into a valid identifier via specified parameter name.
            </summary>
            <param name="this">The naming rule.</param>
            <param name="parameterName">The parameter name.</param>
            <returns>The final identifier.</returns>
        </member>
        <member name="T:Sudoku.SourceGeneration.LocalMemberKinds">
            <summary>
            The member kind names.
            </summary>
        </member>
        <member name="F:Sudoku.SourceGeneration.LocalMemberKinds.Field">
            <summary>
            Indicates the generated member kind is fields.
            </summary>
        </member>
        <member name="F:Sudoku.SourceGeneration.LocalMemberKinds.Property">
            <summary>
            Indicates the generated member kind is properties.
            </summary>
        </member>
        <member name="T:SolutionVersion">
            <summary>
            Represents the data that describes the version used in the project or solution.
            </summary>
        </member>
        <member name="F:SolutionVersion.Value">
            <summary>
            Indicates the version value represented as a <see cref="T:System.String"/> value.
            </summary>
        </member>
    </members>
</doc>
