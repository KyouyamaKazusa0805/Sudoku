<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.Workflow.Bot.Oicq</name>
    </assembly>
    <members>
        <member name="T:Sudoku.Workflow.Bot.Oicq.Annotations.DescriptionAttribute">
            <summary>
            表示描述信息的注解。用于一个枚举字段，表示该字段对应的描述信息。
            </summary>
        </member>
        <member name="M:Sudoku.Workflow.Bot.Oicq.Annotations.DescriptionAttribute.#ctor(System.String)">
            <summary>
            实例化一个 <see cref="T:Sudoku.Workflow.Bot.Oicq.Annotations.DescriptionAttribute"/> 类型的实例，并给出其描述信息。
            </summary>
            <param name="description">字段的描述信息。</param>
        </member>
        <member name="P:Sudoku.Workflow.Bot.Oicq.Annotations.DescriptionAttribute.Description">
            <summary>
            表示该字段的描述信息。
            </summary>
        </member>
        <member name="T:Sudoku.Workflow.Bot.Oicq.Annotations.EnumFieldAttribute">
            <summary>
            表示一个抽象基类型，为所有用于标记给枚举字段的特性类型提供基类型抽象。
            虽然里面没有什么玩意儿，但它可能会被用于例如模式匹配之类的地方上。
            </summary>
        </member>
        <member name="T:Sudoku.Workflow.Bot.Oicq.Annotations.ItemGroupAttribute">
            <summary>
            表示物品的详细分组的注解。用于一个枚举字段，表示该字段对应的物品的分组。
            </summary>
        </member>
        <member name="M:Sudoku.Workflow.Bot.Oicq.Annotations.ItemGroupAttribute.#ctor(Sudoku.Workflow.Bot.Oicq.ComponentModel.ItemGroup)">
            <summary>
            实例化一个 <see cref="T:Sudoku.Workflow.Bot.Oicq.Annotations.ItemGroupAttribute"/> 类型的实例，并给出其组别。
            </summary>
            <param name="group">字段对应物品的组别。</param>
        </member>
        <member name="P:Sudoku.Workflow.Bot.Oicq.Annotations.ItemGroupAttribute.Group">
            <summary>
            表示该字段对应物品的组别。
            </summary>
        </member>
        <member name="T:Sudoku.Workflow.Bot.Oicq.Annotations.NameAttribute">
            <summary>
            表示名字的注解。用于一个枚举字段，表示该字段对应的名字（或其他用来显示的名称）的信息。
            </summary>
        </member>
        <member name="M:Sudoku.Workflow.Bot.Oicq.Annotations.NameAttribute.#ctor(System.String)">
            <summary>
            实例化一个 <see cref="T:Sudoku.Workflow.Bot.Oicq.Annotations.NameAttribute"/> 类型的实例，并给出其名称。
            </summary>
            <param name="name">字段的名称。</param>
        </member>
        <member name="P:Sudoku.Workflow.Bot.Oicq.Annotations.NameAttribute.Name">
            <summary>
            表示该字段的名称。
            </summary>
        </member>
        <member name="T:Sudoku.Workflow.Bot.Oicq.Annotations.PriceAttribute">
            <summary>
            表示价格的注解。用于一个枚举字段，表示该字段对应的物品的价格。
            </summary>
        </member>
        <member name="M:Sudoku.Workflow.Bot.Oicq.Annotations.PriceAttribute.#ctor(System.Int32)">
            <summary>
            实例化一个 <see cref="T:Sudoku.Workflow.Bot.Oicq.Annotations.PriceAttribute"/> 类型的实例，并给出价格。
            </summary>
            <param name="price">物品的价格。</param>
        </member>
        <member name="P:Sudoku.Workflow.Bot.Oicq.Annotations.PriceAttribute.Price">
            <summary>
            表示物品的价格。
            </summary>
        </member>
        <member name="T:Sudoku.Workflow.Bot.Oicq.ComponentModel.GameMode">
            <summary>
            表示一种 PK 答题模式。
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.ComponentModel.GameMode.FindDifference">
            <summary>
            表示游戏规则为“九数找相同”。规则：预先给出一道数独题目，并给出 9 处位置，带上 1 到 9 的编号。
            其中只有唯一一个格子，它自身的填数结果，和它当前给出的编号数值是一致的。玩家需要找到并回答该相同的编号；
            极少数时候也会存在一个相同的都没有的情况，这个时候需要玩家回答 0 作为答案。
            </summary>
        </member>
        <member name="T:Sudoku.Workflow.Bot.Oicq.ComponentModel.Item">
            <summary>
            表示一种物品。该物品可能可以被购买到，也可能在商店里不提供购买，但它可以作为用户保留到数据内，作为数据的一部分。
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.ComponentModel.Item.Card">
            <summary>
            表示一张强化卡。
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.ComponentModel.Item.CloverLevel1">
            <summary>
            表示Ⅰ级三叶草。它可以帮助你在强化的时候，将成功率改为原来的 1.1 倍。
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.ComponentModel.Item.CloverLevel2">
            <summary>
            表示Ⅱ级三叶草。它可以帮助你在强化的时候，将成功率改为原来的 1.2 倍。
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.ComponentModel.Item.CloverLevel3">
            <summary>
            表示Ⅲ级三叶草。它可以帮助你在强化的时候，将成功率改为原来的 1.4 倍。
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.ComponentModel.Item.CloverLevel4">
            <summary>
            表示Ⅳ级三叶草。它可以帮助你在强化的时候，将成功率改为原来的 1.7 倍。
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.ComponentModel.Item.CloverLevel5">
            <summary>
            表示Ⅴ级三叶草。它可以帮助你在强化的时候，将成功率改为原来的 2.0 倍。
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.ComponentModel.Item.CloverLevel6">
            <summary>
            表示Ⅵ级三叶草。它可以帮助你在强化的时候，将成功率改为原来的 2.4 倍。
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.ComponentModel.Item.CloverLevel7">
            <summary>
            表示Ⅶ级三叶草。它可以帮助你在强化的时候，将成功率改为原来的 3.0 倍。
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.ComponentModel.Item.CloverLevel8">
            <summary>
            表示Ⅷ级三叶草。它可以帮助你在强化的时候，将成功率改为原来的 3.3 倍。
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.ComponentModel.Item.CloverLevel9">
            <summary>
            表示Ⅸ级三叶草。它可以帮助你在强化的时候，将成功率改为原来的 3.6 倍。
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.ComponentModel.Item.CloverFinal">
            <summary>
            表示终级三叶草。它可以帮助你在强化的时候，将成功率改为原来的 4.0 倍。
            </summary>
        </member>
        <member name="T:Sudoku.Workflow.Bot.Oicq.ComponentModel.ItemExtensions">
            <summary>
            为 <see cref="T:Sudoku.Workflow.Bot.Oicq.ComponentModel.Item"/> 的实例提供扩展方法。
            </summary>
            <seealso cref="T:Sudoku.Workflow.Bot.Oicq.ComponentModel.Item"/>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.ComponentModel.ItemExtensions.ItemTypeInfo">
            <summary>
            这是一个 <see langword="typeof"/>(<see cref="T:Sudoku.Workflow.Bot.Oicq.ComponentModel.Item"/>) 的缓存字段，避免反复产生新的结果。
            </summary>
        </member>
        <member name="M:Sudoku.Workflow.Bot.Oicq.ComponentModel.ItemExtensions.GetName(Sudoku.Workflow.Bot.Oicq.ComponentModel.Item)">
            <summary>
            获得物品的名字。
            </summary>
            <exception cref="T:System.InvalidOperationException">如果该实例没有标记 <see cref="T:Sudoku.Workflow.Bot.Oicq.Annotations.NameAttribute"/> 特性，就会产生此异常。</exception>
        </member>
        <member name="M:Sudoku.Workflow.Bot.Oicq.ComponentModel.ItemExtensions.GetName(Sudoku.Workflow.Bot.Oicq.ComponentModel.Item,System.String)">
            <summary>
            获得物品的名字。如果字段没有标记 <see cref="T:Sudoku.Workflow.Bot.Oicq.Annotations.NameAttribute"/>，那么给出的第二个参数 <paramref name="defaultValue"/> 则会作为结果返回，不产生异常。
            </summary>
        </member>
        <member name="M:Sudoku.Workflow.Bot.Oicq.ComponentModel.ItemExtensions.GetDescription(Sudoku.Workflow.Bot.Oicq.ComponentModel.Item)">
            <summary>
            获得物品的描述信息。如果字段没有标记 <see cref="T:Sudoku.Workflow.Bot.Oicq.Annotations.DescriptionAttribute"/>，那么就会返回 <see langword="null"/>。
            </summary>
        </member>
        <member name="M:Sudoku.Workflow.Bot.Oicq.ComponentModel.ItemExtensions.GetDescription(Sudoku.Workflow.Bot.Oicq.ComponentModel.Item,System.String)">
            <summary>
            获得物品的描述信息。
            如果字段没有标记 <see cref="T:Sudoku.Workflow.Bot.Oicq.Annotations.DescriptionAttribute"/>，那么给出的第二个参数 <paramref name="defaultValue"/> 则会作为结果返回，不产生异常。
            </summary>
        </member>
        <member name="M:Sudoku.Workflow.Bot.Oicq.ComponentModel.ItemExtensions.IsBuyable(Sudoku.Workflow.Bot.Oicq.ComponentModel.Item,System.Int32@)">
            <summary>
            返回是否物品可以购买到。如果返回 <see langword="true"/>，那么参数 <paramref name="price"/> 还会返回处该物品的价格。
            </summary>
        </member>
        <member name="M:Sudoku.Workflow.Bot.Oicq.ComponentModel.ItemExtensions.GetPrice(Sudoku.Workflow.Bot.Oicq.ComponentModel.Item)">
            <summary>
            获得物品的购买时的价格。
            </summary>
            <exception cref="T:System.InvalidOperationException">如果物品无法被购买到，就会产生此异常。</exception>
        </member>
        <member name="M:Sudoku.Workflow.Bot.Oicq.ComponentModel.ItemExtensions.GetGroup(Sudoku.Workflow.Bot.Oicq.ComponentModel.Item)">
            <summary>
            获得物品的对应组别。
            </summary>
            <exception cref="T:System.InvalidOperationException">如果该实例没有标记 <see cref="T:Sudoku.Workflow.Bot.Oicq.Annotations.ItemGroupAttribute"/> 特性，就会产生此异常。</exception>
        </member>
        <member name="T:Sudoku.Workflow.Bot.Oicq.ComponentModel.ItemGroup">
            <summary>
            表示一个物品的分组。
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.ComponentModel.ItemGroup.Card">
            <summary>
            表示物品是属于强化卡组别的。
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.ComponentModel.ItemGroup.Clover">
            <summary>
            表示物品是属于三叶草组别的。
            </summary>
        </member>
        <member name="T:Sudoku.Workflow.Bot.Oicq.ComponentModel.User">
            <summary>
            表示一个可提供 JSON 序列化/反序列化的用户基本数据。
            </summary>
        </member>
        <member name="P:Sudoku.Workflow.Bot.Oicq.ComponentModel.User.Number">
            <summary>
            用户的账号。
            </summary>
        </member>
        <member name="P:Sudoku.Workflow.Bot.Oicq.ComponentModel.User.CardLevel">
            <summary>
            用户的强化卡最高级别。
            </summary>
        </member>
        <member name="P:Sudoku.Workflow.Bot.Oicq.ComponentModel.User.ExperiencePoint">
            <summary>
            用户在使用机器人期间积攒的经验值。
            </summary>
        </member>
        <member name="P:Sudoku.Workflow.Bot.Oicq.ComponentModel.User.Coin">
            <summary>
            用户在使用机器人期间积攒的金币。
            </summary>
        </member>
        <member name="P:Sudoku.Workflow.Bot.Oicq.ComponentModel.User.ComboCheckedIn">
            <summary>
            表示用户连续签到的天数。
            </summary>
        </member>
        <member name="P:Sudoku.Workflow.Bot.Oicq.ComponentModel.User.LastCheckIn">
            <summary>
            记录的是用户上一次签到时候的时间。之所以不是 <see cref="T:System.TimeOnly"/> 是因为程序需要判别签到是否连续，需要明确知晓日期；
            而之所以不是 <see cref="T:System.DateOnly"/> 是因为程序需要按签到的精确时间提示用户当天已经签过到了。
            </summary>
        </member>
        <member name="P:Sudoku.Workflow.Bot.Oicq.ComponentModel.User.UplevelingCards">
            <summary>
            用于预存的强化卡。强化卡用于强化操作。强化卡等级越高，那么在获得经验或金币的时候，可以越多获得它们。
            </summary>
        </member>
        <member name="P:Sudoku.Workflow.Bot.Oicq.ComponentModel.User.Items">
            <summary>
            表示用户除了强化卡外的物品。
            </summary>
        </member>
        <member name="P:Sudoku.Workflow.Bot.Oicq.ComponentModel.User.CorrectedCount">
            <summary>
            表示用户游玩 PK 时答对了的题目数量的数据。
            </summary>
        </member>
        <member name="P:Sudoku.Workflow.Bot.Oicq.ComponentModel.User.TriedCount">
            <summary>
            表示用户游玩 PK 时回答题目的数据。因为游戏允许一轮多次回答题目，因此一道题用户回答了三次，第三次才正确，那么这个属性将记录的数据是 3 而不是 1。
            </summary>
        </member>
        <member name="P:Sudoku.Workflow.Bot.Oicq.ComponentModel.User.TotalPlayingCount">
            <summary>
            表示用户一共尝试完成了多少次答题。
            </summary>
        </member>
        <member name="T:Sudoku.Workflow.Bot.Oicq.Constants">
            <summary>
            表示该项目里反复使用的一些常量或静态只读量。
            <b><i>虽然名字里写的是常量（constant），但是它仍然可以表示一些单纯只是只读，但不一定非得是编译期常量的量。</i></b>
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.Constants.BotNumber">
            <summary>
            表示机器人的 QQ 账号。<b>如果你要使用机器人，请修改喂你自己的机器人的账号。</b>
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.Constants.GodNumber">
            <summary>
            表示一个全局最高权限的 QQ 账号。该账号可以在任何可以使用的地方使用机器人，避免权限不够导致触发不成功的情况。
            </summary>
        </member>
        <member name="F:Sudoku.Workflow.Bot.Oicq.Constants.SudokuGroupNumber">
            <summary>
            这个是单独为数独群设立的一个特殊群账号。很多特殊限制都跟这个特殊群有关系。
            </summary>
        </member>
        <member name="T:Sudoku.Workflow.Bot.Oicq.Constants.Patterns">
            <summary>
            表示项目里会被使用到的、但被预先处理过的一些正则表达式实例。
            </summary>
        </member>
        <member name="M:Sudoku.Workflow.Bot.Oicq.Constants.Patterns.BilibiliPattern">
            <remarks>
            Pattern explanation:<br/>
            <code>
            ○ 1st capture group.<br/>
                ○ Match with 2 alternative expressions, atomically.<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ 2nd capture group.<br/>
                            ○ Match the string "哔哩".<br/>
                        ○ Match the same text as matched by the 2nd capture group.<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Bb].<br/>
                        ○ Match with 2 alternative expressions, atomically.<br/>
                            ○ Match a sequence of expressions.<br/>
                                ○ Match a whitespace character atomically at most 3 times.<br/>
                                ○ Match '站'.<br/>
                            ○ Match a sequence of expressions.<br/>
                                ○ Match 'i'.<br/>
                                ○ 3rd capture group.<br/>
                                    ○ Match the string "li".<br/>
                                ○ Match the string "bi".<br/>
                                ○ Match the same text as matched by the 3rd capture group.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Sudoku.Workflow.Bot.Oicq.Constants.Patterns.ColorIdPattern">
            <remarks>
            Pattern explanation:<br/>
            <code>
            ○ Match '#'.<br/>
            ○ 1st capture group.<br/>
                ○ Match with 2 alternative expressions, atomically.<br/>
                    ○ Match a character in the set [1-9].<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match '1'.<br/>
                        ○ Match a character in the set [0-5].<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Sudoku.Workflow.Bot.Oicq.Constants.Patterns.ColorHexValuePattern">
            <remarks>
            Pattern explanation:<br/>
            <code>
            ○ Match '#'.<br/>
            ○ Match a character in the set [A-Fa-f\d] exactly 6 times.<br/>
            ○ Optional (greedy).<br/>
                ○ 1st capture group.<br/>
                    ○ Match a character in the set [A-Fa-f\d] exactly 2 times.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Sudoku.Workflow.Bot.Oicq.Constants.Patterns.ChineseHouseIndexPattern">
            <remarks>
            Pattern explanation:<br/>
            <code>
            ○ Match a character in the set [\u5217\u5BAB\u884C].<br/>
            ○ Match a whitespace character atomically any number of times.<br/>
            ○ Match a character in the set [1-9].<br/>
            </code>
            </remarks>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.BilibiliPattern_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the BilibiliPattern method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.BilibiliPattern_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.BilibiliPattern_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.BilibiliPattern_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.BilibiliPattern_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.BilibiliPattern_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.BilibiliPattern_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.BilibiliPattern_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.BilibiliPattern_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ColorIdPattern_1">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the ColorIdPattern method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.ColorIdPattern_1.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ColorIdPattern_1.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ColorIdPattern_1.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ColorIdPattern_1.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ColorIdPattern_1.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ColorIdPattern_1.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ColorIdPattern_1.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ColorIdPattern_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ColorHexValuePattern_2">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the ColorHexValuePattern method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.ColorHexValuePattern_2.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ColorHexValuePattern_2.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ColorHexValuePattern_2.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ColorHexValuePattern_2.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ColorHexValuePattern_2.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ColorHexValuePattern_2.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ColorHexValuePattern_2.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ColorHexValuePattern_2.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ChineseHouseIndexPattern_3">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the ChineseHouseIndexPattern method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.ChineseHouseIndexPattern_3.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ChineseHouseIndexPattern_3.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ChineseHouseIndexPattern_3.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ChineseHouseIndexPattern_3.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.ChineseHouseIndexPattern_3.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ChineseHouseIndexPattern_3.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ChineseHouseIndexPattern_3.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.ChineseHouseIndexPattern_3.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32,System.Int32)">
            <summary>Pushes 2 values onto the backtracking stack.</summary>
        </member>
    </members>
</doc>
