<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.Analytics</name>
    </assembly>
    <members>
        <member name="T:Sudoku.Analytics.AnalysisContext">
            <summary>
            Defines a context that is used by step searchers to check the details of the solving and analysis information.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="grid">The reference to the puzzle.</param>
            <param name="onlyFindOne">Indicates whether the step searcher only find one possible step and exit.</param>
        </member>
        <member name="M:Sudoku.Analytics.AnalysisContext.#ctor(System.Collections.Generic.List{Sudoku.Analytics.Step},Sudoku.Concepts.Grid@,System.Boolean)">
            <summary>
            Defines a context that is used by step searchers to check the details of the solving and analysis information.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="grid">The reference to the puzzle.</param>
            <param name="onlyFindOne">Indicates whether the step searcher only find one possible step and exit.</param>
        </member>
        <member name="F:Sudoku.Analytics.AnalysisContext.Grid">
            <summary>
            Indicates the puzzle to be solved and analyzed.
            </summary>
            <remarks>
            <target name="field">
				<b>
					<i>
						This field is not encapsulated into a property because C# doesn't support auto read-only properties
						returning <see langword="ref" /> or <see langword="ref readonly" />.
					</i>
				</b>
			</target>
            </remarks>
        </member>
        <member name="P:Sudoku.Analytics.AnalysisContext.OnlyFindOne">
            <summary>
            Indicates whether the solver only find one possible step and exit the searcher.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.AnalysisContext.PreviousSetDigit">
            <summary>
            Indicates the previously set digit.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.AnalysisContext.Accumulator">
            <summary>
            <para>
            <para>The accumulator to store each step.</para>
            </para>
            <para>
            If <see cref="P:Sudoku.Analytics.AnalysisContext.OnlyFindOne"/> is set to <see langword="true"/>,
            this argument will become useless because we only finding one step is okay,
            so we may not use the accumulator to store all possible steps, in order to optimize the performance.
            Therefore, this argument can be <see langword="null"/> in this case.
            </para>
            </summary>
            <seealso cref="P:Sudoku.Analytics.AnalysisContext.OnlyFindOne"/>
        </member>
        <member name="T:Sudoku.Analytics.Analyzer">
            <summary>
            Provides an analyzer that solves a sudoku puzzle using the human-friendly logics, and creates an <see cref="T:Sudoku.Analytics.AnalyzerResult"/> instance
            indicating the analytics data.
            </summary>
            <seealso cref="T:Sudoku.Analytics.AnalyzerResult"/>
        </member>
        <member name="P:Sudoku.Analytics.Analyzer.IsFullApplying">
            <summary>
            Indicates whether the solver will apply all found steps in a step searcher,
            in order to solve a puzzle faster. If the value is <see langword="true"/>,
            the third argument of <see cref="M:Sudoku.Analytics.StepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)"/>
            will be set <see langword="false"/> value, in order to find all possible steps in a step searcher,
            and all steps will be applied at the same time.
            </summary>
            <remarks>
            The default value is <see langword="false"/>.
            </remarks>
            <seealso cref="M:Sudoku.Analytics.StepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)"/>
        </member>
        <member name="P:Sudoku.Analytics.Analyzer.IgnoreSlowAlgorithms">
            <summary>
            Indicates whether the solver will ignore slow step searchers being configured <see cref="F:Sudoku.Analytics.Metadata.ConditionalCase.UnlimitedTimeComplexity"/>.
            </summary>
            <remarks>
            The default value is <see langword="false"/>.
            </remarks>
            <seealso cref="F:Sudoku.Analytics.Metadata.ConditionalCase.UnlimitedTimeComplexity"/>
        </member>
        <member name="P:Sudoku.Analytics.Analyzer.IgnoreHighAllocationAlgorithms">
            <summary>
            Indicates whether the solver will ignore slow step searchers being configured
            <see cref="F:Sudoku.Analytics.Metadata.ConditionalCase.UnlimitedSpaceComplexity"/>.
            </summary>
            <remarks>
            The default value is <see langword="false"/>.
            </remarks>
            <seealso cref="F:Sudoku.Analytics.Metadata.ConditionalCase.UnlimitedSpaceComplexity"/>
        </member>
        <member name="P:Sudoku.Analytics.Analyzer.CustomSearcherCollection">
            <summary>
            <para>
            Indicates the custom searcher collection you defined to solve a puzzle. By default,
            the solver will use <see cref="P:Sudoku.Analytics.StepSearcherPool.BuiltIn"/> to solve a puzzle.
            If you assign a new array of <see cref="T:Sudoku.Analytics.StepSearcher"/>s into this property
            the step searchers will use this property instead of <see cref="P:Sudoku.Analytics.StepSearcherPool.BuiltIn"/> to solve a puzzle.
            </para>
            <para>
            Please note that the property will keep the <see langword="null"/> value if you don't assign any values into it;
            however, if you want to use the customized collection to solve a puzzle, assign a non-<see langword="null"/>
            array into it.
            </para>
            </summary>
            <seealso cref="P:Sudoku.Analytics.StepSearcherPool.BuiltIn"/>
        </member>
        <member name="P:Sudoku.Analytics.Analyzer.TargetSearcherCollection">
            <summary>
            Indicates the target step searcher collection.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Analyzer.Solve(Sudoku.Concepts.Grid@,System.IProgress{System.Double},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.Analyzer.InternalSolve(Sudoku.Concepts.Grid@,Sudoku.Concepts.Grid@,System.Boolean,Sudoku.Analytics.AnalyzerResult,System.IProgress{System.Double},System.Threading.CancellationToken)">
            <summary>
            The inner solving operation method.
            </summary>
            <param name="puzzle">
            <inheritdoc cref="M:Sudoku.Analytics.Analyzer.Solve(Sudoku.Concepts.Grid@,System.IProgress{System.Double},System.Threading.CancellationToken)" path="/param[@name='puzzle']"/>
            </param>
            <param name="solution">The solution of the puzzle. Some step searchers will use this value.</param>
            <param name="isSukaku">A <see cref="T:System.Boolean"/> value indicating whether the puzzle is a sukaku.</param>
            <param name="resultBase">The base solver result already included the base information.</param>
            <param name="progress">
            <inheritdoc cref="M:Sudoku.Analytics.Analyzer.Solve(Sudoku.Concepts.Grid@,System.IProgress{System.Double},System.Threading.CancellationToken)" path="/param[@name='progress']"/>
            </param>
            <param name="cancellationToken">
            <inheritdoc cref="M:Sudoku.Analytics.Analyzer.Solve(Sudoku.Concepts.Grid@,System.IProgress{System.Double},System.Threading.CancellationToken)" path="/param[@name='cancellationToken']"/>
            </param>
            <returns>The solver result.</returns>
            <exception cref="T:Sudoku.Analytics.WrongStepException">Throws when found wrong steps to apply.</exception>
            <exception cref="T:System.OperationCanceledException">Throws when the operation is canceled.</exception>
        </member>
        <member name="T:Sudoku.Analytics.AnalyzerResult">
            <summary>
            Provides the result after <see cref="T:Sudoku.Analytics.Analyzer"/> solving a puzzle.
            </summary>
            <param name="Puzzle"><inheritdoc cref="P:Sudoku.Solving.Mechanism.IComplexSolverResult`2.Puzzle" path="/summary"/></param>
        </member>
        <member name="M:Sudoku.Analytics.AnalyzerResult.#ctor(Sudoku.Concepts.Grid@)">
            <summary>
            Provides the result after <see cref="T:Sudoku.Analytics.Analyzer"/> solving a puzzle.
            </summary>
            <param name="Puzzle"><inheritdoc cref="P:Sudoku.Solving.Mechanism.IComplexSolverResult`2.Puzzle" path="/summary"/></param>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.Puzzle">
            <summary><inheritdoc cref="P:Sudoku.Solving.Mechanism.IComplexSolverResult`2.Puzzle" path="/summary"/></summary>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.IsSolved">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.MaxDifficulty">
            <summary>
            Indicates the maximum difficulty of the puzzle.
            </summary>
            <remarks>
            When the puzzle is solved by <see cref="T:Sudoku.Analytics.Analyzer"/>,
            the value will be the maximum value among all difficulty ratings in solving steps. If the puzzle has not been solved,
            or else the puzzle is solved by other solvers, this value will be always <c>20.0M</c>.
            </remarks>
            <seealso cref="T:Sudoku.Analytics.Analyzer"/>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.TotalDifficulty">
            <summary>
            Indicates the total difficulty rating of the puzzle.
            </summary>
            <remarks>
            When the puzzle is solved by <see cref="T:Sudoku.Analytics.Analyzer"/>, the value will be the sum of all difficulty ratings of steps.
            If the puzzle has not been solved, the value will be the sum of all difficulty ratings of steps recorded in <see cref="P:Sudoku.Analytics.AnalyzerResult.Steps"/>.
            However, if the puzzle is solved by other solvers, this value will be <c>0</c>.
            </remarks>
            <seealso cref="T:Sudoku.Analytics.Analyzer"/>
            <seealso cref="P:Sudoku.Analytics.AnalyzerResult.Steps"/>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.PearlDifficulty">
            <summary>
            Indicates the pearl difficulty rating of the puzzle, calculated during only by <see cref="T:Sudoku.Analytics.Analyzer"/>.
            </summary>
            <remarks>
            When the puzzle is solved, the value will be the difficulty rating of the first solving step.
            If the puzzle has not solved or the puzzle is solved by other solvers, this value will be always <c>0</c>.
            </remarks>
            <seealso cref="T:Sudoku.Analytics.Analyzer"/>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.DiamondDifficulty">
            <summary>
            <para>
            Indicates the pearl difficulty rating of the puzzle, calculated during only by <see cref="T:Sudoku.Analytics.Analyzer"/>.
            </para>
            <para>
            When the puzzle is solved, the value will be the difficulty rating of the first step before the first one
            whose conclusion is <see cref="F:Sudoku.Solving.ConclusionType.Assignment"/>.
            If the puzzle has not solved or solved by other solvers, this value will be <c>20.0M</c>.
            </para>
            </summary>
            <seealso cref="T:Sudoku.Analytics.Analyzer"/>
            <seealso cref="F:Sudoku.Solving.ConclusionType.Assignment"/>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.SolvingStepsCount">
            <summary>
            Indicates the number of all solving steps recorded.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.FailedReason">
            <summary>
            Indicates why the solving operation is failed.
            This property is meaningless when <see cref="P:Sudoku.Analytics.AnalyzerResult.IsSolved"/> keeps the <see langword="true"/> value.
            </summary>
            <seealso cref="P:Sudoku.Analytics.AnalyzerResult.IsSolved"/>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.DifficultyLevel">
            <summary>
            Indicates the difficulty level of the puzzle.
            If the puzzle has not solved or solved by other solvers, this value will be <see cref="F:Sudoku.Analytics.Categorization.DifficultyLevel.Unknown"/>.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.Solution">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.ElapsedTime">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.StepGrids">
            <summary>
            Indicates a list, whose element is the intermediate grid for each step.
            </summary>
            <seealso cref="P:Sudoku.Analytics.AnalyzerResult.Steps"/>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.WrongStep">
            <summary>
            <para>
            Indicates the wrong step found. In general cases, if the property <see cref="P:Sudoku.Analytics.AnalyzerResult.IsSolved"/> keeps
            <see langword="false"/> value, it'll mean the puzzle is invalid to solve, or the solver has found
            one error step to apply, that causes the original puzzle <see cref="P:Sudoku.Analytics.AnalyzerResult.Puzzle"/> become invalid.
            In this case we can check this property to get the wrong information to debug the error,
            or tell the author himself directly, with the inner value of this property held.
            </para>
            <para>
            However, if the puzzle is successful to be solved, the property won't contain any value,
            so it'll keep the <see langword="null"/> reference. Therefore, please check the nullability
            of this property before using.
            </para>
            <para>
            In general, this table will tell us the nullability of this property:
            <list type="table">
            <listheader>
            <term>Nullability</term>
            <description>Description</description>
            </listheader>
            <item>
            <term>Not <see langword="null"/></term>
            <description>The puzzle is failed to solve, and the solver has found an invalid step to apply.</description>
            </item>
            <item>
            <term><see langword="null"/></term>
            <description>Other cases.</description>
            </item>
            </list>
            </para>
            </summary>
            <seealso cref="P:Sudoku.Analytics.AnalyzerResult.IsSolved"/>
            <seealso cref="P:Sudoku.Analytics.AnalyzerResult.Puzzle"/>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.Bottleneck">
            <summary>
            Gets the bottleneck during the whole grid solving. Returns <see langword="null"/> if the property
            <see cref="P:Sudoku.Analytics.AnalyzerResult.Steps"/> is default case (not initialized or empty).
            </summary>
            <seealso cref="P:Sudoku.Analytics.AnalyzerResult.Steps"/>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.Steps">
            <summary>
            Indicates all solving steps that the solver has recorded.
            </summary>
            <seealso cref="P:Sudoku.Analytics.AnalyzerResult.StepGrids"/>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.UnhandledException">
            <summary>
            <inheritdoc cref="P:Sudoku.Solving.Mechanism.IComplexSolverResult`2.UnhandledException" path="/summary"/>
            </summary>
            <remarks>
            You can visit the property value if the property <see cref="P:Sudoku.Analytics.AnalyzerResult.FailedReason"/>
            is <see cref="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.ExceptionThrown"/> or <see cref="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.WrongStep"/>.
            </remarks>
            <seealso cref="P:Sudoku.Analytics.AnalyzerResult.FailedReason"/>
            <seealso cref="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.ExceptionThrown"/>
            <seealso cref="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.WrongStep"/>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.SolvingPath">
            <summary>
            <para>Indicates a list of pairs of information about each step.</para>
            <para>
            If the puzzle cannot be solved due to some reason (invalid puzzle, unhandled exception, etc.),
            the return value of the property will be always <see langword="null"/>.
            </para>
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Sudoku.Analytics.Step"/> instance at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The step information.</returns>
            <exception cref="T:System.InvalidOperationException">Throws when the <see cref="P:Sudoku.Analytics.AnalyzerResult.Steps"/> is <see langword="null"/> or empty.</exception>
            <exception cref="T:System.IndexOutOfRangeException">Throws when the index is out of range.</exception>
            <seealso cref="P:Sudoku.Analytics.AnalyzerResult.Steps"/>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.Item(Sudoku.Analytics.Categorization.Technique)">
            <summary>
            Gets the first <see cref="T:Sudoku.Analytics.Step"/> instance that matches the specified technique.
            </summary>
            <param name="code">The technique code to check and fetch.</param>
            <returns>The step information instance as the result.</returns>
            <exception cref="T:System.InvalidOperationException">
            Throws when the list doesn't contain any valid instance to get.
            </exception>
        </member>
        <member name="M:Sudoku.Analytics.AnalyzerResult.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.AnalyzerResult.ToString(Sudoku.Analytics.Formatting.AnalyzerResultFormattingOptions)">
            <summary>
            Returns a string that represents the current object, with the specified formatting options.
            </summary>
            <param name="options">The formatting options.</param>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Sudoku.Analytics.AnalyzerResult.GetEnumerator">
            <summary>
            Gets the enumerator of the current instance in order to use <see langword="foreach"/> loop.
            </summary>
            <returns>The enumerator instance.</returns>
        </member>
        <member name="M:Sudoku.Analytics.AnalyzerResult.Select``1(System.Func{Sudoku.Analytics.Step,``0})">
            <summary>
            Projects the collection, to an immutable result of target type.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="selector">
            The selector to project the <see cref="T:Sudoku.Analytics.Step"/> instance into type <typeparamref name="TResult"/>.
            </param>
            <returns>The projected collection of element type <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="M:Sudoku.Analytics.AnalyzerResult.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.AnalyzerResult.System#Collections#Generic#IEnumerable{Sudoku#Analytics#Step}#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.AnalyzerResult.System#Linq#ISelectClauseProvider{Sudoku#Analytics#Step}#Select``1(System.Func{Sudoku.Analytics.Step,``0})">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.AnalyzerResult.Evaluator(,System.Decimal)">
            <summary>
            The inner executor to get the difficulty value (total, average).
            </summary>
            <param name="executor">The execute method.</param>
            <param name="d">
            The default value as the return value when <see cref="P:Sudoku.Analytics.AnalyzerResult.Steps"/> is <see langword="null"/> or empty.
            </param>
            <returns>The result.</returns>
            <seealso cref="P:Sudoku.Analytics.AnalyzerResult.Steps"/>
        </member>
        <member name="M:Sudoku.Analytics.AnalyzerResult.Max``1(System.Collections.Generic.IEnumerable{``0},)">
            <inheritdoc cref="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})"/>
        </member>
        <member name="M:Sudoku.Analytics.AnalyzerResult.Sum``1(System.Collections.Generic.IEnumerable{``0},)">
            <inheritdoc cref="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})"/>
        </member>
        <member name="T:Sudoku.Analytics.AnalyzerResult.StepsEnumerator">
            <summary>
            Defines an enumerator type that allows iterating on steps of the containing type.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.AnalyzerResult.StepsEnumerator._steps">
            <summary>
            The internal enumerator instance.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.AnalyzerResult.StepsEnumerator._index">
            <summary>
            Indicates the index.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.AnalyzerResult.StepsEnumerator.#ctor(Sudoku.Analytics.Step[])">
            <summary>
            Initializes a <see cref="T:Sudoku.Analytics.AnalyzerResult.StepsEnumerator"/> instance via the steps.
            </summary>
            <param name="steps">The steps.</param>
        </member>
        <member name="P:Sudoku.Analytics.AnalyzerResult.StepsEnumerator.Current">
            <inheritdoc cref="P:System.Collections.IEnumerator.Current"/>
        </member>
        <member name="M:Sudoku.Analytics.AnalyzerResult.StepsEnumerator.MoveNext">
            <inheritdoc cref="M:System.Collections.IEnumerator.MoveNext"/>
        </member>
        <member name="T:Sudoku.Analytics.Buffers.CachedFields">
            <summary>
            <para>Represents cached fields used by solving and analyzation for a sudoku puzzle, reducing repeated and redundant calculations.</para>
            <para>
            All names of fields given in this type can also be found in type <see cref="T:Sudoku.Concepts.Grid"/>, but those values are defined as instant properties,
            which means the value will be calculated after you invoke them.
            For example, if we use a property of them for 5 times, the result value will be calculated for 5 times.
            </para>
            <para>
            Sometimes, such values may only be calculated only once, and we just use those return values after the value had been calculated.
            For the consideration of the calculation result caching, those results will be stored here as <see langword="static"/> fields,
            we can use them if we can ensure that such fields have already been initialized.
            For calling the method <see cref="M:Sudoku.Analytics.Buffers.CachedFields.Initialize(Sudoku.Concepts.Grid@,Sudoku.Concepts.Grid@)"/>, we can ensure those fields are initialized, in order to be used later.
            In other words,
            <b>you must ensure the method <see cref="M:Sudoku.Analytics.Buffers.CachedFields.Initialize(Sudoku.Concepts.Grid@,Sudoku.Concepts.Grid@)"/> having been called before using such fields if you want to use them</b>;
            otherwise, <see cref="T:System.NullReferenceException"/> will be thrown for cached fields whose types are reference ones.
            </para>
            <para>
            The reason why I defined them as <see langword="static"/> fields is that they are cached values.
            "<see langword="static"/>" means caching, and "field" means the value to be fetched without encapsulation,
            for a better performace.
            </para>
            <para>Some <see cref="T:Sudoku.Analytics.StepSearcher"/>s may rely on this type.</para>
            </summary>
            <seealso cref="M:Sudoku.Analytics.Buffers.CachedFields.Initialize(Sudoku.Concepts.Grid@,Sudoku.Concepts.Grid@)"/>
            <seealso cref="T:Sudoku.Analytics.Analyzer"/>
            <seealso cref="T:Sudoku.Analytics.StepSearcher"/>
            <seealso cref="T:Sudoku.Concepts.Grid"/>
        </member>
        <member name="F:Sudoku.Analytics.Buffers.CachedFields.EmptyCells">
            <summary>
            <inheritdoc cref="P:Sudoku.Concepts.Grid.EmptyCells"/>
            </summary>
            <remarks>
            This map <b>should</b> be used after <see cref="M:Sudoku.Analytics.Buffers.CachedFields.Initialize(Sudoku.Concepts.Grid@,Sudoku.Concepts.Grid@)"/> called, and you<b>'d better</b>
            not use this field on instances which are marked the attribute
            <see cref="T:Sudoku.Analytics.Metadata.DirectAttribute"/>.
            </remarks>
            <seealso cref="M:Sudoku.Analytics.Buffers.CachedFields.Initialize(Sudoku.Concepts.Grid@,Sudoku.Concepts.Grid@)"/>
            <seealso cref="T:Sudoku.Analytics.Metadata.DirectAttribute"/>
        </member>
        <member name="F:Sudoku.Analytics.Buffers.CachedFields.BivalueCells">
            <summary>
            <inheritdoc cref="P:Sudoku.Concepts.Grid.BivalueCells"/>
            </summary>
            <remarks>
            <inheritdoc cref="F:Sudoku.Analytics.Buffers.CachedFields.EmptyCells" path="/remarks"/>
            </remarks>
        </member>
        <member name="F:Sudoku.Analytics.Buffers.CachedFields.CandidatesMap">
            <summary>
            <inheritdoc cref="P:Sudoku.Concepts.Grid.CandidatesMap"/>
            </summary>
            <remarks>
            <inheritdoc cref="F:Sudoku.Analytics.Buffers.CachedFields.EmptyCells" path="/remarks"/>
            </remarks>
            <exception cref="T:System.NullReferenceException">Throws when not initialized.</exception>
        </member>
        <member name="F:Sudoku.Analytics.Buffers.CachedFields.DigitsMap">
            <summary>
            <inheritdoc cref="P:Sudoku.Concepts.Grid.DigitsMap"/>
            </summary>
            <remarks>
            <inheritdoc cref="F:Sudoku.Analytics.Buffers.CachedFields.EmptyCells" path="/remarks"/>
            </remarks>
            <exception cref="T:System.NullReferenceException">Throws when not initialized.</exception>
        </member>
        <member name="F:Sudoku.Analytics.Buffers.CachedFields.ValuesMap">
            <summary>
            <inheritdoc cref="P:Sudoku.Concepts.Grid.ValuesMap"/>
            </summary>
            <remarks>
            <inheritdoc cref="F:Sudoku.Analytics.Buffers.CachedFields.EmptyCells" path="/remarks"/>
            </remarks>
            <exception cref="T:System.NullReferenceException">Throws when not initialized.</exception>
        </member>
        <member name="F:Sudoku.Analytics.Buffers.CachedFields.Solution">
            <summary>
            Indicates the solution.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Buffers.CachedFields.Initialize(Sudoku.Concepts.Grid@,Sudoku.Concepts.Grid@)">
            <summary>
            Initialize the maps that used later.
            </summary>
            <param name="g">The grid.</param>
            <param name="s">The solution of <paramref name="g"/>.</param>
        </member>
        <member name="T:Sudoku.Analytics.Categorization.DifficultyLevel">
            <summary>
            Provides a difficulty kind for a puzzle.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.DifficultyLevel.Unknown">
            <summary>
            Indicates the difficulty level is unknown.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.DifficultyLevel.Easy">
            <summary>
            Indicates the difficulty is easy.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.DifficultyLevel.Moderate">
            <summary>
            Indicates the difficulty is moderate.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.DifficultyLevel.Hard">
            <summary>
            Indicates the difficulty is hard.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.DifficultyLevel.Fiendish">
            <summary>
            Indicates the difficulty is fiendish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.DifficultyLevel.Nightmare">
            <summary>
            Indicates the difficulty is nightmare.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.DifficultyLevel.LastResort">
            <summary>
            Indicates the puzzle can't be solved unless using last resort methods.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Categorization.Technique">
            <summary>
            Represents a technique instance, which is used for comparison.
            </summary>
            <remarks><b><i>
            Please note that some fields declared in this type may not be used by neither direct reference nor reflection,
            but they are reserved ones. In the future I'll implement the searching logic on those fields (maybe?)
            </i></b></remarks>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.None">
            <summary>
            The placeholder of this enumeration type.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FullHouse">
            <summary>
            Indicates full house.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.LastDigit">
            <summary>
            Indicates last digit.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.HiddenSingleBlock">
            <summary>
            Indicates hidden single (in block).
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.HiddenSingleRow">
            <summary>
            Indicates hidden single (in row).
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.HiddenSingleColumn">
            <summary>
            Indicates hidden single (in column).
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.NakedSingle">
            <summary>
            Indicates naked single.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.Pointing">
            <summary>
            Indicates pointing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.Claiming">
            <summary>
            Indicates claiming.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AlmostLockedPair">
            <summary>
            Indicates almost locked pair.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AlmostLockedTriple">
            <summary>
            Indicates almost locked triple.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AlmostLockedQuadruple">
            <summary>
            Indicates almost locked quadruple.
            The technique may not be useful because it'll be replaced with Sue de Coq.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FireworkPairType1">
            <summary>
            Indicates firework pair type 1.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FireworkPairType2">
            <summary>
            Indicates firework pair type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FireworkPairType3">
            <summary>
            Indicates firework pair type 3.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FireworkTriple">
            <summary>
            Indicates firework triple.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FireworkQuadruple">
            <summary>
            Indicates firework quadruple.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.NakedPair">
            <summary>
            Indicates naked pair.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.NakedPairPlus">
            <summary>
            Indicates naked pair plus (naked pair (+)).
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.LockedPair">
            <summary>
            Indicates locked pair.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.HiddenPair">
            <summary>
            Indicates hidden pair.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.NakedTriple">
            <summary>
            Indicates naked triple.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.NakedTriplePlus">
            <summary>
            Indicates naked triple plus (naked triple (+)).
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.LockedTriple">
            <summary>
            Indicates locked triple.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.HiddenTriple">
            <summary>
            Indicates hidden triple.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.NakedQuadruple">
            <summary>
            Indicates naked quadruple.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.NakedQuadruplePlus">
            <summary>
            Indicates naked quadruple plus (naked quadruple (+)).
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.HiddenQuadruple">
            <summary>
            Indicates hidden quadruple.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.XWing">
            <summary>
            Indicates X-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedXWing">
            <summary>
            Indicates finned X-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiXWing">
            <summary>
            Indicates sashimi X-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedXWing">
            <summary>
            Indicates siamese finned X-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiXWing">
            <summary>
            Indicates siamese sashimi X-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FrankenXWing">
            <summary>
            Indicates franken X-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedFrankenXWing">
            <summary>
            Indicates finned franken X-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiFrankenXWing">
            <summary>
            Indicates sashimi franken X-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedFrankenXWing">
            <summary>
            Indicates siamese finned franken X-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiFrankenXWing">
            <summary>
            Indicates siamese sashimi franken X-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.MutantXWing">
            <summary>
            Indicates mutant X-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedMutantXWing">
            <summary>
            Indicates finned mutant X-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiMutantXWing">
            <summary>
            Indicates sashimi mutant X-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedMutantXWing">
            <summary>
            Indicates siamese finned mutant X-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiMutantXWing">
            <summary>
            Indicates siamese sashimi mutant X-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.Swordfish">
            <summary>
            Indicates swordfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedSwordfish">
            <summary>
            Indicates finned swordfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiSwordfish">
            <summary>
            Indicates sashimi swordfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedSwordfish">
            <summary>
            Indicates siamese finned swordfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiSwordfish">
            <summary>
            Indicates siamese sashimi swordfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FrankenSwordfish">
            <summary>
            Indicates swordfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedFrankenSwordfish">
            <summary>
            Indicates finned franken swordfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiFrankenSwordfish">
            <summary>
            Indicates sashimi franken swordfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedFrankenSwordfish">
            <summary>
            Indicates siamese finned franken swordfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiFrankenSwordfish">
            <summary>
            Indicates siamese sashimi franken swordfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.MutantSwordfish">
            <summary>
            Indicates mutant swordfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedMutantSwordfish">
            <summary>
            Indicates finned mutant swordfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiMutantSwordfish">
            <summary>
            Indicates sashimi mutant swordfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedMutantSwordfish">
            <summary>
            Indicates siamese finned mutant swordfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiMutantSwordfish">
            <summary>
            Indicates siamese sashimi mutant swordfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.Jellyfish">
            <summary>
            Indicates jellyfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedJellyfish">
            <summary>
            Indicates finned jellyfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiJellyfish">
            <summary>
            Indicates sashimi jellyfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedJellyfish">
            <summary>
            Indicates siamese finned jellyfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiJellyfish">
            <summary>
            Indicates siamese sashimi jellyfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FrankenJellyfish">
            <summary>
            Indicates franken jellyfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedFrankenJellyfish">
            <summary>
            Indicates finned franken jellyfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiFrankenJellyfish">
            <summary>
            Indicates sashimi franken jellyfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedFrankenJellyfish">
            <summary>
            Indicates siamese finned franken jellyfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiFrankenJellyfish">
            <summary>
            Indicates siamese sashimi franken jellyfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.MutantJellyfish">
            <summary>
            Indicates mutant jellyfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedMutantJellyfish">
            <summary>
            Indicates finned mutant jellyfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiMutantJellyfish">
            <summary>
            Indicates sashimi mutant jellyfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedMutantJellyfish">
            <summary>
            Indicates siamese finned mutant jellyfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiMutantJellyfish">
            <summary>
            Indicates siamese sashimi mutant jellyfish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.Squirmbag">
            <summary>
            Indicates squirmbag.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedSquirmbag">
            <summary>
            Indicates finned squirmbag.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiSquirmbag">
            <summary>
            Indicates sashimi squirmbag.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedSquirmbag">
            <summary>
            Indicates siamese finned squirmbag.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiSquirmbag">
            <summary>
            Indicates siamese sashimi squirmbag.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FrankenSquirmbag">
            <summary>
            Indicates franken squirmbag.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedFrankenSquirmbag">
            <summary>
            Indicates finned franken squirmbag.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiFrankenSquirmbag">
            <summary>
            Indicates sashimi franken squirmbag.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedFrankenSquirmbag">
            <summary>
            Indicates siamese finned franken squirmbag.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiFrankenSquirmbag">
            <summary>
            Indicates siamese sashimi franken squirmbag.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.MutantSquirmbag">
            <summary>
            Indicates mutant squirmbag.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedMutantSquirmbag">
            <summary>
            Indicates finned mutant squirmbag.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiMutantSquirmbag">
            <summary>
            Indicates sashimi mutant squirmbag.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedMutantSquirmbag">
            <summary>
            Indicates siamese finned mutant squirmbag.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiMutantSquirmbag">
            <summary>
            Indicates siamese sashimi mutant squirmbag.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.Whale">
            <summary>
            Indicates whale.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedWhale">
            <summary>
            Indicates finned whale.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiWhale">
            <summary>
            Indicates sashimi whale.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedWhale">
            <summary>
            Indicates siamese finned whale.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiWhale">
            <summary>
            Indicates siamese sashimi whale.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FrankenWhale">
            <summary>
            Indicates franken whale.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedFrankenWhale">
            <summary>
            Indicates finned franken whale.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiFrankenWhale">
            <summary>
            Indicates sashimi franken whale.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedFrankenWhale">
            <summary>
            Indicates siamese finned franken whale.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiFrankenWhale">
            <summary>
            Indicates siamese sashimi franken whale.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.MutantWhale">
            <summary>
            Indicates mutant whale.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedMutantWhale">
            <summary>
            Indicates finned mutant whale.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiMutantWhale">
            <summary>
            Indicates sashimi mutant whale.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedMutantWhale">
            <summary>
            Indicates siamese finned mutant whale.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiMutantWhale">
            <summary>
            Indicates siamese sashimi mutant whale.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.Leviathan">
            <summary>
            Indicates leviathan.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedLeviathan">
            <summary>
            Indicates finned leviathan.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiLeviathan">
            <summary>
            Indicates sashimi leviathan.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedLeviathan">
            <summary>
            Indicates siamese finned leviathan.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiLeviathan">
            <summary>
            Indicates siamese sashimi leviathan.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FrankenLeviathan">
            <summary>
            Indicates franken leviathan.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedFrankenLeviathan">
            <summary>
            Indicates finned franken leviathan.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiFrankenLeviathan">
            <summary>
            Indicates sashimi franken leviathan.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedFrankenLeviathan">
            <summary>
            Indicates siamese finned franken leviathan.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiFrankenLeviathan">
            <summary>
            Indicates siamese sashimi franken leviathan.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.MutantLeviathan">
            <summary>
            Indicates mutant leviathan.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FinnedMutantLeviathan">
            <summary>
            Indicates finned mutant leviathan.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SashimiMutantLeviathan">
            <summary>
            Indicates sashimi mutant leviathan.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseFinnedMutantLeviathan">
            <summary>
            Indicates siamese finned mutant leviathan.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSashimiMutantLeviathan">
            <summary>
            Indicates siamese sashimi mutant leviathan.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.XyWing">
            <summary>
            Indicates XY-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.XyzWing">
            <summary>
            Indicates XYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.WxyzWing">
            <summary>
            Indicates WXYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.VwxyzWing">
            <summary>
            Indicates VWXYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UvwxyzWing">
            <summary>
            Indicates UVWXYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.TuvwxyzWing">
            <summary>
            Indicates TUVWXYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.StuvwxyzWing">
            <summary>
            Indicates STUVWXYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.RstuvwxyzWing">
            <summary>
            Indicates RSTUVWXYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.IncompleteWxyzWing">
            <summary>
            Indicates incomplete WXYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.IncompleteVwxyzWing">
            <summary>
            Indicates incomplete VWXYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.IncompleteUvwxyzWing">
            <summary>
            Indicates incomplete UVWXYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.IncompleteTuvwxyzWing">
            <summary>
            Indicates incomplete TUVWXYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.IncompleteStuvwxyzWing">
            <summary>
            Indicates incomplete STUVWXYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.IncompleteRstuvwxyzWing">
            <summary>
            Indicates incomplete RSTUVWXYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.WWing">
            <summary>
            Indicates W-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.MultiBranchWWing">
            <summary>
            Indicates Multi-Branch W-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.MWing">
            <summary>
            Indicates M-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.LocalWing">
            <summary>
            Indicates local wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SplitWing">
            <summary>
            Indicates split wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.HybridWing">
            <summary>
            Indicates hybrid wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GroupedXyWing">
            <summary>
            Indicates grouped XY-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GroupedWWing">
            <summary>
            Indicates grouped W-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GroupedMWing">
            <summary>
            Indicates grouped M-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GroupedLocalWing">
            <summary>
            Indicates grouped local wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GroupedSplitWing">
            <summary>
            Indicates grouped split wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GroupedHybridWing">
            <summary>
            Indicates grouped hybrid wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleType1">
            <summary>
            Indicates unique rectangle type 1.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleType2">
            <summary>
            Indicates unique rectangle type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleType3">
            <summary>
            Indicates unique rectangle type 3.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleType4">
            <summary>
            Indicates unique rectangle type 4.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleType5">
            <summary>
            Indicates unique rectangle type 5.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleType6">
            <summary>
            Indicates unique rectangle type 6.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.HiddenUniqueRectangle">
            <summary>
            Indicates hidden unique rectangle.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle2D">
            <summary>
            Indicates unique rectangle + 2D.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle2B1">
            <summary>
            Indicates unique rectangle + 2B / 1SL.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle2D1">
            <summary>
            Indicates unique rectangle + 2D / 1SL.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle3X">
            <summary>
            Indicates unique rectangle + 3X.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle3X1L">
            <summary>
            Indicates unique rectangle + 3x / 1SL.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle3X1U">
            <summary>
            Indicates unique rectangle + 3X / 1SL.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle3X2">
            <summary>
            Indicates unique rectangle + 3X / 2SL.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle3N2">
            <summary>
            Indicates unique rectangle + 3N / 2SL.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle3U2">
            <summary>
            Indicates unique rectangle + 3U / 2SL.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle3E2">
            <summary>
            Indicates unique rectangle + 3E / 2SL.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle4X1L">
            <summary>
            Indicates unique rectangle + 4x / 1SL.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle4X1U">
            <summary>
            Indicates unique rectangle + 4X / 1SL.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle4X2L">
            <summary>
            Indicates unique rectangle + 4x / 2SL.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle4X2U">
            <summary>
            Indicates unique rectangle + 4X / 2SL.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle4X3">
            <summary>
            Indicates unique rectangle + 4X / 3SL.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle4C3">
            <summary>
            Indicates unique rectangle + 4C / 3SL.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleXyWing">
            <summary>
            Indicates unique rectangle-XY-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleXyzWing">
            <summary>
            Indicates unique rectangle-XYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleWxyzWing">
            <summary>
            Indicates unique rectangle-WXYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleSueDeCoq">
            <summary>
            Indicates unique rectangle sue de coq.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleBabaGrouping">
            <summary>
            Indicates unique rectangle baba grouping.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleExternalType1">
            <summary>
            Indicates unique rectangle external type 1.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleExternalType2">
            <summary>
            Indicates unique rectangle external type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleExternalType3">
            <summary>
            Indicates unique rectangle external type 3.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleExternalType4">
            <summary>
            Indicates unique rectangle external type 4.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleExternalSkyscraper">
            <summary>
            Indicates unique rectangle external skyscraper.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleExternalTwoStringKite">
            <summary>
            Indicates unique rectangle external two-string kite.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleExternalTurbotFish">
            <summary>
            Indicates unique rectangle external turbot fish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleExternalXyWing">
            <summary>
            Indicates unique rectangle external XY-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangleExternalAlmostLockedSetsXz">
            <summary>
            Indicates unique rectangle external almost locked sets XZ rule.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleType1">
            <summary>
            Indicates avoidable rectangle type 1.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleType2">
            <summary>
            Indicates avoidable rectangle type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleType3">
            <summary>
            Indicates avoidable rectangle type 3.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleType5">
            <summary>
            Indicates avoidable rectangle type 5.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.HiddenAvoidableRectangle">
            <summary>
            Indicates hidden avoidable rectangle.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangle2D">
            <summary>
            Indicates avoidable rectangle + 2D.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangle3X">
            <summary>
            Indicates avoidable rectangle + 3X.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleXyWing">
            <summary>
            Indicates avoidable rectangle XY-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleXyzWing">
            <summary>
            Indicates avoidable rectangle XYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleWxyzWing">
            <summary>
            Indicates avoidable rectangle WXYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleSueDeCoq">
            <summary>
            Indicates avoidable rectangle sue de coq.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleBrokenWing">
            <summary>
            Indicates avoidable rectangle guardian.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleHiddenSingleBlock">
            <summary>
            Indicates avoidable rectangle hidden single in block.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleHiddenSingleRow">
            <summary>
            Indicates avoidable rectangle hidden single in row.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleHiddenSingleColumn">
            <summary>
            Indicates avoidable rectangle hidden single in column.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleExternalType1">
            <summary>
            Indicates avoidable rectangle external type 1.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleExternalType2">
            <summary>
            Indicates avoidable rectangle external type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleExternalType3">
            <summary>
            Indicates avoidable rectangle external type 3.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleExternalType4">
            <summary>
            Indicates avoidable rectangle external type 4.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleExternalSkyscraper">
            <summary>
            Indicates avoidable rectangle external skyscraper.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleExternalTwoStringKite">
            <summary>
            Indicates avoidable rectangle external two-string kite.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleExternalTurbotFish">
            <summary>
            Indicates avoidable rectangle external turbot fish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleExternalXyWing">
            <summary>
            Indicates avoidable rectangle external XY-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AvoidableRectangleExternalAlmostLockedSetsXz">
            <summary>
            Indicates avoidable rectangle external almost locked sets XZ rule.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueLoopType1">
            <summary>
            Indicates unique loop type 1.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueLoopType2">
            <summary>
            Indicates unique loop type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueLoopType3">
            <summary>
            Indicates unique loop type 3.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueLoopType4">
            <summary>
            Indicates unique loop type 4.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ExtendedRectangleType1">
            <summary>
            Indicates extended rectangle type 1.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ExtendedRectangleType2">
            <summary>
            Indicates extended rectangle type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ExtendedRectangleType3">
            <summary>
            Indicates extended rectangle type 3.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ExtendedRectangleType4">
            <summary>
            Indicates extended rectangle type 4.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.BivalueUniversalGraveType1">
            <summary>
            Indicates bi-value universal grave type 1.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.BivalueUniversalGraveType2">
            <summary>
            Indicates bi-value universal grave type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.BivalueUniversalGraveType3">
            <summary>
            Indicates bi-value universal grave type 3.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.BivalueUniversalGraveType4">
            <summary>
            Indicates bi-value universal grave type 4.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.BivalueUniversalGravePlusN">
            <summary>
            Indicates bi-value universal grave + n.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.BivalueUniversalGraveFalseCandidateType">
            <summary>
            Indicates bi-value universal grave false candidate type.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.BivalueUniversalGravePlusNForcingChains">
            <summary>
            Indicates bi-value universal grave + n with forcing chains.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.BivalueUniversalGraveXzRule">
            <summary>
            Indicates bi-value universal grave XZ rule.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.BivalueUniversalGraveXyWing">
            <summary>
            Indicates bi-value universal grave XY-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ReverseUniqueRectangleType1">
            <summary>
            Indicates reverse unique rectangle type 1.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ReverseUniqueRectangleType2">
            <summary>
            Indicates reverse unique rectangle type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ReverseUniqueRectangleType3">
            <summary>
            Indicates reverse unique rectangle type 3.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ReverseUniqueRectangleType4">
            <summary>
            Indicates reverse unique rectangle type 4.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ReverseUniqueLoopType1">
            <summary>
            Indicates reverse unique loop type 1.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ReverseUniqueLoopType2">
            <summary>
            Indicates reverse unique loop type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ReverseUniqueLoopType3">
            <summary>
            Indicates reverse unique loop type 3.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ReverseUniqueLoopType4">
            <summary>
            Indicates reverse unique loop type 4.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniquenessClueCoverType2">
            <summary>
            Indicates uniqueness clue cover type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.RwDeadlyPattern">
            <summary>
            Indicates RW's deadly pattern.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniquePolygonType1">
            <summary>
            Indicates unique polygon type 1.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniquePolygonType2">
            <summary>
            Indicates unique polygon type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniquePolygonType3">
            <summary>
            Indicates unique polygon type 3.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniquePolygonType4">
            <summary>
            Indicates unique polygon type 4.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.QiuDeadlyPatternType1">
            <summary>
            Indicates Qiu's deadly pattern type 1.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.QiuDeadlyPatternType2">
            <summary>
            Indicates Qiu's deadly pattern type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.QiuDeadlyPatternType3">
            <summary>
            Indicates Qiu's deadly pattern type 3.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.QiuDeadlyPatternType4">
            <summary>
            Indicates Qiu's deadly pattern type 4.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.LockedQiuDeadlyPattern">
            <summary>
            Indicates locked Qiu's deadly pattern.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueMatrixType1">
            <summary>
            Indicates unique matrix type 1.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueMatrixType2">
            <summary>
            Indicates unique matrix type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueMatrixType3">
            <summary>
            Indicates unique matrix type 3.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.UniqueMatrixType4">
            <summary>
            Indicates unique matrix type 4.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SueDeCoq">
            <summary>
            Indicates sue de coq.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SueDeCoqIsolated">
            <summary>
            Indicates sue de coq with isolated digit.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SueDeCoq3Dimension">
            <summary>
            Indicates 3-dimensional sue de coq.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SueDeCoqCannibalism">
            <summary>
            Indicates sue de coq cannibalism.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.Skyscraper">
            <summary>
            Indicates skyscraper.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.TwoStringKite">
            <summary>
            Indicates two-string kite.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.TurbotFish">
            <summary>
            Indicates turbot fish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.EmptyRectangle">
            <summary>
            Indicates empty rectangle.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.BrokenWing">
            <summary>
            Indicates broken wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.BivalueOddagonType1">
            <summary>
            Indicates bi-value oddagon type 1.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.BivalueOddagonType2">
            <summary>
            Indicates bi-value oddagon type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.BivalueOddagonType3">
            <summary>
            Indicates bi-value oddagon type 3.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GroupedBivalueOddagon">
            <summary>
            Indicates grouped bi-value oddagon.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ChromaticPatternType1">
            <summary>
            Indicates chromatic pattern (tri-value oddagon) type 1.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ChromaticPatternType2">
            <summary>
            Indicates chromatic pattern (tri-value oddagon) type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ChromaticPatternType3">
            <summary>
            Indicates chromatic pattern (tri-value oddagon) type 3.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ChromaticPatternType4">
            <summary>
            Indicates chromatic pattern (tri-value oddagon) type 4.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ChromaticPatternXzRule">
            <summary>
            Indicates chromatic pattern (tri-value oddagon) XZ rule.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.XChain">
            <summary>
            Indicates X-Chain.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.YChain">
            <summary>
            Indicates Y-Chain.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.FishyCycle">
            <summary>
            Indicates fishy cycle (X-Cycle).
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.XyChain">
            <summary>
            Indicates XY-Chain.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.XyCycle">
            <summary>
            Indicates XY-Cycle.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.XyXChain">
            <summary>
            Indicates XY-X-Chain.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.RemotePair">
            <summary>
            Indicates remote pair.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.PurpleCow">
            <summary>
            Indicates purple cow.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.DiscontinuousNiceLoop">
            <summary>
            Indicates discontinuous nice loop.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ContinuousNiceLoop">
            <summary>
            Indicates continuous nice loop.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AlternatingInferenceChain">
            <summary>
            Indicates alternating inference chain.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GroupedXChain">
            <summary>
            Indicates grouped X-Chain.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GroupedFishyCycle">
            <summary>
            Indicates grouped fishy cycle (grouped X-Cycle).
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GroupedXyChain">
            <summary>
            Indicates grouped XY-Chain.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GroupedXyCycle">
            <summary>
            Indicates grouped XY-Cycle.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GroupedXyXChain">
            <summary>
            Indicates grouped XY-X-Chain.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GroupedPurpleCow">
            <summary>
            Indicates grouped purple cow.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GroupedDiscontinuousNiceLoop">
            <summary>
            Indicates grouped discontinuous nice loop.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GroupedContinuousNiceLoop">
            <summary>
            Indicates grouped continuous nice loop.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GroupedAlternatingInferenceChain">
            <summary>
            Indicates grouped alternating inference chain.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.NodeCollision">
            <summary>
            Indicates special case that a grouped alternating inference chain has a collision
            between start and end node.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.NishioForcingChains">
            <summary>
            Indicates nishio forcing chains.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.RegionForcingChains">
            <summary>
            Indicates region forcing chains (i.e. house forcing chains).
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.CellForcingChains">
            <summary>
            Indicates cell forcing chains.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.DynamicRegionForcingChains">
            <summary>
            Indicates dynamic region forcing chains (i.e. dynamic house forcing chains).
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.DynamicCellForcingChains">
            <summary>
            Indicates dynamic cell forcing chains.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.DynamicContradictionForcingChains">
            <summary>
            Indicates dynamic contradiction forcing chains.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.DynamicDoubleForcingChains">
            <summary>
            Indicates dynamic double forcing chains.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.DynamicForcingChains">
            <summary>
            Indicates dynamic forcing chains.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.EmptyRectangleIntersectionPair">
            <summary>
            Indicates empty rectangle intersection pair.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ExtendedSubsetPrinciple">
            <summary>
            Indicates extended subset principle.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SinglyLinkedAlmostLockedSetsXzRule">
            <summary>
            Indicates singly linked ALS-XZ.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.DoublyLinkedAlmostLockedSetsXzRule">
            <summary>
            Indicates doubly linked ALS-XZ.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AlmostLockedSetsXyWing">
            <summary>
            Indicates ALS-XY-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AlmostLockedSetsWWing">
            <summary>
            Indicates ALS-W-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AlmostLockedSetsChain">
            <summary>
            Indicates ALS chain.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.AlmostHiddenSetsChain">
            <summary>
            Indicates AHS chain.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.DeathBlossomCellType">
            <summary>
            Indicates death blossom cell type.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.DeathBlossomHouseType">
            <summary>
            Indicates death blossom house type.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.GurthSymmetricalPlacement">
            <summary>
            Indicates Gurth's symmetrical placement.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ExtendedGurthSymmetricalPlacement">
            <summary>
            Indicates extended Gurth's symmetrical placement.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.JuniorExocet">
            <summary>
            Indicates junior exocet.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SeniorExocet">
            <summary>
            Indicates senior exocet.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.ComplexSeniorExocet">
            <summary>
            Indicates complex senior exocet.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseJuniorExocet">
            <summary>
            Indicates siamese junior exocet.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.SiameseSeniorExocet">
            <summary>
            Indicates siamese senior exocet.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.DominoLoop">
            <summary>
            Indicates domino loop.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.MultisectorLockedSets">
            <summary>
            Indicates multi-sector locked sets.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.PatternOverlay">
            <summary>
            Indicates pattern overlay method.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.TemplateSet">
            <summary>
            Indicates template set.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.TemplateDelete">
            <summary>
            Indicates template delete.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.BowmanBingo">
            <summary>
            Indicates bowman's bingo.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.Technique.BruteForce">
            <summary>
            Indicates brute force.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Categorization.TechniqueGroup">
            <summary>
            Represents a technique group.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.None">
            <summary>
            Indicates the technique doesn't belong to any group.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.Single">
            <summary>
            Indicates the singles technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.LockedCandidates">
            <summary>
            Indicates the locked candidates (LC) technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.Subset">
            <summary>
            Indicates the subset technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.NormalFish">
            <summary>
            Indicates the normal fish technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.ComplexFish">
            <summary>
            Indicates the complex fish technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.Wing">
            <summary>
            Indicates the wing technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.EmptyRectangle">
            <summary>
            Indicates the empty rectangle technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.SingleDigitPattern">
            <summary>
            Indicates the single digit pattern (SDP) technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.EmptyRectangleIntersectionPair">
            <summary>
            Indicates the empty rectangle intersection pair (ERIP) technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.AlmostLockedCandidates">
            <summary>
            Indicates the almost locked candidates (ALC) technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.Firework">
            <summary>
            Indicates the firework technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.AlternatingInferenceChain">
            <summary>
            Indicates the alternating inference chain (AIC) technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.ForcingChains">
            <summary>
            Indicates the forcing chains (FC) technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.UniqueRectangle">
            <summary>
            Indicates the unique rectangle (UR) technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.UniqueRectanglePlus">
            <summary>
            Indicates the unique rectangle plus (UR+) technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.UniqueLoop">
            <summary>
            Indicates the unique loop (UL) technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.ExtendedRectangle">
            <summary>
            Indicates the extended rectangle (XR) technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.BivalueUniversalGrave">
            <summary>
            Indicates the bi-value universal grave (BUG) technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.ReverseBivalueUniversalGrave">
            <summary>
            Indicates the reverse bi-value universal grave (Reverse BUG) technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.UniquenessClueCover">
            <summary>
            Indicates the uniqueness clue cover.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.DeadlyPattern">
            <summary>
            Indicates the deadly pattern technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.BivalueOddagon">
            <summary>
            Indicates the bi-value oddagon technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.TrivalueOddagon">
            <summary>
            Indicates the tri-value oddagon technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.SueDeCoq">
            <summary>
            Indicates the sue de coq (SdC) technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.BrokenWing">
            <summary>
            Indicates the broken wing technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.AlmostLockedSetsChainingLike">
            <summary>
            Indicates the ALS chaining-like (ALS-XZ, ALS-XY-Wing, ALS-W-Wing) technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.DominoLoop">
            <summary>
            Indicates the SK-Loop technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.MultisectorLockedSets">
            <summary>
            Indicates the multi-sector locked sets (MSLS) technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.Exocet">
            <summary>
            Indicates the exocet technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.Symmetry">
            <summary>
            Indicates the symmetry technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.RankTheory">
            <summary>
            Indicates the technique checked and searched relies on the rank theory.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.BowmanBingo">
            <summary>
            Indicates the bowman bingo technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.PatternOverlay">
            <summary>
            Indicates the pattern overlay method (POM) technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.Templating">
            <summary>
            Indicates the templating technique.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Categorization.TechniqueGroup.BruteForce">
            <summary>
            Indicates the brute force (BF) technique.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.CommonReadOnlies">
            <summary>
            Represents a type holding some common read-only fields used by runtime or compiling-time.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.CommonReadOnlies.UniqueSquareTemplatesCount">
            <summary>
            Indicates the total number of unique square patterns.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.CommonReadOnlies.QiuDeadlyPatternTemplatesCount">
            <summary>
            Indicates the total number of Qiu's deadly patterns.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.CommonReadOnlies.ExocetTemplatesCount">
            <summary>
            Indicates the total number of exocet patterns.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.CommonReadOnlies.FireworkSubsetCount">
            <summary>
            Indicates the total number of firework subset patterns.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.CommonReadOnlies.BdpTemplatesSize3Count">
            <summary>
            Indicates the total number of Unique Polygon (Heptagon) possible templates of size 3.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.CommonReadOnlies.BdpTemplatesSize4Count">
            <summary>
            Indicates the total number of Unique Polygon (Octagon) possible templates of size 4.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.CommonReadOnlies.PairFireworksCount">
            <summary>
            Indicates the total number of pair fireworks.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.CommonReadOnlies.MultisectorLockedSetsTemplatesCount">
            <summary>
            Indicates the total number of multi-sector locked sets possible templates.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.CommonReadOnlies.UniqueRectanglePatterns">
            <summary>
            The table of all <b>Unique Rectangle</b> cells.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.CommonReadOnlies.EmptyRectangleLinkIds">
            <summary>
            Indicates all houses iterating on the specified block forming an empty rectangle.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.CommonReadOnlies.ChromaticPatternBlocksCombinations">
            <summary>
            All possible blocks combinations being reserved for chromatic pattern searcher's usages.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.CommonReadOnlies.BruteForceTryAndErrorOrder">
            <summary>
            The order of cell offsets to get values.
            </summary>
            <remarks>
            For example, the first value is 40, which means the first cell to be tried to be filled
            is the 40th cell in the grid (i.e. the cell <c>r5c5</c>).
            </remarks>
        </member>
        <member name="F:Sudoku.Analytics.CommonReadOnlies.IntersectionMaps">
            <summary>
            <para>
            Indicates all maps that forms the each intersection. The pattern will be like:
            <code><![CDATA[
            .-------.-------.-------.
            | C C C | A A A | A A A |
            | B B B | . . . | . . . |
            | B B B | . . . | . . . |
            '-------'-------'-------'
            ]]></code>
            </para>
            <para>
            In addition, in this data structure, a <b>CoverSet</b> is a block and a <b>BaseSet</b> is a line.
            </para>
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.CommonReadOnlies.IntersectionBlockTable">
            <summary>
            <para>The table of all blocks to iterate for each blocks.</para>
            <para>
            This field is only used for providing the data for another field <see cref="F:Sudoku.Analytics.CommonReadOnlies.IntersectionMaps"/>.
            </para>
            </summary>
            <seealso cref="F:Sudoku.Analytics.CommonReadOnlies.IntersectionMaps"/>
        </member>
        <member name="M:Sudoku.Analytics.CommonReadOnlies.#cctor">
            <static-constructor>
		<summary>
			<para>
				Indicates the <see langword="static" /> constructor of the current type.
			</para>
			<para>
				This constructor will initialize some <see langword="static readonly" /> data members
				of this type that can't use a simple expression to describe the initial value.
			</para>
		</summary>
	</static-constructor>
        </member>
        <member name="T:Sudoku.Analytics.ValueTupleComparer">
            <summary>
            Represents a comparer instance that compares two tuples.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.ValueTupleComparer.Equals(System.ValueTuple{System.Byte,System.Byte},System.ValueTuple{System.Byte,System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.ValueTupleComparer.GetHashCode(System.ValueTuple{System.Byte,System.Byte})">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Compatibility.HodokuLibraryCompatiblity">
            <summary>
            Represents some methods that are used for get the details supported and defined
            by another program called <see href="https://sourceforge.net/projects/hodoku/">Hodoku</see>.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Compatibility.HodokuLibraryCompatiblity.ProgramName">
            <inheritdoc cref="P:Sudoku.Analytics.Compatibility.ICompatibilityProvider.ProgramName"/>
        </member>
        <member name="M:Sudoku.Analytics.Compatibility.HodokuLibraryCompatiblity.GetAliases(Sudoku.Analytics.Categorization.Technique)">
            <summary>
            Gets all possible aliased names that are defined by Hodoku.
            </summary>
            <param name="this">The technique.</param>
            <returns>
            The array of aliased names, or <see langword="null"/> if it is not defined by Hodoku.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Throws when the specified value is not defined by the type <see cref="T:Sudoku.Analytics.Categorization.Technique"/>,
            or the value is <see cref="F:Sudoku.Analytics.Categorization.Technique.None"/>.
            </exception>
            <seealso cref="T:Sudoku.Analytics.Categorization.Technique"/>
        </member>
        <member name="M:Sudoku.Analytics.Compatibility.HodokuLibraryCompatiblity.GetHodokuPrefix(Sudoku.Analytics.Categorization.Technique)">
            <summary>
            Try to get the prefix of the specified technique. The return value will be a four-digit value
            represented as a <see cref="T:System.String"/> value. For more information please visit
            <see href="https://sourceforge.net/p/hodoku/code/HEAD/tree/HoDoKu/trunk/reglib-1.4.txt">this link</see>.
            </summary>
            <param name="this">The technique.</param>
            <returns>
            <para>
            A <see cref="T:System.String"/> value using a four-digit value to describe a technique used
            in a sudoku grid, which is defined by the project Hodoku.
            </para>
            <para>
            If this technique is not supported by Hodoku, <see langword="null"/> will be returned.
            </para>
            </returns>
            <remarks>
            <para>
            Please note that some technique fields are separated into multiple sub-types, but they all
            belong to a same type of a technique supported by Hodoku. For example,
            <see cref="F:Sudoku.Analytics.Categorization.Technique.SueDeCoq"/> and <see cref="F:Sudoku.Analytics.Categorization.Technique.SueDeCoqIsolated"/> are supported by
            Hodoku as one technique "Sue de Coq", so if you get the prefix from the two fields, the return value
            are same (i.e. the <see cref="T:System.String"/> value <c>"1101"</c>).
            </para>
            <para>
            However, if a sub-type is not supported by Hodoku (e.g. the field
            <see cref="F:Sudoku.Analytics.Categorization.Technique.UniqueRectangle2B1"/>), this method will still return <see langword="null"/>
            indicating the "Not supported" state.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Throws when the specified value is not defined by the type <see cref="T:Sudoku.Analytics.Categorization.Technique"/>,
            or the value is <see cref="F:Sudoku.Analytics.Categorization.Technique.None"/>.
            </exception>
            <seealso cref="T:Sudoku.Analytics.Categorization.Technique"/>
        </member>
        <member name="M:Sudoku.Analytics.Compatibility.HodokuLibraryCompatiblity.GetDifficultyRating(Sudoku.Analytics.Categorization.Technique,System.Nullable{Sudoku.Compatibility.Hodoku.HodokuDifficultyLevel}@)">
            <summary>
            Try to get difficulty rating of the specified technique.
            </summary>
            <param name="this">The technique.</param>
            <param name="difficultyLevel">The difficulty level that is defined by Hodoku.</param>
            <returns>
            <para>
            An <see cref="T:System.Int32"/> value defined by the project Hodoku.
            </para>
            <para>
            If this technique is not supported by Hodoku, <see langword="null"/> will be returned.
            </para>
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Throws when the specified value is not defined by the type <see cref="T:Sudoku.Analytics.Categorization.Technique"/>,
            or the value is <see cref="F:Sudoku.Analytics.Categorization.Technique.None"/>.
            </exception>
            <seealso cref="T:Sudoku.Analytics.Categorization.Technique"/>
        </member>
        <member name="T:Sudoku.Analytics.Compatibility.ICompatibilityProvider">
            <summary>
            Provides a way to provide compatibility items (concepts, solving ways, etc.) to a program that also analyzes sudoku puzzles.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Compatibility.ICompatibilityProvider.ProgramName">
            <summary>
            Indicates the program name of the current provider to be compatible.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Compatibility.SudokuExplainerLibraryCompatiblity">
            <summary>
            Represents some methods that are used for get the details supported and defined
            by another program called
            <see href="http://diuf.unifr.ch/pai/people/juillera/Sudoku/Sudoku.html">Sudoku Explainer</see> (Broken link).
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Compatibility.SudokuExplainerLibraryCompatiblity.ProgramName">
            <inheritdoc cref="P:Sudoku.Analytics.Compatibility.ICompatibilityProvider.ProgramName"/>
        </member>
        <member name="M:Sudoku.Analytics.Compatibility.SudokuExplainerLibraryCompatiblity.GetAliases(Sudoku.Analytics.Categorization.Technique)">
            <summary>
            Gets all possible aliased names that are defined by Sudoku Explainer.
            </summary>
            <param name="this">The technique.</param>
            <returns>
            The array of aliased names, or <see langword="null"/> if it is not defined by Sudoku Explainer.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Throws when the specified value is not defined by the type <see cref="T:Sudoku.Analytics.Categorization.Technique"/>,
            or the value is <see cref="F:Sudoku.Analytics.Categorization.Technique.None"/>.
            </exception>
            <seealso cref="T:Sudoku.Analytics.Categorization.Technique"/>
        </member>
        <member name="M:Sudoku.Analytics.Compatibility.SudokuExplainerLibraryCompatiblity.GetDifficultyRatingRange(Sudoku.Analytics.Categorization.Technique)">
            <summary>
            Try to get difficulty rating of the specified technique.
            </summary>
            <param name="this">The technique.</param>
            <returns>
            <para>
            An <see cref="T:System.Int32"/> value defined by the project Sudoku Explainer.
            </para>
            <para>
            If this technique is not supported by Sudoku Explainer, <see langword="null"/> will be returned.
            </para>
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Throws when the specified value is not defined by the type <see cref="T:Sudoku.Analytics.Categorization.Technique"/>,
            or the value is <see cref="F:Sudoku.Analytics.Categorization.Technique.None"/>.
            </exception>
            <seealso cref="T:Sudoku.Analytics.Categorization.Technique"/>
        </member>
        <member name="T:Sudoku.Analytics.Formatting.AnalyzerResultFormattingOptions">
            <summary>
            Indicates the formatting options of <see cref="T:Sudoku.Analytics.AnalyzerResult"/> instance.
            </summary>
            <seealso cref="T:Sudoku.Analytics.AnalyzerResult"/>
        </member>
        <member name="F:Sudoku.Analytics.Formatting.AnalyzerResultFormattingOptions.None">
            <summary>
            Indicates the none of the formatting option.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Formatting.AnalyzerResultFormattingOptions.ShowSeparators">
            <summary>
            Indicates the analysis result will append separators.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Formatting.AnalyzerResultFormattingOptions.ShowStepLabel">
            <summary>
            Indicates the analysis result will append the step label.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Formatting.AnalyzerResultFormattingOptions.ShowSimple">
            <summary>
            Indicates the analysis result will use simple mode to show steps.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Formatting.AnalyzerResultFormattingOptions.ShowBottleneck">
            <summary>
            Indicates the analysis result will show the bottleneck.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Formatting.AnalyzerResultFormattingOptions.ShowDifficulty">
            <summary>
            Indicates the analysis result will show the difficulty.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Formatting.AnalyzerResultFormattingOptions.ShowStepsAfterBottleneck">
            <summary>
            Indicates the analysis result will show all steps after the bottleneck.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Formatting.AnalyzerResultFormattingOptions.ShowStepDetail">
            <summary>
            Indicates the analysis result will show the step detail.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Formatting.AnalyzerResultFormattingOptions.ShowSteps">
            <summary>
            Indicates the analysis result will show the steps.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Formatting.AnalyzerResultFormattingOptions.ShowGridAndSolutionCode">
            <summary>
            Indicates the analysis result will show grid code for the puzzle itself and its solution.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Formatting.AnalyzerResultFormattingOptions.ShowElapsedTime">
            <summary>
            Indicates the analysis result will show elapsed time on solving the puzzle.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.InternalHelpers.AlmostLockedSetHelper">
            <summary>
            Represents a helper type that operates with <see cref="T:Sudoku.Analytics.Patterns.AlmostLockedSet"/> instances.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.InternalHelpers.AlmostLockedSetHelper.GatherAlmostLockedSets(Sudoku.Concepts.Grid@)">
            <inheritdoc cref="M:Sudoku.Analytics.Patterns.AlmostLockedSet.Gather(Sudoku.Concepts.Grid@)"/>
            <remarks><b>This method uses <see cref="T:Sudoku.Analytics.Buffers.CachedFields"/>.</b></remarks>
            <seealso cref="T:Sudoku.Analytics.Buffers.CachedFields"/>
        </member>
        <member name="T:Sudoku.Analytics.InternalHelpers.FishStepSearcherHelper">
            <summary>
            Used by <see cref="T:Sudoku.Analytics.StepSearchers.NormalFishStepSearcher"/> and <see cref="T:Sudoku.Analytics.StepSearchers.ComplexFishStepSearcher"/>.
            </summary>
            <seealso cref="T:Sudoku.Analytics.StepSearchers.NormalFishStepSearcher"/>
            <seealso cref="T:Sudoku.Analytics.StepSearchers.ComplexFishStepSearcher"/>
        </member>
        <member name="M:Sudoku.Analytics.InternalHelpers.FishStepSearcherHelper.IsSashimi(System.Int32[],Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check whether the fish is sashimi.
            </summary>
            <param name="baseSets">The base sets.</param>
            <param name="fins">All fins.</param>
            <param name="digit">The digit.</param>
            <returns>
            <para>A <see cref="T:System.Boolean"/> value indicating that.</para>
            <para>
            <inheritdoc cref="P:Sudoku.Analytics.Steps.ComplexFishStep.IsSashimi" path="/remarks"/>
            </para>
            </returns>
        </member>
        <member name="M:Sudoku.Analytics.InternalHelpers.FishStepSearcherHelper.GetComplexFishTechniqueCodeFromName(System.String)">
            <summary>
            Try to get the <see cref="T:Sudoku.Analytics.Categorization.Technique"/> code instance from the specified name, where the name belongs
            to a complex fish name, such as "Finned Franken Swordfish".
            </summary>
            <param name="name">The name.</param>
            <returns>The <see cref="T:Sudoku.Analytics.Categorization.Technique"/> code instance.</returns>
            <seealso cref="T:Sudoku.Analytics.Categorization.Technique"/>
        </member>
        <member name="T:Sudoku.Analytics.InternalHelpers.UniqueRectangStepSearcherHelper">
            <summary>
            Used by <see cref="T:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher"/>.
            </summary>
            <seealso cref="T:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher"/>
        </member>
        <member name="M:Sudoku.Analytics.InternalHelpers.UniqueRectangStepSearcherHelper.CheckPreconditions(Sudoku.Concepts.Grid@,System.Int32[],System.Boolean)">
            <summary>
            Check preconditions.
            </summary>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is searching for ARs.</param>
            <returns>Indicates whether the UR is passed to check.</returns>
        </member>
        <member name="M:Sudoku.Analytics.InternalHelpers.UniqueRectangStepSearcherHelper.CheckPreconditionsOnIncomplete(Sudoku.Concepts.Grid@,System.Int32[],System.Int32,System.Int32)">
            <summary>
            Checks whether the specified UR cells satisfies the precondition of an incomplete UR.
            </summary>
            <param name="grid">The grid.</param>
            <param name="urCells">The UR cells.</param>
            <param name="d1">The first digit used.</param>
            <param name="d2">The second digit used.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="M:Sudoku.Analytics.InternalHelpers.UniqueRectangStepSearcherHelper.IsConjugatePair(System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            To determine whether the specified house forms a conjugate pair
            of the specified digit, and the cells where they contain the digit
            is same as the given map contains.
            </summary>
            <param name="digit">The digit.</param>
            <param name="map">The map.</param>
            <param name="houseIndex">The house index.</param>
            <returns>A <see cref="T:System.Boolean"/> value.</returns>
        </member>
        <member name="M:Sudoku.Analytics.InternalHelpers.UniqueRectangStepSearcherHelper.GetDiagonalCell(System.Int32[],System.Int32)">
            <summary>
            Get a cell that can't see each other.
            </summary>
            <param name="urCells">The UR cells.</param>
            <param name="cell">The current cell.</param>
            <returns>The diagonal cell.</returns>
            <exception cref="T:System.ArgumentException">
            Throws when the specified argument <paramref name="cell"/> is invalid.
            </exception>
        </member>
        <member name="M:Sudoku.Analytics.InternalHelpers.UniqueRectangStepSearcherHelper.IsSameHouseCell(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Get whether two cells are in a same house.
            </summary>
            <param name="cell1">The cell 1 to check.</param>
            <param name="cell2">The cell 2 to check.</param>
            <param name="houses">
            The result houses that both two cells lie in. If the cell can't be found, this argument will be 0.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/> value indicating whether the another cell is same house as the current one.
            </returns>
        </member>
        <member name="M:Sudoku.Analytics.InternalHelpers.UniqueRectangStepSearcherHelper.GetHighlightCells(System.Int32[])">
            <summary>
            Get all highlight cells.
            </summary>
            <param name="urCells">The all UR cells used.</param>
            <returns>The list of highlight cells.</returns>
        </member>
        <member name="T:Sudoku.Analytics.Metadata.AnalyzerFailedReason">
            <summary>
            Defines a reason why the puzzle is failed to be analyzed.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.Nothing">
            <summary>
            Indicates nothing goes wrong.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.PuzzleIsInvalid">
            <summary>
            <para>Indicates the failed reason is that the puzzle doesn't contain a valid unique solution.</para>
            <para>
            Different with <see cref="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.PuzzleHasMultipleSolutions"/> and <see cref="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.PuzzleHasNoSolution"/>,
            this field will include more generic cases. If the puzzle doesn't pass the pre-process operation
            before solving, we should use this field.
            </para>
            </summary>
            <seealso cref="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.PuzzleHasNoSolution"/>
            <seealso cref="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.PuzzleHasMultipleSolutions"/>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.PuzzleHasNoSolution">
            <summary>
            Indicates the failed reason is that the puzzle doesn't contain a valid solution.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.PuzzleHasMultipleSolutions">
            <summary>
            Indicates the failed reason is that the puzzle contains multiple valid solutions.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.UserCancelled">
            <summary>
            Indicates the failed reason is that the user has canceled the task.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.NotImplemented">
            <summary>
            Indicates the failed reason is that the solver or some searching module isn't implemented.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.ExceptionThrown">
            <summary>
            Indicates the failed reason is that the solver has encountered an error and couldn't solve
            that will cause an exception thrown.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.WrongStep">
            <summary>
            Indicates the failed reason is that the solver has found a wrong step that cause the grid become invalid.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.AnalyzerFailedReason.PuzzleIsTooHard">
            <summary>
            Indicates the failed reason is that the puzzle is too hard to solve. The solver gave up.
            </summary>
            <remarks><i>
            This option becomes deprecated at present because we has already implemented a step searcher
            that always produces a valid step, guaranteeing that the solver will never give up at all time.
            </i></remarks>
        </member>
        <member name="T:Sudoku.Analytics.Metadata.CachedOnlyAttribute">
            <summary>
            Defines an attribute type that is applied to a <see cref="T:Sudoku.Analytics.StepSearcher"/> derived type,
            indicating the searching logic only uses cached fields in type <see cref="T:Sudoku.Analytics.Buffers.CachedFields"/>,
            and it does not use field <see cref="F:Sudoku.Analytics.AnalysisContext.Grid"/>.
            </summary>
            <seealso cref="T:Sudoku.Analytics.Buffers.CachedFields"/>
            <seealso cref="F:Sudoku.Analytics.AnalysisContext.Grid"/>
        </member>
        <member name="T:Sudoku.Analytics.Metadata.ConditionalCase">
            <summary>
            Represents a list of cases that describes some cases that <see cref="T:Sudoku.Analytics.StepSearcher"/> is partially allowed
            in searching or gathering operation.
            </summary>
            <remarks><i>
            This type is marked <see cref="T:System.FlagsAttribute"/>, which means you can use
            <see cref="T:Sudoku.Analytics.Metadata.ConditionalCase"/>.<see langword="operator"/> | to combine multiple fields.
            </i></remarks>
            <seealso cref="T:Sudoku.Analytics.StepSearcher"/>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.ConditionalCase.Default">
            <summary>
            Indicates the step searcher can be called anywhere as long it is enabled. This is also the default value of this enumeration type.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.ConditionalCase.Standard">
            <summary>
            Indicates the <see cref="T:Sudoku.Analytics.StepSearcher"/> is only enabled for standard sudoku puzzles, which means other variants are disallowed
            using this <see cref="T:Sudoku.Analytics.StepSearcher"/> instance. For example, <see cref="T:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher"/>
            can only be used for searching in a standard sudoku, sukakus are disabled.
            </summary>
            <seealso cref="T:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher"/>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.ConditionalCase.UnlimitedTimeComplexity">
            <summary>
            Indicates a <see cref="T:Sudoku.Analytics.StepSearcher"/> will produce high time complexity,
            meaning it will be disabled if a user want to disable high time-complexity algorithms.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.ConditionalCase.UnlimitedSpaceComplexity">
            <summary>
            Indicates the <see cref="T:Sudoku.Analytics.StepSearcher"/> will produce high space complexity,
            meaning it will be disabled if a user want to disable high space-complexity algorithms.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.ConditionalCase.Advanced">
            <summary>
            Indicates the reserved field. This field may be used for future considerations.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Metadata.ConditionalCasesAttribute">
            <summary>
            Provides an attribute type that can be marked onto a <see cref="T:Sudoku.Analytics.StepSearcher"/> type,
            indicating the <see cref="T:Sudoku.Analytics.StepSearcher"/> instance is unavailable on partial cases.
            For example, Deadly Patterns are unavailable for Sukaku puzzles because we cannot determine
            whether a candidate is having been removed before.
            </summary>
            <param name="cases"><inheritdoc cref="P:Sudoku.Analytics.Metadata.ConditionalCasesAttribute.Cases" path="/summary"/></param>
            <seealso cref="T:Sudoku.Analytics.StepSearcher"/>
        </member>
        <member name="M:Sudoku.Analytics.Metadata.ConditionalCasesAttribute.#ctor(Sudoku.Analytics.Metadata.ConditionalCase)">
            <summary>
            Provides an attribute type that can be marked onto a <see cref="T:Sudoku.Analytics.StepSearcher"/> type,
            indicating the <see cref="T:Sudoku.Analytics.StepSearcher"/> instance is unavailable on partial cases.
            For example, Deadly Patterns are unavailable for Sukaku puzzles because we cannot determine
            whether a candidate is having been removed before.
            </summary>
            <param name="cases"><inheritdoc cref="P:Sudoku.Analytics.Metadata.ConditionalCasesAttribute.Cases" path="/summary"/></param>
            <seealso cref="T:Sudoku.Analytics.StepSearcher"/>
        </member>
        <member name="P:Sudoku.Analytics.Metadata.ConditionalCasesAttribute.Cases">
            <summary>
            Indicates the cases that the current <see cref="T:Sudoku.Analytics.StepSearcher"/> instance cannot be running on.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Metadata.DirectAttribute">
            <summary>
            <para>
            Indicates the technique searcher can or can't be used in some scenarios
            where they aren't in traversing mode to call <see cref="M:Sudoku.Analytics.StepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)"/>
            in <see cref="T:Sudoku.Analytics.StepSearcher"/>s one by one.
            </para>
            <para>
            If <see langword="true"/>, the searcher can't use those <see langword="static"/>
            fields such as <see cref="F:Sudoku.Analytics.Buffers.CachedFields.CandidatesMap"/> in its method
            <see cref="M:Sudoku.Analytics.StepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)"/>.
            </para>
            </summary>
            <remarks>
            <para>
            All disallowed fields are:
            <list type="bullet">
            <item><see cref="F:Sudoku.Analytics.Buffers.CachedFields.DigitsMap"/></item>
            <item><see cref="F:Sudoku.Analytics.Buffers.CachedFields.ValuesMap"/></item>
            <item><see cref="F:Sudoku.Analytics.Buffers.CachedFields.CandidatesMap"/></item>
            <item><see cref="F:Sudoku.Analytics.Buffers.CachedFields.BivalueCells"/></item>
            <item><see cref="F:Sudoku.Analytics.Buffers.CachedFields.EmptyCells"/></item>
            </list>
            The disallowed method is:
            <list type="bullet">
            <item><see cref="M:Sudoku.Analytics.Buffers.CachedFields.Initialize(Sudoku.Concepts.Grid@,Sudoku.Concepts.Grid@)"/></item>
            </list>
            </para>
            <para>
            Those fields or methods can optimize the performance to analyze a sudoku grid, but
            sometimes they may cause a potential bug that is hard to find and fix. The attribute
            is created and used for solving the problem.
            </para>
            </remarks>
            <seealso cref="T:Sudoku.Analytics.StepSearcher"/>
            <seealso cref="T:Sudoku.Analytics.Buffers.CachedFields"/>
        </member>
        <member name="T:Sudoku.Analytics.Metadata.FixedAttribute">
            <summary>
            Indicates whether the option is fixed that can't be modified in UI.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Metadata.SeparatedAttribute">
            <summary>
            Defines an attribute that applies to a type derived from <see cref="T:Sudoku.Analytics.StepSearcher"/>,
            to create multiple <see cref="T:Sudoku.Analytics.StepSearcher"/>s for the current type, ordering by separated priority value.
            </summary>
            <param name="priority">Indicates the priority that will be used for the ordering.</param>
            <param name="propertyNamesAndValues">The array of property names and their values.</param>
            <remarks>
            Please note that this attribute is optional to be marked,
            meaning it's unnecessary to be used to mark all built-in <see cref="T:Sudoku.Analytics.StepSearcher"/>s.
            </remarks>
            <seealso cref="T:Sudoku.Analytics.StepSearcher"/>
        </member>
        <member name="M:Sudoku.Analytics.Metadata.SeparatedAttribute.#ctor(System.Int32,System.Object[])">
            <summary>
            Defines an attribute that applies to a type derived from <see cref="T:Sudoku.Analytics.StepSearcher"/>,
            to create multiple <see cref="T:Sudoku.Analytics.StepSearcher"/>s for the current type, ordering by separated priority value.
            </summary>
            <param name="priority">Indicates the priority that will be used for the ordering.</param>
            <param name="propertyNamesAndValues">The array of property names and their values.</param>
            <remarks>
            Please note that this attribute is optional to be marked,
            meaning it's unnecessary to be used to mark all built-in <see cref="T:Sudoku.Analytics.StepSearcher"/>s.
            </remarks>
            <seealso cref="T:Sudoku.Analytics.StepSearcher"/>
        </member>
        <member name="P:Sudoku.Analytics.Metadata.SeparatedAttribute.Priority">
            <summary>
            Indicates the priority value that will be used for the ordering.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Metadata.SeparatedAttribute.PropertyNamesAndValues">
            <summary>
            Indicates the property names and the values.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Metadata.StepSearcherAttribute">
            <summary>
            Indicates the type is a runnable <see cref="T:Sudoku.Analytics.StepSearcher"/>.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Metadata.StepSearcherImportAttribute`1">
            <summary>
            Defines an attribute that can be applied to the solving assembly,
            to tell the source generator that the searcher option instance will be generated in the specified type.
            </summary>
            <typeparam name="T">The type of the step searcher.</typeparam>
            <param name="level">Indicates the step searcher level. For more information please visit type <see cref="T:Sudoku.Analytics.Metadata.StepSearcherLevel"/>.</param>
        </member>
        <member name="M:Sudoku.Analytics.Metadata.StepSearcherImportAttribute`1.#ctor(Sudoku.Analytics.Metadata.StepSearcherLevel)">
            <summary>
            Defines an attribute that can be applied to the solving assembly,
            to tell the source generator that the searcher option instance will be generated in the specified type.
            </summary>
            <typeparam name="T">The type of the step searcher.</typeparam>
            <param name="level">Indicates the step searcher level. For more information please visit type <see cref="T:Sudoku.Analytics.Metadata.StepSearcherLevel"/>.</param>
        </member>
        <member name="P:Sudoku.Analytics.Metadata.StepSearcherImportAttribute`1.Level">
            <summary>
            Indicates the level of the step searcher.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Metadata.StepSearcherImportAttribute`1.Areas">
            <summary>
            Indicates the area that the step searcher can be used and available.
            </summary>
            <remarks>
            The default value of this property is both <see cref="F:Sudoku.Analytics.Metadata.StepSearcherRunningArea.Searching"/>
            and <see cref="F:Sudoku.Analytics.Metadata.StepSearcherRunningArea.Gathering"/>.
            </remarks>
        </member>
        <member name="T:Sudoku.Analytics.Metadata.StepSearcherLevel">
            <summary>
            Represents a level that a step searcher belongs to. This type is used for the displaying of the step information list.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.StepSearcherLevel.None">
            <summary>
            Indicates the level is none.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.StepSearcherLevel.Elementary">
            <summary>
            Indicates the level is the elementary searchers,
            meaning the techniques found in the current step searcher is the elementary ones.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.StepSearcherLevel.Moderate">
            <summary>
            Indicates the level is the moderate searchers,
            meaning the techniques found in the current step searcher is more difficult than the elementary ones,
            but they aren't very difficult to understand its backing logic.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.StepSearcherLevel.Hard">
            <summary>
            Indicates the level is the hard searchers,
            meaning means the techniques found in the current step searcher is more difficult than the moderate ones.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.StepSearcherLevel.Fiendish">
            <summary>
            Indicates the level is the fiendish searchers,
            meaning the techniques found in the current step searcher is more difficult than the hard ones.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.StepSearcherLevel.Hidden">
            <summary>
            <para>
            Indicates the level is the hidden searchers,
            meaning the techniques found in the current step searcher should be hidden no matter how easy the technique is.
            </para>
            <para>The well-known technique searcher of this level is Brute Force.</para>
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Metadata.StepSearcherMetadataAttribute">
            <summary>
            Represents a step searcher metadata attribute.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Metadata.StepSearcherRunningArea">
            <summary>
            Represents a mode that describes an area where a step searcher can be invoked.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.StepSearcherRunningArea.None">
            <summary>
            Indicates the step searcher is disabled.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.StepSearcherRunningArea.Searching">
            <summary>
            Indicates the mode is normal searching.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Metadata.StepSearcherRunningArea.Gathering">
            <summary>
            Indicates the mode is gathering.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.ModuleInitializer">
            <target name="type">
				<summary>
					<para>
						Provides with the type that contains a module initializer method, called automatically by the CLR
						(Common Language Runtime) to initialize some values.
					</para>
					<para>
						<i>
							The type is called by the compiler and the CLR (Common Language Runtime),
							which means you cannot use any members in this type manually.
						</i>
					</para>
				</summary>
			</target>
        </member>
        <member name="M:Sudoku.Analytics.ModuleInitializer.Initialize">
            <target name="method">
				<summary>
					Called by the runtime automatically while booting on this solution to initialize the values,
					data members or any other things that can or should be initialized here.
				</summary>
				<remarks>
					The concept <b>module</b> is different with <b>assembly</b>.
					The solution can contain multiple assemblies, while each assembly can contain multiple modules.
					However, due to the design of Visual Studio project file system, each assembly will only contain
					one module by default.
				</remarks>
			</target>
        </member>
        <member name="T:Sudoku.Analytics.Patterns.AlmostLockedSet">
            <summary>
            Defines a data structure that describes an ALS.
            </summary>
            <param name="digitMask">The digit mask.</param>
            <param name="map">The map.</param>
            <param name="possibleEliminationMap">Indicates the possible cells that can be as the elimination.</param>
            <remarks>
            An <b>Almost Locked Set</b> is a sudoku concept, which describes a case that
            <c>n</c> cells contains <c>(n + 1)</c> kinds of different digits.
            The special case is a bi-value cell.
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.Patterns.AlmostLockedSet.#ctor(System.Int16,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@)">
            <summary>
            Defines a data structure that describes an ALS.
            </summary>
            <param name="digitMask">The digit mask.</param>
            <param name="map">The map.</param>
            <param name="possibleEliminationMap">Indicates the possible cells that can be as the elimination.</param>
            <remarks>
            An <b>Almost Locked Set</b> is a sudoku concept, which describes a case that
            <c>n</c> cells contains <c>(n + 1)</c> kinds of different digits.
            The special case is a bi-value cell.
            </remarks>
        </member>
        <member name="F:Sudoku.Analytics.Patterns.AlmostLockedSet.StrongRelationsCount">
            <summary>
            Indicates an array of the total number of the strong relations in an ALS of the different size.
            The field is only unused in the property <see cref="P:Sudoku.Analytics.Patterns.AlmostLockedSet.StrongLinks"/>.
            </summary>
            <seealso cref="P:Sudoku.Analytics.Patterns.AlmostLockedSet.StrongLinks"/>
        </member>
        <member name="P:Sudoku.Analytics.Patterns.AlmostLockedSet.House">
            <summary>
            Indicates the house used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Patterns.AlmostLockedSet.IsBivalueCell">
            <summary>
            Indicates whether the ALS only uses a bi-value cell.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Patterns.AlmostLockedSet.DigitsMask">
            <summary>
            Indicates the mask of digits used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Patterns.AlmostLockedSet.StrongLinks">
            <summary>
            Indicates all strong links in this ALS.
            The result will be represented as a <see cref="T:System.Int16"/> mask of 9 bits indicating which bits used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Patterns.AlmostLockedSet.Map">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Patterns.AlmostLockedSet.PossibleEliminationMap">
            <summary>
            Gets the possible cells that can store eliminations for the ALS.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Patterns.AlmostLockedSet.ContainsDigit(Sudoku.Concepts.Grid@,System.Int32,Sudoku.Concepts.CellMap@)">
            <summary>
            Indicates whether the specified grid contains the digit.
            </summary>
            <param name="grid">The grid.</param>
            <param name="digit">The digit.</param>
            <param name="result">The result.</param>
            <returns>A <see cref="T:System.Boolean"/> value.</returns>
        </member>
        <member name="M:Sudoku.Analytics.Patterns.AlmostLockedSet.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.Patterns.AlmostLockedSet.Gather(Sudoku.Concepts.Grid@)">
            <summary>
            Gathers all possible <see cref="T:Sudoku.Analytics.Patterns.AlmostLockedSet"/>s in the specified grid.
            </summary>
            <param name="grid">The grid.</param>
            <returns>All possible found <see cref="T:Sudoku.Analytics.Patterns.AlmostLockedSet"/> instances.</returns>
        </member>
        <member name="T:Sudoku.Analytics.Patterns.ComplexFishFinKind">
            <summary>
            Indicates a fin modifier that is used for a complex fish structure.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Patterns.ComplexFishFinKind.Normal">
            <summary>
            Indicates the normal fish (i.e. no fins).
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Patterns.ComplexFishFinKind.Finned">
            <summary>
            Indicates the finned fish
            (i.e. contains fins, but the fish may be regular when the fins are removed).
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Patterns.ComplexFishFinKind.Sashimi">
            <summary>
            Indicates the sashimi fish
            (i.e. contains fins, and the fish may be degenerated to hidden singles when the fins are removed).
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Patterns.ComplexFishFinKind.Siamese">
            <summary>
            Indicates the siamese fish (i.e. two fish share same base sets, with different cover sets).
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Patterns.ComplexFishShapeKind">
            <summary>
            Indicates a shape modifier that is used for a complex fish structure.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Patterns.ComplexFishShapeKind.Basic">
            <summary>
            Indicates the basic fish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Patterns.ComplexFishShapeKind.Franken">
            <summary>
            Indicates the franken fish.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Patterns.ComplexFishShapeKind.Mutant">
            <summary>
            Indicates the mutant fish.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Patterns.UniqueLoop">
            <summary>
            Represents for a data set that describes the complete information about a unique loop technique.
            </summary>
            <param name="Loop">Indicates the cells used in this whole unique loop.</param>
            <param name="DigitsMask">Indicates the digits used, represented as a mask of type <see cref="T:System.Int16"/>.</param>
        </member>
        <member name="M:Sudoku.Analytics.Patterns.UniqueLoop.#ctor(Sudoku.Concepts.CellMap@,System.Int16)">
            <summary>
            Represents for a data set that describes the complete information about a unique loop technique.
            </summary>
            <param name="Loop">Indicates the cells used in this whole unique loop.</param>
            <param name="DigitsMask">Indicates the digits used, represented as a mask of type <see cref="T:System.Int16"/>.</param>
        </member>
        <member name="P:Sudoku.Analytics.Patterns.UniqueLoop.Loop">
            <summary>Indicates the cells used in this whole unique loop.</summary>
        </member>
        <member name="P:Sudoku.Analytics.Patterns.UniqueLoop.DigitsMask">
            <summary>Indicates the digits used, represented as a mask of type <see cref="T:System.Int16"/>.</summary>
        </member>
        <member name="T:Sudoku.Analytics.Rating.ChainDifficultyRating">
            <summary>
            Represents a type that calculates for chain difficulty.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Rating.ChainDifficultyRating.GetExtraDifficultyByLength(System.Int32)">
            <summary>
            Get extra difficulty rating for a chain node sequence.
            </summary>
            <param name="length">The length.</param>
            <returns>The difficulty.</returns>
        </member>
        <member name="T:Sudoku.Analytics.Rating.ExtraDifficultyCase">
            <summary>
            Represents an extra rating case to be recorded into a technique step.
            </summary>
            <param name="Name">
            Indicates the name of the extra difficulty case. This value is an English word stored in type <see cref="T:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames"/>,
            you can use constants in that type to assign to this property.
            </param>
            <param name="Value">Indicates the value of the target rating.</param>
            <seealso cref="T:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames"/>
        </member>
        <member name="M:Sudoku.Analytics.Rating.ExtraDifficultyCase.#ctor(System.String,System.Decimal)">
            <summary>
            Represents an extra rating case to be recorded into a technique step.
            </summary>
            <param name="Name">
            Indicates the name of the extra difficulty case. This value is an English word stored in type <see cref="T:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames"/>,
            you can use constants in that type to assign to this property.
            </param>
            <param name="Value">Indicates the value of the target rating.</param>
            <seealso cref="T:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames"/>
        </member>
        <member name="P:Sudoku.Analytics.Rating.ExtraDifficultyCase.Name">
            <summary>
            Indicates the name of the extra difficulty case. This value is an English word stored in type <see cref="T:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames"/>,
            you can use constants in that type to assign to this property.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Rating.ExtraDifficultyCase.Value">
            <summary>Indicates the value of the target rating.</summary>
        </member>
        <member name="T:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames">
            <summary>
            Represents with kinds of the phased difficulty rating that is used for the calculations the total rating of a step.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.Size">
            <summary>
            Indicates the kind is the size. This field is used for sized techniques,
            such as deadly patterns of type 3, naked or hidden subsets, fishes.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.ExtraDigit">
            <summary>
            Indicates the kind is the extra digit. This field is used for deadly patterns of type 2.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.Sashimi">
            <summary>
            Indicates the kind is the sashimi. This field is only used for fishes.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.FishShape">
            <summary>
            Indicates the kind is the fish shape. This field is only used for complex fishes.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.Hidden">
            <summary>
            Indicates the kind is the hidden. This field is used for some techniques that has hidden views.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.Locked">
            <summary>
            Indicates the kind is the locked. This field is only used for naked subsets.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.LockedDigit">
            <summary>
            Indicates the kind is the locked digit. This field is only used for Locked Qiu's Deadly Pattern.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.Length">
            <summary>
            Indicates the kind is the length. This field is used for variable-length chaining techniques.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.ConjugatePair">
            <summary>
            Indicates the kind is the conjugate pair. This field is used for deadly patterns of type 4,
            or advanced Unique Rectangle techniques.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.Guardian">
            <summary>
            Indicates the kind is the guardian. This field is used for some guardian-related techniques,
            such as guardian itself, Unique Rectangle + Guardian (i.e. Unique Rectangle External Types).
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.Petals">
            <summary>
            Indicates the number of petals used in death blossom.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.ValueCell">
            <summary>
            Indicates the kind is the value cell used in the pattern. This field is used for Almost Locked Candidates.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.Incompleteness">
            <summary>
            Indicates the kind is the incompleteness. This field is used for Unique Rectangle incomplete types.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.Avoidable">
            <summary>
            Indicates the kind is the avoidable. This field is used for avoidable rectangles.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.WingSize">
            <summary>
            Indicates the kind is the wing size. This field is used for Unique Rectangle + Wings,
            or Regular Wing technique itself.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.Isolated">
            <summary>
            Indicates the kind is the isolated digits. This field is used for Sue de Coq variant types,
            or Unique Rectangle + Sue de Coq.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.Cannibalism">
            <summary>
            Indicates the kind is the cannibalism. This field is used for Sue de Coq variant types.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.Mirror">
            <summary>
            Indicates the kind is the mirror eliminations. This field is only used for exocets.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.BiBiPattern">
            <summary>
            Indicates the kind is the Bi-Bi pattern eliminations. This field is only used for exocets.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.TargetPair">
            <summary>
            Indicates the kind is the target pair eliminations. This field is only used for exocets.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.GeneralizedSwordfish">
            <summary>
            Indicates the kind is the generalized swordfish eliminations. This field is only used for exocets.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.Rating.ExtraDifficultyCaseNames.ExtraHouse">
            <summary>
            Indicates the kind is the extra house. This field is only used for complex senior exocets.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Step">
            <summary>
            Provides with a logical solving step that is a technique usage, and contains the conclusions.
            </summary>
            <param name="conclusions"><inheritdoc cref="P:Sudoku.Presentation.IVisual.Conclusions" path="/summary"/></param>
            <param name="views"><inheritdoc cref="P:Sudoku.Presentation.IVisual.Views" path="/summary"/></param>
        </member>
        <member name="M:Sudoku.Analytics.Step.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[])">
            <summary>
            Provides with a logical solving step that is a technique usage, and contains the conclusions.
            </summary>
            <param name="conclusions"><inheritdoc cref="P:Sudoku.Presentation.IVisual.Conclusions" path="/summary"/></param>
            <param name="views"><inheritdoc cref="P:Sudoku.Presentation.IVisual.Views" path="/summary"/></param>
        </member>
        <member name="P:Sudoku.Analytics.Step.Name">
            <summary>
            Indicates the technique name. The technique name are all stored in the resource dictionary,
            you can find them in the <c>Resources</c> folder (Type <see cref="T:Sudoku.Resources.MergedResources"/>).
            </summary>
            <exception cref="T:Sudoku.Resources.ResourceNotFoundException">Throws when the specified resource key is not found.</exception>
        </member>
        <member name="P:Sudoku.Analytics.Step.Format">
            <summary>
            Gets the format of the current instance.
            </summary>
            <returns>
            Returns a <see cref="T:System.String"/> result. If the resource dictionary doesn't contain
            any valid formats here, the result value will be <see langword="null"/>.
            </returns>
            <remarks>
            <para>
            A <b>format</b> is the better way to format the result text of this technique information instance.
            It'll be represented by the normal characters and the placeholders, e.g.
            <code><![CDATA["Cells {0}, with digits {1}"]]></code>
            </para>
            <para>
            Here the placeholder <c>{0}</c>, and <c>{1}</c> must be provided by property <see cref="P:Sudoku.Analytics.Step.FormatInterpolatedParts"/>.
            You should create 2 values that can be replaced with the placeholder <c>{0}</c> and <c>{1}</c>.
            </para>
            <para>
            The recommended implementation pattern is:
            <code><![CDATA[
            private string CellsStr => Cells.ToString();
            private string DigitsStr => Digits.ToString(separator: R.EmitPunctuation(Punctuation.Comma));
            ]]></code>
            </para>
            <para>
            And then fill the blank via property <see cref="P:Sudoku.Analytics.Step.FormatInterpolatedParts"/>:
            <code><![CDATA[
            public override IDictionary<string, string[]?> FormatInterpolatedParts
                => [["en-US": [CellsStr, DigitsStr]], ["zh-CN": [CellsStr, DigitsStr]]];
            ]]></code>
            via the feature "<see href="https://github.com/dotnet/csharplang/issues/5354">Collection Literals</see>" introduced in C# 12.
            If you cannot decide the real name of the culture name, just use suffix instead like <c>"en"</c> and <c>"zh"</c>, ignoring cases.
            </para>
            <para>
            If you want to use the values in the resource dictionary, you can just use a <see langword="static readonly"/> field
            called <see cref="F:Sudoku.Resources.MergedResources.R"/>, for example:
            <code><![CDATA[
            using static Sudoku.Resources.MergedResources;
            
            public override string Format => R["TheKeyYouWantToSearch"];
            ]]></code>
            </para>
            </remarks>
            <exception cref="T:Sudoku.Resources.ResourceNotFoundException">Throws when the specified resource key is not found.</exception>
            <seealso cref="P:Sudoku.Analytics.Step.FormatInterpolatedParts"/>
            <seealso cref="F:Sudoku.Resources.MergedResources.R"/>
        </member>
        <member name="P:Sudoku.Analytics.Step.BaseDifficulty">
            <summary>
            Indicates the difficulty of this technique step.
            </summary>
            <remarks>
            Generally this property holds the default and basic difficulty of the step.
            If the step's difficulty rating requires multiple factors, this property will provide with a basic difficulty value
            as elementary and default rating value; other factors will be given in the other property <see cref="P:Sudoku.Analytics.Step.ExtraDifficultyCases"/>.
            </remarks>
            <seealso cref="P:Sudoku.Analytics.Step.ExtraDifficultyCases"/>
        </member>
        <member name="P:Sudoku.Analytics.Step.Difficulty">
            <summary>
            Indicates the total difficulty of the technique step. This value is the total sum of merged result from two properties
            <see cref="P:Sudoku.Analytics.Step.BaseDifficulty"/> and <see cref="P:Sudoku.Analytics.Step.ExtraDifficultyCases"/>. For property <see cref="P:Sudoku.Analytics.Step.ExtraDifficultyCases"/>,
            the result is to sum all values up of inner property <see cref="P:Sudoku.Analytics.Rating.ExtraDifficultyCase.Value"/>.
            </summary>
            <seealso cref="P:Sudoku.Analytics.Step.BaseDifficulty"/>
            <seealso cref="P:Sudoku.Analytics.Step.ExtraDifficultyCases"/>
            <seealso cref="T:Sudoku.Analytics.Rating.ExtraDifficultyCase"/>
        </member>
        <member name="P:Sudoku.Analytics.Step.Code">
            <summary>
            The technique code of this instance used for comparison (e.g. search for specified puzzle that contains this technique).
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Step.Group">
            <summary>
            The technique group that this technique instance belongs to.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Step.DifficultyLevel">
            <summary>
            The difficulty level of this step.
            </summary>
            <remarks>
            Although the type of this property is marked <see cref="T:System.FlagsAttribute"/>,
            we still can't set multiple flag values into the result. The flags are filtered
            during generating puzzles.
            </remarks>
            <seealso cref="T:System.FlagsAttribute"/>
        </member>
        <member name="P:Sudoku.Analytics.Step.ExtraDifficultyCases">
            <summary>
            Indicates the extra difficulty cases of the technique step. If the step does not contain such cases,
            this property will keep <see langword="null"/> value.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Step.Conclusions">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Step.Views">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Step.FormatInterpolatedParts">
            <summary>
            Indicates the interpolated parts that is used for the format.
            The formats will be interpolated into the property <see cref="P:Sudoku.Analytics.Step.Format"/> result.
            </summary>
            <remarks>
            <para>
            This property use a dictionary to merge globalizational format data.
            The key type is <see cref="T:System.String"/>, which can be used for the comparison of the current culture via type <see cref="T:System.Globalization.CultureInfo"/>,
            for example, <c>"zh"</c> and <c>"en-US"</c>.
            </para>
            <para>
            For more backing implementation details, please visit method <see cref="M:Sudoku.Analytics.Step.ToString"/> in derived <see langword="class"/>es.
            </para>
            </remarks>
            <seealso cref="P:Sudoku.Analytics.Step.Format"/>
            <seealso cref="T:System.Globalization.CultureInfo"/>
            <seealso cref="M:Sudoku.Analytics.Step.ToString"/>
        </member>
        <member name="P:Sudoku.Analytics.Step.ConclusionText">
            <summary>
            Indicates the string representation of the conclusions of the step.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Step.EqualityContract">
            <summary>
            Returns a <see cref="T:System.Type"/> instance that specifies the type information of this current object.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Step.ApplyTo(Sudoku.Concepts.Grid@)">
            <summary>
            Put this instance into the specified grid.
            </summary>
            <param name="grid">The grid.</param>
        </member>
        <member name="M:Sudoku.Analytics.Step.ToString">
            <summary>
            Returns a string that only contains the name and the basic description.
            </summary>
            <returns>The string instance.</returns>
            <remarks><i>
            This method uses modifiers <see langword="sealed"/> and <see langword="override"/> to prevent with compiler overriding this method.
            </i></remarks>
        </member>
        <member name="M:Sudoku.Analytics.Step.ToSimpleString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.StepSearcher">
            <summary>
            Represents a searcher that can creates <see cref="T:Sudoku.Analytics.Step"/> instances for the specified technique.
            </summary>
            <param name="priority"><inheritdoc cref="P:Sudoku.Analytics.StepSearcher.Priority" path="/summary"/></param>
            <param name="level"><inheritdoc cref="P:Sudoku.Analytics.StepSearcher.Level" path="/summary"/></param>
            <param name="runningArea"><inheritdoc cref="P:Sudoku.Analytics.StepSearcher.RunningArea" path="/summary"/></param>
            <seealso cref="T:Sudoku.Analytics.Step"/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearcher.#ctor(System.Int32,Sudoku.Analytics.Metadata.StepSearcherLevel,Sudoku.Analytics.Metadata.StepSearcherRunningArea)">
            <summary>
            Represents a searcher that can creates <see cref="T:Sudoku.Analytics.Step"/> instances for the specified technique.
            </summary>
            <param name="priority"><inheritdoc cref="P:Sudoku.Analytics.StepSearcher.Priority" path="/summary"/></param>
            <param name="level"><inheritdoc cref="P:Sudoku.Analytics.StepSearcher.Level" path="/summary"/></param>
            <param name="runningArea"><inheritdoc cref="P:Sudoku.Analytics.StepSearcher.RunningArea" path="/summary"/></param>
            <seealso cref="T:Sudoku.Analytics.Step"/>
        </member>
        <member name="P:Sudoku.Analytics.StepSearcher.IsSeparated">
            <summary>
            Determines whether the current step searcher is separated one, which mean it can be created
            as many possible instances in a same step searchers pool.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.StepSearcher.IsDirect">
            <summary>
            Determines whether the current step searcher is a direct one.
            </summary>
            <remarks>
            If you don't know what is a direct step searcher, please visit the property
            <see cref="T:Sudoku.Analytics.Metadata.DirectAttribute"/> to learn more information.
            </remarks>
            <seealso cref="T:Sudoku.Analytics.Metadata.DirectAttribute"/>
        </member>
        <member name="P:Sudoku.Analytics.StepSearcher.IsOptionsFixed">
            <summary>
            Determines whether we can adjust the ordering of the current step searcher
            as a customized configuration option before solving a puzzle.
            </summary>
            <remarks>
            If you don't know what is a direct step searcher, please visit the property <see cref="T:Sudoku.Analytics.Metadata.FixedAttribute"/> to learn more information.
            </remarks>
            <seealso cref="T:Sudoku.Analytics.Metadata.FixedAttribute"/>
        </member>
        <member name="P:Sudoku.Analytics.StepSearcher.IsNotSupportedForSukaku">
            <summary>
            Determines whether the current step searcher is not supported for sukaku solving mode.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.StepSearcher.IsConfiguredSlow">
            <summary>
            Determines whether the current step searcher is disabled
            by option <see cref="F:Sudoku.Analytics.Metadata.ConditionalCase.UnlimitedTimeComplexity"/> being configured.
            </summary>
            <seealso cref="F:Sudoku.Analytics.Metadata.ConditionalCase.UnlimitedTimeComplexity"/>
        </member>
        <member name="P:Sudoku.Analytics.StepSearcher.IsConfiguredHighAllocation">
            <summary>
            Determines whether the current step searcher is disabled
            by option <see cref="F:Sudoku.Analytics.Metadata.ConditionalCase.UnlimitedSpaceComplexity"/> being configured.
            </summary>
            <seealso cref="F:Sudoku.Analytics.Metadata.ConditionalCase.UnlimitedSpaceComplexity"/>
        </member>
        <member name="P:Sudoku.Analytics.StepSearcher.Priority">
            <summary>
            Indicates the priority value of the current step searcher.
            This property is used for sorting multiple <see cref="T:Sudoku.Analytics.StepSearcher"/> instances.
            </summary>
            <remarks>
            <para>
            Please note that the set value cannot be same for different <see cref="T:Sudoku.Analytics.StepSearcher"/> types;
            otherwise, <see cref="T:System.InvalidOperationException"/> will be thrown while comparing with two <see cref="T:Sudoku.Analytics.StepSearcher"/>s.
            </para>
            <para>
            This property may be automatically generated by source generator. Therefore, you may not care about implementation of this property.
            </para>
            </remarks>
        </member>
        <member name="P:Sudoku.Analytics.StepSearcher.Level">
            <summary>
            Indicates the level that the current step searcher belongs to.
            </summary>
            <remarks>
            This property indicates how difficult the step searcher can be enabled. For more information,
            please visit type <see cref="T:Sudoku.Analytics.Metadata.StepSearcherLevel"/>.
            </remarks>
            <seealso cref="T:Sudoku.Analytics.Metadata.StepSearcherLevel"/>
        </member>
        <member name="P:Sudoku.Analytics.StepSearcher.RunningArea">
            <summary>
            Indicates the running area which describes a function where the current step searcher can be invoked.
            </summary>
            <remarks>
            By default, the step searcher will support both <see cref="F:Sudoku.Analytics.Metadata.StepSearcherRunningArea.Searching"/>
            and <see cref="F:Sudoku.Analytics.Metadata.StepSearcherRunningArea.Gathering"/>.
            </remarks>
        </member>
        <member name="P:Sudoku.Analytics.StepSearcher.TypeName">
            <summary>
            The qualified type name of this instance.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.StepSearcher.EqualityContract">
            <summary>
            Indicates the <see cref="T:System.Type"/> instance that represents the reflection data for the current instance.
            This property is used as type checking to distinct with multiple <see cref="T:Sudoku.Analytics.StepSearcher"/>s.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearcher.Equals(System.Object)">
            <summary>
            Determines whether the specified object has same type as the current instance.
            </summary>
            <param name="obj">The object to be checked.</param>
            <returns>A <see cref="T:System.Boolean"/> result indicating that.</returns>
        </member>
        <member name="M:Sudoku.Analytics.StepSearcher.Equals(Sudoku.Analytics.StepSearcher)">
            <inheritdoc cref="M:Sudoku.Analytics.StepSearcher.Equals(System.Object)"/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearcher.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearcher.CompareTo(Sudoku.Analytics.StepSearcher)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearcher.ToString">
            <summary>
            Returns the real name of this instance.
            </summary>
            <returns>Real name of this instance.</returns>
        </member>
        <member name="M:Sudoku.Analytics.StepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <summary>
            Try to search for <see cref="T:Sudoku.Analytics.Step"/> results for the current technique rule.
            </summary>
            <param name="context">
            <para>
            The analysis context. This argument offers you some elementary data configured or assigned, for the current loop of step searching.
            </para>
            <para>
            All available <see cref="T:Sudoku.Analytics.Step"/> results will be stored in property <see cref="P:Sudoku.Analytics.AnalysisContext.Accumulator"/>
            of this argument, if property <see cref="P:Sudoku.Analytics.AnalysisContext.OnlyFindOne"/> returns <see langword="false"/>;
            otherwise, the property won't be used, and this method will return the first found step.
            </para>
            </param>
            <returns>
            Returns the first found step. The nullability of the return value are as belows:
            <list type="bullet">
            <item>
            <see langword="null"/>:
            <list type="bullet">
            <item><c><paramref name="context"/>.OnlyFindOne == <see langword="false"/></c>.</item>
            <item><c><paramref name="context"/>.OnlyFindOne == <see langword="true"/></c>, but nothing found.</item>
            </list>
            </item>
            <item>
            Not <see langword="null"/>:
            <list type="bullet">
            <item>
            <c><paramref name="context"/>.OnlyFindOne == <see langword="true"/></c>,
            and found <b>at least one step</b>. In this case the return value is the first found step.
            </item>
            </list>
            </item>
            </list>
            </returns>
            <seealso cref="T:Sudoku.Analytics.Step"/>
            <seealso cref="T:Sudoku.Analytics.AnalysisContext"/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearcher.op_Equality(Sudoku.Analytics.StepSearcher,Sudoku.Analytics.StepSearcher)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearcher.op_Inequality(Sudoku.Analytics.StepSearcher,Sudoku.Analytics.StepSearcher)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearcher.op_GreaterThan(Sudoku.Analytics.StepSearcher,Sudoku.Analytics.StepSearcher)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearcher.op_GreaterThanOrEqual(Sudoku.Analytics.StepSearcher,Sudoku.Analytics.StepSearcher)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearcher.op_LessThan(Sudoku.Analytics.StepSearcher,Sudoku.Analytics.StepSearcher)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearcher.op_LessThanOrEqual(Sudoku.Analytics.StepSearcher,Sudoku.Analytics.StepSearcher)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.StepSearcherPool">
            <summary>
            Represents a provider type that can find built-in <see cref="T:Sudoku.Analytics.StepSearcher"/> instances.
            </summary>
            <seealso cref="T:Sudoku.Analytics.StepSearcher"/>
        </member>
        <member name="P:Sudoku.Analytics.StepSearcherPool.BuiltIn">
            <summary>
            Indicates an array of built-in <see cref="T:Sudoku.Analytics.StepSearcher"/>s.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.ComplexFishStepSearcher">
            <summary>
            Provides with a <b>Complex Fish</b> step searcher.
            The step searcher will include the following techniques:
            <list type="bullet">
            <item>
            Franken Fishes
            <list type="bullet">
            <item>Finned Franken Fish</item>
            <item>Sashimi Franken Fish</item>
            </list>
            </item>
            <item>
            Mutant Fishes
            <list type="bullet">
            <item>Finned Mutant Fish</item>
            <item>Sashimi Mutant Fish</item>
            </list>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.StepSearchers.ComplexFishStepSearcher.ElimsSearcher">
            <summary>
            The internal <see cref="T:Sudoku.Analytics.StepSearcher"/> instance that is used for pre-checking the possible eliminations of the fishes.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.StepSearchers.ComplexFishStepSearcher.MaxSize">
            <summary>
            Indicates the maximum size of the fish the step searcher instance can search for. The maximum possible value of this property is 7.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.ComplexFishStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.ComplexFishStepSearcher.GetAll(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.ComplexFishStep},Sudoku.Concepts.Grid@,Sudoku.Concepts.CellMap@,System.Int32,System.Boolean)">
            <summary>
            Get all possible fish steps.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="pomElimsOfThisDigit">The possible eliminations to check.</param>
            <param name="digit">The current digit used.</param>
            <param name="onlyFindOne">Indicates whether the method only find one possible step.</param>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.ComplexFishStepSearcher.GetPomEliminationsFirstly(Sudoku.Concepts.Grid@)">
            <summary>
            Get POM technique eliminations at first.
            </summary>
            <param name="grid">The grid.</param>
            <returns>The dictionary that contains all eliminations grouped by digit used.</returns>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.ExtendedRectangleStepSearcher">
            <summary>
            Provides with an <b>Extended Rectangle</b> step searcher.
            The step searcher will include the following techniques:
            <list type="bullet">
            <item>Extended Rectangle Type 1</item>
            <item>Extended Rectangle Type 2</item>
            <item>Extended Rectangle Type 3</item>
            <item>Extended Rectangle Type 4</item>
            </list>
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.StepSearchers.ExtendedRectangleStepSearcher.PatternInfos">
            <summary>
            Indicates all possible extended rectangle pattern combinations.
            </summary>
            <remarks>
            <para>The list contains two types of <b>Extended Rectangle</b>s:</para>
            <para>
            Fit type (2 blocks spanned):
            <code><![CDATA[
            ab | ab
            bc | bc
            ac | ac
            ]]></code>
            </para>
            <para>
            Fat type (3 blocks spanned):
            <code><![CDATA[
            ab | ac | bc
            ab | ac | bc
            ]]></code>
            </para>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.ExtendedRectangleStepSearcher.#cctor">
            <static-constructor>
		<summary>
			<para>
				Indicates the <see langword="static" /> constructor of the current type.
			</para>
			<para>
				This constructor will initialize some <see langword="static readonly" /> data members
				of this type that can't use a simple expression to describe the initial value.
			</para>
		</summary>
	</static-constructor>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.ExtendedRectangleStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.ExtendedRectangleStepSearcher.CheckType1(System.Collections.Generic.List{Sudoku.Analytics.Step},Sudoku.Concepts.Grid@,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Int16,System.Int32,System.Boolean)">
            <summary>
            Check type 1.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="allCellsMap">The map of all cells used.</param>
            <param name="extraCells">The extra cells map.</param>
            <param name="normalDigits">The normal digits mask.</param>
            <param name="extraDigit">The extra digit.</param>
            <param name="onlyFindOne">Indicates whether the searcher only searches for one step.</param>
            <returns>The first found step if worth.</returns>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.ExtendedRectangleStepSearcher.CheckType2(System.Collections.Generic.List{Sudoku.Analytics.Step},Sudoku.Concepts.Grid@,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Int16,System.Int32,System.Boolean)">
            <summary>
            Check type 2.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="allCellsMap">The map of all cells used.</param>
            <param name="extraCells">The extra cells map.</param>
            <param name="normalDigits">The normal digits mask.</param>
            <param name="extraDigit">The extra digit.</param>
            <param name="onlyFindOne">Indicates whether the searcher only searches for one step.</param>
            <returns>The first found step if worth.</returns>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.ExtendedRectangleStepSearcher.CheckType3Naked(System.Collections.Generic.List{Sudoku.Analytics.Step},Sudoku.Concepts.Grid@,Sudoku.Concepts.CellMap@,System.Int16,System.Int16,Sudoku.Concepts.CellMap@,System.Boolean)">
            <summary>
            Check type 3.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="allCellsMap">The map of all cells used.</param>
            <param name="normalDigits">The normal digits mask.</param>
            <param name="extraDigits">The extra digits mask.</param>
            <param name="extraCellsMap">The map of extra cells.</param>
            <param name="onlyFindOne">Indicates whether the searcher only searches for one step.</param>
            <returns>The first found step if worth.</returns>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.ExtendedRectangleStepSearcher.CheckType14(System.Collections.Generic.List{Sudoku.Analytics.Step},Sudoku.Concepts.Grid@,Sudoku.Concepts.CellMap@,System.Int16,Sudoku.Concepts.CellMap@,System.Boolean)">
            <summary>
            Check type 4 and a part of type 1 that the method
            <see cref="M:Sudoku.Analytics.StepSearchers.ExtendedRectangleStepSearcher.CheckType1(System.Collections.Generic.List{Sudoku.Analytics.Step},Sudoku.Concepts.Grid@,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Int16,System.Int32,System.Boolean)"/>
            cannot be found.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="allCellsMap">The map of all cells used.</param>
            <param name="normalDigits">The normal digits mask.</param>
            <param name="extraCellsMap">The map of extra cells.</param>
            <param name="onlyFindOne">Indicates whether the searcher only searches for one step.</param>
            <returns>The first found step if worth.</returns>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.BitSubsetsGenerator">
            <summary>
            Represents a bit combination generator.
            </summary>
            <param name="bitCount">The number of bits.</param>
            <param name="oneCount">The number of <see langword="true"/> bits.</param>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.BitSubsetsGenerator.#ctor(System.Int32,System.Int32)">
            <summary>
            Represents a bit combination generator.
            </summary>
            <param name="bitCount">The number of bits.</param>
            <param name="oneCount">The number of <see langword="true"/> bits.</param>
        </member>
        <member name="F:Sudoku.Analytics.StepSearchers.BitSubsetsGenerator._enumerator">
            <summary>
            The inner enumerator.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.BitSubsetsGenerator.GetEnumerator">
            <summary>
            Gets the enumerator of the current instance in order to use <see langword="foreach"/> loop.
            </summary>
            <returns>The enumerator instance.</returns>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.Enumerator">
            <summary>
            Indicates the enumerator of the current instance.
            </summary>
            <param name="bitCount">The number of bits.</param>
            <param name="oneCount">The number of <see langword="true"/> bits.</param>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.Enumerator.#ctor(System.Int32,System.Int32)">
            <summary>
            Indicates the enumerator of the current instance.
            </summary>
            <param name="bitCount">The number of bits.</param>
            <param name="oneCount">The number of <see langword="true"/> bits.</param>
        </member>
        <member name="F:Sudoku.Analytics.StepSearchers.Enumerator._mask">
            <summary>
            The mask.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.StepSearchers.Enumerator._isLast">
            <summary>
            Indicates whether that the value is the last one.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.StepSearchers.Enumerator.Current">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.Enumerator.MoveNext">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.UniqueLoopStepSearcher">
            <summary>
            Provides with a <b>Unique Loop</b> step searcher.
            The step searcher will include the following techniques:
            <list type="bullet">
            <item>Unique Loop Type 1</item>
            <item>Unique Loop Type 2</item>
            <item>Unique Loop Type 3</item>
            <item>Unique Loop Type 4</item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueLoopStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueLoopStepSearcher.CheckType1(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueLoopStep},System.Int32,System.Int32,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Boolean)">
            <summary>
            Check type 1.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="d1">The digit 1.</param>
            <param name="d2">The digit 2.</param>
            <param name="loop">The loop.</param>
            <param name="extraCellsMap">The extra cells map.</param>
            <param name="onlyFindOne">Indicates whether the searcher only searching for one step is okay.</param>
            <returns>The step is worth.</returns>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueLoopStepSearcher.CheckType2(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueLoopStep},Sudoku.Concepts.Grid@,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Int16,System.Boolean)">
            <summary>
            Check type 2.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="d1">The digit 1.</param>
            <param name="d2">The digit 2.</param>
            <param name="loop">The loop.</param>
            <param name="extraCellsMap">The extra cells map.</param>
            <param name="comparer">The comparer mask (equals to <c><![CDATA[1 << d1 | 1 << d2]]></c>).</param>
            <param name="onlyFindOne">Indicates whether the searcher only searching for one step is okay.</param>
            <returns>The step is worth.</returns>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueLoopStepSearcher.CheckType3(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueLoopStep},Sudoku.Concepts.Grid@,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Int16,System.Boolean)">
            <summary>
            Check type 3.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="d1">The digit 1.</param>
            <param name="d2">The digit 2.</param>
            <param name="loop">The loop.</param>
            <param name="extraCellsMap">The extra cells map.</param>
            <param name="comparer">The comparer mask (equals to <c><![CDATA[1 << d1 | 1 << d2]]></c>).</param>
            <param name="onlyFindOne">Indicates whether the searcher only searching for one step is okay.</param>
            <returns>The step is worth.</returns>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueLoopStepSearcher.CheckType4(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueLoopStep},Sudoku.Concepts.Grid@,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Int16,System.Boolean)">
            <summary>
            Check type 4.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="d1">The digit 1.</param>
            <param name="d2">The digit 2.</param>
            <param name="loop">The loop.</param>
            <param name="extraCellsMap">The extra cells map.</param>
            <param name="comparer">The comparer mask (equals to <c><![CDATA[1 << d1 | 1 << d2]]></c>).</param>
            <param name="onlyFindOne">Indicates whether the searcher only searching for one step is okay.</param>
            <returns>The step is worth.</returns>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.Cached">
            <summary>
            Represents a cached gathering operation set.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.Cached.GatherUniqueLoops(System.Int16)">
            <summary>
            Try to gather all possible loops being used in technique unique loops,
            which should satisfy the specified condition.
            </summary>
            <param name="digitsMask">The digits used.</param>
            <returns>
            Returns a list of array of candidates used in the loop, as the data of possible found loops.
            </returns>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.Cached.DepthFirstSearching_UniqueLoop(System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int16,Sudoku.Concepts.CellMap@,,System.Collections.Generic.List{Sudoku.Analytics.Patterns.UniqueLoop})">
            <summary>
            Checks for unique loops using recursion.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.Cached.UniqueLoopSatisfyingPredicate(Sudoku.Concepts.CellMap@)">
            <summary>
            Defines a templating method that can determine whether a loop is a valid unique loop.
            </summary>
            <param name="loop">The loop to be checked.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher">
            <summary>
            Provides with a <b>Unique Rectangle</b> step searcher.
            The step searcher will include the following techniques:
            <list type="bullet">
            <item>
            Basic types:
            <list type="bullet">
            <item>Unique Rectangle Type 1-6</item>
            <item>Avoidable Rectangle Type 1-3, 5</item>
            <item>Hidden Unique Rectangle</item>
            <item>Hidden Avoidable Rectangle</item>
            </list>
            </item>
            <item>
            Structured types:
            <list type="bullet">
            <item>Unique Rectangle + Conjugate Pair (also called "Unique Rectangle + Strong Link")</item>
            <item>Avoidable Rectangle + Hidden Single</item>
            <item>Unique Rectangle + Unknown Covering</item>
            <item>Unique Rectangle + Sue de Coq</item>
            <item>
            Unique Rectangle + Guardian (This program call it "Unique Rectangle External Types"):
            <list type="bullet">
            <item>Unique Rectangle External Type 1-4</item>
            <item>Unique Rectangle External Type with XY-Wing</item>
            <item>Unique Rectangle External Type with ALS-XZ</item>
            <item>Unique Rectangle External Type with Skyscraper</item>
            </list>
            </item>
            <item>Avoidable Rectangle + Guardian (Sub-types are same like above)</item>
            </list>
            </item>
            <item>
            Miscellaneous types:
            <list type="bullet">
            <item>Unique Rectangle 2D, 3X</item>
            </list>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.AllowIncompleteUniqueRectangles">
            <summary>
            Indicates whether the UR can be incomplete. In other words,
            some of UR candidates can be removed before the pattern forms.
            </summary>
            <remarks>
            For example, the complete pattern is:
            <code><![CDATA[
            ab  |  ab
            ab  |  ab
            ]]></code>
            This is a complete pattern, and we may remove an <c>ab</c> in a certain corner.
            The incomplete pattern may not contain all four <c>ab</c>s in the structure.
            </remarks>
        </member>
        <member name="P:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.SearchForExtendedUniqueRectangles">
            <summary>
            Indicates whether the searcher can search for extended URs.
            </summary>
            <remarks>
            The basic types are type 1 to type 6, all other types are extended ones.
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.GetAll(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Boolean)">
            <summary>
            Get all possible hints from the grid.
            </summary>
            <param name="gathered"><inheritdoc cref="P:Sudoku.Analytics.AnalysisContext.Accumulator" path="/summary"/></param>
            <param name="grid"><inheritdoc cref="F:Sudoku.Analytics.AnalysisContext.Grid" path="/summary"/></param>
            <param name="arMode">Indicates whether the current mode is searching for ARs.</param>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.IsIncomplete(System.Collections.Generic.IEnumerable{Sudoku.Presentation.Nodes.CandidateViewNode})">
            <summary>
            Check whether the highlight UR candidates is incomplete.
            </summary>
            <param name="list">The list to check.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
            <remarks>
            This method uses a trick to check a UR structure: to count up the number of "Normal colored"
            candidates used in the current UR structure. If and only if the full structure uses 8 candidates
            colored with normal one, the structure will be complete.
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckType1(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check type 1.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="cornerCell">The corner cell.</param>
            <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
            <param name="index">The index.</param>
            <remarks>
            The structure:
            <code><![CDATA[
              ↓ cornerCell
            (abc) ab
             ab   ab
            ]]></code>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckType2(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check type 2.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
            <param name="index">The index.</param>
            <remarks>
            The structure:
            <code><![CDATA[
              ↓ corner1, corner2
            (abc) (abc)
             ab    ab
            ]]></code>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckType3(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check type 3.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">
            The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
            <remarks>
            The structure:
            <code><![CDATA[
             ↓ corner1, corner2
            (ab ) (ab )
             abx   aby
            ]]></code>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckType4(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check type 4.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">
            The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
            <remarks>
            The structure:
            <code><![CDATA[
             ↓ corner1, corner2
            (ab ) ab
             abx  aby
            ]]></code>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckType5(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check type 5.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="cornerCell">The corner cell.</param>
            <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
            <param name="index">The index.</param>
            <remarks>
            The structure:
            <code><![CDATA[
             ↓ cornerCell
            (ab ) abc
             abc  abc
            ]]></code>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckType6(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check type 6.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
            <param name="index">The index.</param>
            <remarks>
            The structure:
            <code><![CDATA[
             ↓ corner1
            (ab )  aby
             abx  (ab)
                   ↑corner2
            ]]></code>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckHidden(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check hidden UR.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="cornerCell">The corner cell.</param>
            <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
            <param name="index">The index.</param>
            <remarks>
            The structure:
            <code><![CDATA[
             ↓ cornerCell
            (ab ) abx
             aby  abz
            ]]></code>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.Check2D(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check UR + 2D.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
            <param name="index">The index.</param>
            <remarks>
            The structure:
            <code><![CDATA[
              ↓ corner1
            (ab )  abx
             aby  (ab )  xy  *
                    ↑ corner2
            ]]></code>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.Check2B1SL(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check UR + 2B/1SL.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
            <param name="index">The index.</param>
            <remarks>
            The structure:
            <code><![CDATA[
              ↓ corner1, corner2
            (ab )  (ab )
             |
             | a
             |
             abx    aby
            ]]></code>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.Check2D1SL(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check UR + 2D/1SL.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
            <param name="index">The index.</param>
            <remarks>
            The structure:
            <code><![CDATA[
              ↓ corner1
            (ab )   aby
             |
             | a
             |
             abx   (ab )
                     ↑ corner2
            ]]></code>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.Check3X(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check UR + 3X.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="cornerCell">The corner cell.</param>
            <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
            <param name="index">The index.</param>
            <remarks>
            The structure:
            <code><![CDATA[
             ↓ cornerCell
            (ab )  abx
             aby   abz   xy  *
            ]]></code>
            Note: <c>z</c> is <c>x</c> or <c>y</c>.
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.Check3X2SL(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check UR + 3X/2SL.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="cornerCell">The corner cell.</param>
            <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
            <param name="index">The index.</param>
            <remarks>
            The structure:
            <code><![CDATA[
             ↓ cornerCell
            (ab )    abx
                      |
                      | b
                  a   |
             aby-----abz
            ]]></code>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.Check3N2SL(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check UR + 3N/2SL.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="cornerCell">The corner cell.</param>
            <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
            <param name="index">The index.</param>
            <remarks>
            The structure:
            <code><![CDATA[
             ↓ cornerCell
            (ab )-----abx
                   a   |
                       | b
                       |
             aby      abz
            ]]></code>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.Check3U2SL(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
             <summary>
             Check UR + 3U/2SL.
             </summary>
             <param name="accumulator">The technique accumulator.</param>
             <param name="grid">The grid.</param>
             <param name="urCells">All UR cells.</param>
             <param name="arMode">Indicates whether the current mode is AR mode.</param>
             <param name="comparer">The mask comparer.</param>
             <param name="d1">The digit 1 used in UR.</param>
             <param name="d2">The digit 2 used in UR.</param>
             <param name="cornerCell">The corner cell.</param>
             <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
             <param name="index">The index.</param>
             <remarks>
             The structure:
             <code><![CDATA[
              ↓ cornerCell
             (ab )-----abx
                    a
            
                    b
              aby -----abz
             ]]></code>
             </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.Check3E2SL(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
             <summary>
             Check UR + 3E/2SL.
             </summary>
             <param name="accumulator">The technique accumulator.</param>
             <param name="grid">The grid.</param>
             <param name="urCells">All UR cells.</param>
             <param name="arMode">Indicates whether the current mode is AR mode.</param>
             <param name="comparer">The mask comparer.</param>
             <param name="d1">The digit 1 used in UR.</param>
             <param name="d2">The digit 2 used in UR.</param>
             <param name="cornerCell">The corner cell.</param>
             <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
             <param name="index">The index.</param>
             <remarks>
             The structure:
             <code><![CDATA[
               ↓ cornerCell
             (ab )-----abx
                    a
            
                    a
              aby -----abz
             ]]></code>
             </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.Check4X3SL(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check UR + 4X/3SL.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
            <param name="index">The index.</param>
            <remarks>
            The structure:
            <code><![CDATA[
              ↓ corner1, corner2
            (abx)-----(aby)
                   a    |
                        | b
                   a    |
             abz ----- abw
            ]]></code>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.Check4C3SL(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check UR + 4C/3SL.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
            <param name="index">The index.</param>
            <remarks>
            <para>The structures:</para>
            <para>
            Subtype 1:
            <code><![CDATA[
              ↓ corner1, corner2
            (abx)-----(aby)
                   a    |
                        | a
                   b    |
             abz ----- abw
            ]]></code>
            </para>
            <para>
            Subtype 2:
            <code><![CDATA[
              ↓ corner1, corner2
            (abx)-----(aby)
              |    a    |
              | b       | a
              |         |
             abz       abw
            ]]></code>
            </para>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckRegularWing(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32,System.Int32)">
            <summary>
            Check UR-XY-Wing, UR-XYZ-Wing, UR-WXYZ-Wing and AR-XY-Wing, AR-XYZ-Wing and AR-WXYZ-Wing.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
            <param name="size">The size of the wing to search.</param>
            <param name="index">The index.</param>
            <remarks>
            <para>The structures:</para>
            <para>
            Subtype 1:
            <code><![CDATA[
              ↓ corner1
            (ab )  abxy  yz  xz
            (ab )  abxy  *
              ↑ corner2
            ]]></code>
            Note that the pair of cells <c>abxy</c> should be in the same house.
            </para>
            <para>
            Subtype 2:
            <code><![CDATA[
              ↓ corner1
            (ab )  abx   xz
             aby  (ab )  *   yz
                    ↑ corner2
            ]]></code>
            </para>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckSueDeCoq(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check UR + SdC.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">The map of other cells during the current UR searching.</param>
            <param name="index">The index.</param>
            <remarks>
            The structure:
            <code><![CDATA[
                      |   xyz
             ab+ ab+  | abxyz abxyz
                      |   xyz
            ----------+------------
            (ab)(ab)  |
             ↑ corner1, corner2
            ]]></code>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckBabaGroupingUnique(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Int16,System.Int32,System.Int32,System.Int32)">
             <summary>
             Check UR + baba grouping.
             </summary>
             <param name="accumulator">The technique accumulator.</param>
             <param name="grid">The grid.</param>
             <param name="urCells">All UR cells.</param>
             <param name="comparer">The comparer.</param>
             <param name="d1">The digit 1.</param>
             <param name="d2">The digit 2.</param>
             <param name="index">The index.</param>
             <remarks>
             <para>The structures:</para>
             <para>
             Subtype 1:
             <code><![CDATA[
                  ↓urCellInSameBlock
             ab  abc      abc  ←anotherCell
            
                 abcx-----abcy ←resultCell
                       c
                  ↑targetCell
             ]]></code>
             Where the digit <c>a</c> and <c>b</c> in the bottom-left cell <c>abcx</c> can be removed.
             </para>
             <para>
             Subtype 2:
             <code><![CDATA[
             abcx   | ab  abc
              |     |
              | c   |
              |     |
             abcy   |     abc
             ]]></code>
             </para>
             </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckExternalType1Or2(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            <para>Check UR/AR + Guardian (i.e. UR External Type 2) and UR External Type 1.</para>
            <para>
            A UR external type 1 is a special case for type 2, which means only one guardian cell will be used.
            </para>
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="index">The index.</param>
            <param name="arMode"></param>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckExternalType3(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Int16,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Check UR/AR + Guardian, with external subset (i.e. UR External Type 3).
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="index">The index.</param>
            <param name="arMode"></param>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckExternalType4(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Int16,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Check UR/AR + Guardian, with external conjugate pair (i.e. UR External Type 4).
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="index">The index.</param>
            <param name="arMode"></param>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckExternalTurbotFish(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Int16,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Check UR/AR + Guardian, with external turbot fish.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="comparer">The comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="index">The mask index.</param>
            <param name="arMode"></param>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckExternalXyWing(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Int16,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Check UR/AR + Guardian, with external XY-Wing.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="comparer">The comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="index">The mask index.</param>
            <param name="arMode"></param>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckExternalAlmostLockedSetsXz(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],Sudoku.Analytics.Patterns.AlmostLockedSet[],System.Int16,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Check UR/AR + Guardian, with external ALS-XZ rule.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="alses">The ALS structures.</param>
            <param name="comparer">The comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="index">The mask index.</param>
            <param name="arMode"></param>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.UniqueRectangleStepSearcher.CheckHiddenSingleAvoidable(System.Collections.Generic.ICollection{Sudoku.Analytics.Steps.UniqueRectangleStep},Sudoku.Concepts.Grid@,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Check AR + Hidden single.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">
            The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
            <remarks>
            <para>The structure:</para>
            <para>
            <code><![CDATA[
            ↓corner1
            a   | aby  -  -
            abx | a    -  b
                | -    -  -
                  ↑corner2(cell 'a')
            ]]></code>
            There's only one cell can be filled with the digit 'b' besides the cell 'aby'.
            </para>
            </remarks>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.NormalFishStepSearcher">
            <summary>
            Provides with a <b>Normal Fish</b> step searcher. The step searcher will include the following techniques:
            <list type="bullet">
            <item>
            Normal fishes:
            <list type="bullet">
            <item>X-Wing</item>
            <item>Swordfish</item>
            <item>Jellyfish</item>
            </list>
            </item>
            <item>
            Finned fishes:
            <list type="bullet">
            <item>
            Finned normal fishes:
            <list type="bullet">
            <item>Finned X-Wing</item>
            <item>Finned Swordfish</item>
            <item>Finned Jellyfish</item>
            </list>
            </item>
            <item>
            Finned sashimi fishes:
            <list type="bullet">
            <item>Sashimi X-Wing</item>
            <item>Sashimi Swordfish</item>
            <item>Sashimi Jellyfish</item>
            </list>
            </item>
            </list>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.NormalFishStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.NormalFishStepSearcher.GetAll(System.Collections.Generic.ICollection{Sudoku.Analytics.Step},Sudoku.Concepts.Grid@,System.Int32,System.Int32**,System.Int32**,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Get all possible normal fishes.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="grid">The grid.</param>
            <param name="size">The size.</param>
            <param name="r">The possible row table to iterate.</param>
            <param name="c">The possible column table to iterate.</param>
            <param name="withFin">Indicates whether the searcher will check for the existence of fins.</param>
            <param name="searchRow">
            Indicates whether the searcher searches for fishes in the direction of rows.
            </param>
            <param name="onlyFindOne">Indicates whether the method only searches for one step.</param>
            <returns>The first found step.</returns>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.NormalFishStepSearcher.GetDirectView(System.Int32,System.Int32[],System.Int32[],Sudoku.Concepts.CellMap@,System.Boolean)">
            <summary>
            Get the direct fish view with the specified grid and the base sets.
            </summary>
            <param name="digit">The digit.</param>
            <param name="baseSets">The base sets.</param>
            <param name="coverSets">The cover sets.</param>
            <param name="fins">The cells of the fin in the current fish.</param>
            <param name="searchRow">Indicates whether the current searcher searches row.</param>
            <returns>The view.</returns>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.AlmostLockedCandidatesStepSearcher">
            <summary>
            Provides with an <b>Almost Locked Candidates</b> step searcher.
            The step searcher will include the following techniques:
            <list type="bullet">
            <item>Almost Locked Pair</item>
            <item>Almost Locked Triple</item>
            <item>Almost Locked Quadruple (Maybe unnecessary)</item>
            </list>
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.StepSearchers.AlmostLockedCandidatesStepSearcher.CheckAlmostLockedQuadruple">
            <summary>
            Indicates whether the user checks the almost locked quadruple.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.StepSearchers.AlmostLockedCandidatesStepSearcher.CheckForValues">
            <summary>
            Indicates whether the searcher checks for values (givens and modifiables)
            to form an almost locked candidates. If the value is <see langword="true"/>,
            some possible Sue de Coqs steps will be replaced with Almost Locked Candidates ones.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.AlmostLockedCandidatesStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.AlmostLockedCandidatesStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@,System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@)">
             <summary>
             <inheritdoc cref="M:Sudoku.Analytics.StepSearchers.AlmostLockedCandidatesStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)" path="/summary"/>
             </summary>
             <param name="context"><inheritdoc cref="M:Sudoku.Analytics.StepSearchers.AlmostLockedCandidatesStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)" path="/param[@name='context']"/></param>
             <param name="size">The size.</param>
             <param name="baseSet">The base set.</param>
             <param name="coverSet">The cover set.</param>
             <param name="a">The left grid map.</param>
             <param name="b">The right grid map.</param>
             <param name="c">The intersection.</param>
             <remarks>
             <para>
             The diagrams:
             <code><![CDATA[
             ALP:
             abx aby | ab
             abz     |
            
             ALT:
             abcw abcx | abc abc
             abcy abcz |
             ]]></code>
             </para>
             <para>Algorithm:</para>
             <para>
             If the cell <c>ab</c> (in ALP) or <c>abc</c> (in ALT) is filled with the digit <c>p</c>,
             then the cells <c>abx</c> and <c>aby</c> (in ALP) and <c>abcw</c> and <c>abcx</c> (in ALT) can't
             fill the digit <c>p</c>. Therefore the digit <c>p</c> can only be filled into the left-side block.
             </para>
             <para>
             If the block only contains those cells that can contain the digit <c>p</c>, the ALP or ALT will be formed,
             and the elimination is <c>z</c> (in ALP) and <c>y</c> and <c>z</c> (in ALT).
             </para>
             </remarks>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.LockedCandidatesStepSearcher">
            <summary>
            Provides with a <b>Locked Candidates</b> step searcher.
            The step searcher will include the following techniques:
            <list type="bullet">
            <item>Pointing</item>
            <item>Claiming</item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.LockedCandidatesStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc />
            <remarks>
            <deverloper-notes>
		<para>
			<b>Developer Notes</b>
		</para>
	</deverloper-notes>
            <para>The main idea of this searching operation:</para>
            <para>
            <code><![CDATA[
            .-------.-------.-------.
            | C C C | A A A | A A A |
            | B B B | . . . | . . . |
            | B B B | . . . | . . . |
            '-------'-------'-------'
            ]]></code>
            For example, if the cells C form a locked candidates, there'll be two cases:
            <list type="number">
            <item><b>Pointing (Type 1)</b>: Cells A contains the digit, but cells B doesn't.</item>
            <item><b>Claiming (Type 2)</b>: Cells B contains the digit, but cells A doesn't.</item>
            </list>
            </para>
            <para>
            <para>Therefore, the algorithm is:</para>
            Use bitwise-or <c>operator |</c> to gather all candidate masks from cells A, cells B and cells C,
            and suppose the notation <c>a</c> is the mask result for cells A, <c>b</c> is the mask result for cells B,
            and <c>c</c> is the mask result for cells C. If the equation <c><![CDATA[(c & (a ^ b)) != 0]]></c>
            is correct, the locked candidates exists, and the result of the expression
            <c><![CDATA[c & (a ^ b)]]></c> is a mask that holds the digits of the locked candidates.
            </para>
            <para>
            Why this expression? <c>a ^ b</c> means the digit can only appear in either cells A or cells B.
            If both or neither, the digit won't contain the locked candidates structure.
            Because of the optimization of the performance, we use the predefined table to iterate on
            all possible location where may form a locked candidate.
            </para>
            </remarks>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.BruteForceStepSearcher">
            <summary>
            Provides with a <b>Brute Force</b> step searcher.
            The step searcher will include the following techniques:
            <list type="bullet">
            <item>Brute Force</item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.BruteForceStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.PatternOverlayStepSearcher">
            <summary>
            Provides with a <b>Pattern Overlay</b> step searcher.
            The step searcher will include the following techniques:
            <list type="bullet">
            <item>Pattern Overlay</item>
            </list>
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.StepSearchers.PatternOverlayStepSearcher.TemplateCellMaps">
            <summary>
            The pre-defined template cell maps.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.PatternOverlayStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.PatternOverlayStepSearcher.GetInvalidPos(Sudoku.Concepts.Grid@)">
            <summary>
            Get all invalid positions.
            </summary>
            <param name="grid">The grid.</param>
            <returns>The 9 maps for invalid positions of each digit.</returns>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.PatternOverlayStepSearcher.GetTemplates">
            <summary>
            Get all possible templates. The total number of all possible pattern overlay templates is 46656.
            </summary>
            <returns>The templates.</returns>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.SueDeCoq3DimensionStepSearcher">
            <summary>
            Provides with a <b>3-dimensional Sue de Coq</b> step searcher.
            The step searcher will include the following techniques:
            <list type="bullet">
            <item>3-dimensional Sue de Coq</item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.SueDeCoq3DimensionStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.SueDeCoqStepSearcher">
            <summary>
            Provides with a <b>Sue de Coq</b> step searcher.
            The step searcher will include the following techniques:
            <list type="bullet">
            <item>Sue de Coq</item>
            <item>Sue de Coq with Isolated Digit</item>
            <item>Cannibalistic Sue de Coq</item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.SueDeCoqStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.TwoStrongLinksStepSearcher">
            <summary>
            Provides with a <b>Two-strong Links</b> step searcher.
            The step searcher will include the following techniques:
            <list type="bullet">
            <item>Skyscraper</item>
            <item>Two-string Kite</item>
            <item>Turbot Fish</item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.TwoStrongLinksStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.SingleStepSearcher">
            <summary>
            Provides with a <b>Single</b> step searcher. The step searcher will include the following techniques:
            <list type="bullet">
            <item>Full House (If the property <see cref="P:Sudoku.Analytics.StepSearchers.SingleStepSearcher.EnableFullHouse"/> is <see langword="true"/>)</item>
            <item>Last Digit (If the property <see cref="P:Sudoku.Analytics.StepSearchers.SingleStepSearcher.EnableLastDigit"/> is <see langword="true"/>)</item>
            <item>Hidden Single</item>
            <item>Naked Single</item>
            </list>
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.StepSearchers.SingleStepSearcher.EnableFullHouse">
            <summary>
            Indicates whether the solver enables the technique full house.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.StepSearchers.SingleStepSearcher.EnableLastDigit">
            <summary>
            Indicates whether the solver enables the technique last digit.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.StepSearchers.SingleStepSearcher.HiddenSinglesInBlockFirst">
            <summary>
            Indicates whether the solver checks for hidden single in block firstly.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.StepSearchers.SingleStepSearcher.UseIttoryuMode">
            <summary>
            Indicates whether the solver uses ittoryu mode to solve a puzzle.
            </summary>
            <remarks>
            For more information about what is an ittoryu puzzle, please visit
            <see href="https://sunnieshine.github.io/Sudoku/terms/ittouryu-puzzle">this link</see>.
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.SingleStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.SingleStepSearcher.GetAll_IttoryuMode(Sudoku.Analytics.AnalysisContext@)">
            <summary>
            Checks for single steps using ittoryu mode.
            </summary>
            <param name="context"><inheritdoc cref="M:Sudoku.Analytics.StepSearchers.SingleStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)" path="/param[@name='context']"/></param>
            <returns><inheritdoc cref="M:Sudoku.Analytics.StepSearchers.SingleStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)" path="/returns"/></returns>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.SingleStepSearcher.GetAll_NonIttoryuMode(Sudoku.Analytics.AnalysisContext@)">
            <summary>
            Checks for single steps using non-ittoryu mode.
            </summary>
            <param name="context"><inheritdoc cref="M:Sudoku.Analytics.StepSearchers.SingleStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)" path="/param[@name='context']"/></param>
            <returns><inheritdoc cref="M:Sudoku.Analytics.StepSearchers.SingleStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)" path="/returns"/></returns>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.SingleStepSearcher.CheckForHiddenSingleAndLastDigit(Sudoku.Concepts.Grid@,System.Int32,System.Int32)">
            <summary>
            Checks for existence of hidden single and last digit conclusion in the specified house.
            </summary>
            <param name="grid">The grid.</param>
            <param name="digit">The digit used.</param>
            <param name="house">The house used.</param>
            <returns>Not <see langword="null" /> if conclusion can be found.</returns>
            <remarks>
            <para><deverloper-notes>
		<para>
			<b>Developer Notes</b>
		</para>
	</deverloper-notes></para>
            <para>
            The main idea of hidden single is to search for a digit can only appear once in a house,
            so we should check all possibilities in a house to found whether the house exists a digit
            that only appears once indeed.
            </para>
            </remarks>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.SubsetStepSearcher">
            <summary>
            Provides with a <b>Subset</b> step searcher. The step searcher will include the following techniques:
            <list type="bullet">
            <item>
            Locked Subsets:
            <list type="bullet">
            <item>Locked Pair</item>
            <item>Locked Triple</item>
            </list>
            </item>
            <item>
            Semi-Locked Subsets:
            <list type="bullet">
            <item>Naked Pair (+)</item>
            <item>Naked Triple (+)</item>
            <item>Naked Quadruple (+)</item>
            </list>
            </item>
            <item>
            Normal Naked Subsets:
            <list type="bullet">
            <item>Naked Pair</item>
            <item>Naked Triple</item>
            <item>Naked Quadruple</item>
            </list>
            </item>
            <item>
            Hidden Subsets:
            <list type="bullet">
            <item>Hidden Pair</item>
            <item>Hidden Triple</item>
            <item>Hidden Quadruple</item>
            </list>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.SubsetStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.MultiBranchWWingStepSearcher">
            <summary>
            Provides with a <b>Multiple-Branch W-Wing</b> step searcher.
            The step searcher will include the following techniques:
            <list type="bullet">
            <item>Multiple-Branch W-Wing (Multiple-Branch George Woods' Wing)</item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.MultiBranchWWingStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.WWingStepSearcher">
            <summary>
            Provides with a <b>W-Wing</b> step searcher.
            The step searcher will include the following techniques:
            <list type="bullet">
            <item>W-Wing (George Woods' Wing)</item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.WWingStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.StepSearchers.RegularWingStepSearcher">
            <summary>
            Provides with a <b>Regular Wing</b> step searcher.
            The step searcher will include the following techniques:
            <list type="bullet">
            <item>XY-Wing</item>
            <item>XYZ-Wing</item>
            <item>WXYZ-Wing</item>
            <item>VWXYZ-Wing</item>
            <item>UVWXYZ-Wing</item>
            <item>TUVWXYZ-Wing</item>
            <item>STUVWXYZ-Wing</item>
            <item>RSTUVWXYZ-Wing</item>
            </list>
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.StepSearchers.RegularWingStepSearcher.MaxSearchingPivotsCount">
            <summary>
            Indicates the maximum number of pivots to be searched for.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.StepSearchers.RegularWingStepSearcher.GetAll(Sudoku.Analytics.AnalysisContext@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.ExtendedRectangleStep">
            <summary>
            Provides with a step that is an <b>Extended Rectangle</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.ExtendedRectangleStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],Sudoku.Concepts.CellMap@,System.Int16)">
            <summary>
            Provides with a step that is an <b>Extended Rectangle</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleStep.Type">
            <summary>
            Indicates the type of the step. The value must be between 1 and 4.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleStep.DigitsMask">
            <summary>
            Indicates the mask of digits used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleStep.Format">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleStep.Cells">
            <summary>
            Indicates the cells used in this pattern.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.ExtendedRectangleType1Step">
            <summary>
            Provides with a step that is an <b>Extended Rectangle Type 1</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.ExtendedRectangleType1Step.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],Sudoku.Concepts.CellMap@,System.Int16)">
            <summary>
            Provides with a step that is an <b>Extended Rectangle Type 1</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleType1Step.Type">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleType1Step.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.ExtendedRectangleType2Step">
            <summary>
            Provides with a step that is an <b>Extended Rectangle Type 2</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.ExtendedRectangleType2Step.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],Sudoku.Concepts.CellMap@,System.Int16,System.Int32)">
            <summary>
            Provides with a step that is an <b>Extended Rectangle Type 2</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleType2Step.Type">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleType2Step.ExtraDigit">
            <summary>
            Indicates the extra digit used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleType2Step.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleType2Step.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.ExtendedRectangleType3Step">
            <summary>
            Provides with a step that is an <b>Extended Rectangle Type 3</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.ExtendedRectangleType3Step.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],Sudoku.Concepts.CellMap@,System.Int16,Sudoku.Concepts.CellMap@,System.Int16,System.Int32)">
            <summary>
            Provides with a step that is an <b>Extended Rectangle Type 3</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleType3Step.Type">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleType3Step.House">
            <summary>
            Indicates the house that subset formed.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleType3Step.SubsetDigitsMask">
            <summary>
            Indicates the subset digits used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleType3Step.SubsetCells">
            <summary>
            Indicates the extra cells used that can form the subset.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleType3Step.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleType3Step.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.ExtendedRectangleType4Step">
            <summary>
            Provides with a step that is an <b>Extended Rectangle Type 4</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.ExtendedRectangleType4Step.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],Sudoku.Concepts.CellMap@,System.Int16,Sudoku.Concepts.Conjugate@)">
            <summary>
            Provides with a step that is an <b>Extended Rectangle Type 4</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleType4Step.Type">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleType4Step.ConjugatePair">
            <summary>
            Indicates the conjugate pair used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleType4Step.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ExtendedRectangleType4Step.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueLoopStep">
            <summary>
            Provides with a step that is a <b>Unique Loop</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueLoopStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@)">
            <summary>
            Provides with a step that is a <b>Unique Loop</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopStep.Digit1">
            <summary>
            Indicates the first digit used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopStep.Digit2">
            <summary>
            Indicates the second digit used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopStep.Type">
            <summary>
            Indicates the type.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopStep.Format">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopStep.Loop">
            <summary>
            Indicates the whole loop of cells used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueLoopStep.op_Equality(Sudoku.Analytics.Steps.UniqueLoopStep,Sudoku.Analytics.Steps.UniqueLoopStep)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueLoopStep.op_Inequality(Sudoku.Analytics.Steps.UniqueLoopStep,Sudoku.Analytics.Steps.UniqueLoopStep)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueLoopType1Step">
            <summary>
            Provides with a step that is a <b>Unique Loop Type 1</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueLoopType1Step.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@)">
            <summary>
            Provides with a step that is a <b>Unique Loop Type 1</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopType1Step.Type">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopType1Step.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueLoopType2Step">
            <summary>
            Provides with a step that is a <b>Unique Loop Type 2</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueLoopType2Step.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Provides with a step that is a <b>Unique Loop Type 2</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopType2Step.Type">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopType2Step.ExtraDigit">
            <summary>
            Indicates the extra digit used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopType2Step.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopType2Step.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueLoopType3Step">
            <summary>
            Provides with a step that is a <b>Unique Loop Type 3</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueLoopType3Step.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int16,Sudoku.Concepts.CellMap@)">
            <summary>
            Provides with a step that is a <b>Unique Loop Type 3</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopType3Step.Type">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopType3Step.SubsetDigitsMask">
            <summary>
            Indicates the mask that contains the subset digits used in this instance.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopType3Step.SubsetCells">
            <summary>
            Indicates the cells that are subset cells.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopType3Step.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopType3Step.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueLoopType4Step">
            <summary>
            Provides with a step that is a <b>Unique Loop Type 4</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueLoopType4Step.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@,Sudoku.Concepts.Conjugate@)">
            <summary>
            Provides with a step that is a <b>Unique Loop Type 4</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopType4Step.Type">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopType4Step.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopType4Step.ConjugatePair">
            <summary>
            Indicates the conjugate pair used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueLoopType4Step.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.AvoidableRectangleWithHiddenSingleStep">
            <summary>
            Provides with a step that is an <b>Avoidable Rectangle with Hidden Single</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.AvoidableRectangleWithHiddenSingleStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Provides with a step that is an <b>Avoidable Rectangle with Hidden Single</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AvoidableRectangleWithHiddenSingleStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AvoidableRectangleWithHiddenSingleStep.House">
            <summary>
            Indicates the house where the pattern lies.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AvoidableRectangleWithHiddenSingleStep.BaseCell">
            <summary>
            Indicates the base cell used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AvoidableRectangleWithHiddenSingleStep.TargetCell">
            <summary>
            Indicates the target cell used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AvoidableRectangleWithHiddenSingleStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AvoidableRectangleWithHiddenSingleStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AvoidableRectangleWithHiddenSingleStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.DeadlyPatternStep">
            <summary>
            Provides with a step that is a <b>Deadly Pattern</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.DeadlyPatternStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[])">
            <summary>
            Provides with a step that is a <b>Deadly Pattern</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.DeadlyPatternStep.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.DeadlyPatternStep.Format">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.DeadlyPatternStep.Group">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.HiddenUniqueRectangleStep">
            <summary>
            Provides with a step that is a <b>Hidden Unique Rectangle</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.HiddenUniqueRectangleStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Boolean,Sudoku.Concepts.Conjugate[],System.Int32)">
            <summary>
            Provides with a step that is a <b>Hidden Unique Rectangle</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.HiddenUniqueRectangleStep.Format">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueRectangle2DOr3XStep">
            <summary>
            Provides with a step that is a <b>Unique Rectangle 2D (or 3X)</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangle2DOr3XStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],Sudoku.Analytics.Categorization.Technique,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Provides with a step that is a <b>Unique Rectangle 2D (or 3X)</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangle2DOr3XStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangle2DOr3XStep.XDigit">
            <summary>
            Indicates the digit X defined in this pattern.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangle2DOr3XStep.YDigit">
            <summary>
            Indicates the digit Y defined in this pattern.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangle2DOr3XStep.XyCell">
            <summary>
            Indicates a bi-value cell that only contains digit X and Y.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangle2DOr3XStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangle2DOr3XStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangle2DOr3XStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueRectangleExternalAlmostLockedSetsXzStep">
            <summary>
            Provides with a step that is a <b>Unique Rectangle External Almost Locked Sets XZ Rule</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangleExternalAlmostLockedSetsXzStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,Sudoku.Analytics.Patterns.AlmostLockedSet,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Provides with a step that is a <b>Unique Rectangle External Almost Locked Sets XZ Rule</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalAlmostLockedSetsXzStep.IsIncomplete">
            <summary>
            Indicates whether the rectangle is incomplete.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalAlmostLockedSetsXzStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalAlmostLockedSetsXzStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalAlmostLockedSetsXzStep.GuardianCells">
            <summary>
            Indicates the cells that the guardians lie in.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalAlmostLockedSetsXzStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalAlmostLockedSetsXzStep.AlmostLockedSet">
            <summary>
            The almost locked sets used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalAlmostLockedSetsXzStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueRectangleExternalTurbotFishStep">
            <summary>
            Provides with a step that is a <b>Unique Rectangle External Turbot Fish</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangleExternalTurbotFishStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Provides with a step that is a <b>Unique Rectangle External Turbot Fish</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalTurbotFishStep.IsIncomplete">
            <summary>
            Indicates whether the rectangle is incomplete.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalTurbotFishStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalTurbotFishStep.TurbotFishDigit">
            <summary>
            Indicates the digit that the turbot fish used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalTurbotFishStep.BaseHouse">
            <summary>
            Indicates the base house used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalTurbotFishStep.TargetHouse">
            <summary>
            Indicates the target house used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalTurbotFishStep.Format">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalTurbotFishStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalTurbotFishStep.GuardianCells">
            <summary>
            Indicates the cells that the guardians lie in.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalTurbotFishStep.CellPair">
            <summary>
            Indicates the cell pair.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalTurbotFishStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalTurbotFishStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueRectangleExternalType1Or2Step">
            <summary>
            Provides with a step that is a <b>Unique Rectangle External Type 1/2</b>
            or <b>Avoidable Rectangle External Type 1/2</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangleExternalType1Or2Step.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Provides with a step that is a <b>Unique Rectangle External Type 1/2</b>
            or <b>Avoidable Rectangle External Type 1/2</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType1Or2Step.IsIncomplete">
            <summary>
            Indicates whether the rectangle is incomplete.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType1Or2Step.GuardianDigit">
            <summary>
            Indicates the digit that the guardians are used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType1Or2Step.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType1Or2Step.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType1Or2Step.GuardianCells">
            <summary>
            Indicates the cells that the guardians lie in.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType1Or2Step.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType1Or2Step.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueRectangleExternalType3Step">
            <summary>
            Provides with a step that is a <b>Unique Rectangle External Type 3</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangleExternalType3Step.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Int16,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Provides with a step that is a <b>Unique Rectangle External Type 3</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType3Step.IsIncomplete">
            <summary>
            Indicates whether the rectangle is incomplete.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType3Step.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType3Step.SubsetDigitsMask">
            <summary>
            Indicates the digits that the subset are used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType3Step.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType3Step.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType3Step.GuardianCells">
            <summary>
            Indicates the cells that the guardians lie in.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType3Step.SubsetCells">
            <summary>
            The extra cells that forms the subset.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType3Step.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType3Step.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueRectangleExternalType4Step">
            <summary>
            Provides with a step that is a <b>Unique Rectangle External Type 4</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangleExternalType4Step.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,Sudoku.Concepts.Conjugate,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Provides with a step that is a <b>Unique Rectangle External Type 4</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType4Step.IsIncomplete">
            <summary>
            Indicates whether the rectangle is incomplete.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType4Step.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType4Step.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType4Step.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType4Step.ConjugatePair">
            <summary>
            Indicates the conjugate pair used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType4Step.GuardianCells">
            <summary>
            Indicates the cells that the guardians lie in.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType4Step.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalType4Step.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueRectangleExternalXyWingStep">
            <summary>
            Provides with a step that is a <b>Unique Rectangle External XY-Wing</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangleExternalXyWingStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Provides with a step that is a <b>Unique Rectangle External XY-Wing</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalXyWingStep.IsIncomplete">
            <summary>
            Indicates whether the rectangle is incomplete.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalXyWingStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalXyWingStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalXyWingStep.GuardianCells">
            <summary>
            Indicates the cells that the guardians lie in.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalXyWingStep.CellPair">
            <summary>
            Indicates the cell pair.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalXyWingStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleExternalXyWingStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueRectangleStep">
            <summary>
            Provides with a step that is a <b>Unique Rectangle</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangleStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],Sudoku.Analytics.Categorization.Technique,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Boolean,System.Int32)">
            <summary>
            Provides with a step that is a <b>Unique Rectangle</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleStep.IsAvoidable">
            <summary>
            Indicates whether the current rectangle is an avoidable rectangle.
            If <see langword="true"/>, an avoidable rectangle; otherwise, a unique rectangle.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleStep.Digit1">
            <summary>
            Indicates the first digit used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleStep.Digit2">
            <summary>
            Indicates the second digit used. This value is always greater than <see cref="P:Sudoku.Analytics.Steps.UniqueRectangleStep.Digit1"/>.
            </summary>
            <seealso cref="P:Sudoku.Analytics.Steps.UniqueRectangleStep.Digit1"/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleStep.AbsoluteOffset">
            <summary>
            Indicates the absolute offset.
            </summary>
            <remarks>
            The value will be an <see cref="T:System.Int32"/> value to compare all possible cases
            of unique rectangle structures to be iterated. The greater the value is,
            the later the unique rectangle structure will be processed. The value must be between 0 and 485.
            Other values are invalid and useless. The number of all possible unique rectangle structures is 486.
            </remarks>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleStep.Cells">
            <summary>
            Indicates the cells used in this pattern.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangleStep.op_Equality(Sudoku.Analytics.Steps.UniqueRectangleStep,Sudoku.Analytics.Steps.UniqueRectangleStep)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangleStep.op_Inequality(Sudoku.Analytics.Steps.UniqueRectangleStep,Sudoku.Analytics.Steps.UniqueRectangleStep)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueRectangleType1Step">
            <summary>
            Provides with a step that is a <b>Unique Rectangle Type 1</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangleType1Step.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Boolean,System.Int32)">
            <summary>
            Provides with a step that is a <b>Unique Rectangle Type 1</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleType1Step.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleType1Step.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueRectangleType2Step">
            <summary>
            Provides with a step that is a <b>Unique Rectangle Type 2</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangleType2Step.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Analytics.Categorization.Technique,Sudoku.Concepts.CellMap@,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Provides with a step that is a <b>Unique Rectangle Type 2</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleType2Step.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleType2Step.ExtraDigit">
            <summary>
            Indicates the extra digit used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleType2Step.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleType2Step.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueRectangleType3Step">
            <summary>
            Provides with a step that is a <b>Unique Rectangle Type 3</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangleType3Step.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Int16,System.Int32,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Provides with a step that is a <b>Unique Rectangle Type 3</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleType3Step.IsNaked">
            <summary>
            Indicates whether the subset is naked subset. If <see langword="true"/>, a naked subset; otherwise, a hidden subset.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleType3Step.House">
            <summary>
            Indicates the house used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleType3Step.ExtraDigitsMask">
            <summary>
            Indicates the mask that contains all extra digits used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleType3Step.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleType3Step.ExtraCells">
            <summary>
            Indicates the extra cells used, forming the subset.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleType3Step.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleType3Step.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueRectangleWithBabaGroupingStep">
            <summary>
            Provides with a step that is a <b>Unique Rectangle with Unknown Covering</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangleWithBabaGroupingStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Provides with a step that is a <b>Unique Rectangle with Unknown Covering</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithBabaGroupingStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithBabaGroupingStep.TargetCell">
            <summary>
            Indicates the target cell.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithBabaGroupingStep.ExtraDigit">
            <summary>
            Indicates the extra digit used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithBabaGroupingStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithBabaGroupingStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithBabaGroupingStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueRectangleWithConjugatePairStep">
            <summary>
            Provides with a step that is a <b>Unique Rectangle with Conjugate Pair(s)</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangleWithConjugatePairStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],Sudoku.Analytics.Categorization.Technique,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Boolean,Sudoku.Concepts.Conjugate[],System.Int32)">
            <summary>
            Provides with a step that is a <b>Unique Rectangle with Conjugate Pair(s)</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithConjugatePairStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithConjugatePairStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithConjugatePairStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithConjugatePairStep.ConjugatePairs">
            <summary>
            Indicates the conjugate pairs used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithConjugatePairStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithConjugatePairStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep">
            <summary>
            Provides with a step that is a <b>Unique Rectangle with Sue de Coq</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Boolean,System.Int32,System.Int32,System.Int16,System.Int16,System.Int16,System.Boolean,System.Int16,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Provides with a step that is a <b>Unique Rectangle with Sue de Coq</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.IsCannibalistic">
            <summary>
            Indicates whether the Sue de Coq structure is a cannibalism.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.Block">
            <summary>
            Indicates the block index that the Sue de Coq structure used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.Line">
            <summary>
            Indicates the line (row or column) index that the Sue de Coq structure used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.BlockMask">
            <summary>
            Indicates the mask that contains all digits from the block of the Sue de Coq structure.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.LineMask">
            <summary>
            Indicates the cells in the line of the Sue de Coq structure.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.IntersectionMask">
            <summary>
            Indicates the mask that contains all digits from the intersection of houses <see cref="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.Block"/> and <see cref="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.Line"/>.
            </summary>
            <seealso cref="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.Block"/>
            <seealso cref="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.Line"/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.IsolatedDigitsMask">
            <summary>
            Indicates the mask that contains all isolated digits.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.BlockCells">
            <summary>
            Indicates the cells in the block of the Sue de Coq structure.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.LineCells">
            <summary>
            Indicates the cells in the line (row or column) of the Sue de Coq structure.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.IntersectionCells">
            <summary>
            Indicates the cells in the intersection from houses <see cref="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.Block"/> and <see cref="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.Line"/>.
            </summary>
            <seealso cref="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.Block"/>
            <seealso cref="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.Line"/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithSueDeCoqStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.UniqueRectangleWithWingStep">
            <summary>
            Provides with a step that is a <b>Unique Rectangle with Wing</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.UniqueRectangleWithWingStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],Sudoku.Analytics.Categorization.Technique,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Boolean,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Int16,System.Int32)">
            <summary>
            Provides with a step that is a <b>Unique Rectangle with Wing</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithWingStep.ExtraDigitsMask">
            <summary>
            Indicates the mask that contains all extra digits.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithWingStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithWingStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithWingStep.Branches">
            <summary>
            Indicates the branches used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithWingStep.Petals">
            <summary>
            Indicates the petals used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithWingStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.UniqueRectangleWithWingStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.ComplexFishStep">
            <summary>
            Provides with a step that is a <b>Complex Fish</b> technique.
            </summary>
            <param name="conclusions"><inheritdoc/></param>
            <param name="views"><inheritdoc/></param>
            <param name="digit"><inheritdoc/></param>
            <param name="baseSetsMask"><inheritdoc/></param>
            <param name="coverSetsMask"><inheritdoc/></param>
            <param name="exofins">The exo-fins.</param>
            <param name="endofins">The endo-fins.</param>
            <param name="isFranken">Indicates whether the fish is a Franken fish.</param>
            <param name="isSashimi">Indicates whether the fish is a Sashimi fish.</param>
        </member>
        <member name="M:Sudoku.Analytics.Steps.ComplexFishStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            Provides with a step that is a <b>Complex Fish</b> technique.
            </summary>
            <param name="conclusions"><inheritdoc/></param>
            <param name="views"><inheritdoc/></param>
            <param name="digit"><inheritdoc/></param>
            <param name="baseSetsMask"><inheritdoc/></param>
            <param name="coverSetsMask"><inheritdoc/></param>
            <param name="exofins">The exo-fins.</param>
            <param name="endofins">The endo-fins.</param>
            <param name="isFranken">Indicates whether the fish is a Franken fish.</param>
            <param name="isSashimi">Indicates whether the fish is a Sashimi fish.</param>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ComplexFishStep.IsFranken">
            <summary>
            Indicates whether the fish is a Franken fish. If <see langword="true"/>, a Franken fish; otherwise, a Mutant fish.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ComplexFishStep.IsSashimi">
            <summary>
            Indicates whether the fish is a Sashimi fish.
            </summary>
            <remarks>
            All cases are as belows:
            <list type="table">
            <item>
            <term><see langword="true"/></term>
            <description>The fish is a sashimi finned fish.</description>
            </item>
            <item>
            <term><see langword="false"/></term>
            <description>The fish is a normal finned fish.</description>
            </item>
            <item>
            <term><see langword="null"/></term>
            <description>The fish doesn't contain any fin.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ComplexFishStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ComplexFishStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ComplexFishStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ComplexFishStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ComplexFishStep.Exofins">
            <summary>
            Indicates the fins, positioned outside the fish.
            They will be defined if cover sets cannot be fully covered, with the number of cover sets being equal to the number of base sets.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ComplexFishStep.Endofins">
            <summary>
            Indicates the fins, positioned inside the fish. Generally speaking, they will be defined if they are in multiple base sets.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ComplexFishStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ComplexFishStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ComplexFishStep.BaseHouses">
            <summary>
            Indicates the base houses.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ComplexFishStep.CoverHouses">
            <summary>
            Indicates the cover houses.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ComplexFishStep.InternalName">
            <summary>
            The internal name.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ComplexFishStep.FinModifier">
            <summary>
            Indicates the fin modifier.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.ComplexFishStep.ShapeModifier">
            <summary>
            The shape modifier.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.ComplexFishStep.op_Equality(Sudoku.Analytics.Steps.ComplexFishStep,Sudoku.Analytics.Steps.ComplexFishStep)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.Steps.ComplexFishStep.op_Inequality(Sudoku.Analytics.Steps.ComplexFishStep,Sudoku.Analytics.Steps.ComplexFishStep)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.FishStep">
            <summary>
            Provides with a step that is a <b>Fish</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.FishStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Provides with a step that is a <b>Fish</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.FishStep.Digit">
            <summary>
            Indicates the digit used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.FishStep.BaseSetsMask">
            <summary>
            Indicates the mask that contains the base sets.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.FishStep.CoverSetsMask">
            <summary>
            Indicates the mask that contains the cover sets.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.FishStep.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.FishStep.Format">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.FishStep.Size">
            <inheritdoc/>
            <remarks>
            The name of the corresponding names are:
            <list type="table">
            <item><term>2</term><description>X-Wing</description></item>
            <item><term>3</term><description>Swordfish</description></item>
            <item><term>4</term><description>Jellyfish</description></item>
            <item><term>5</term><description>Squirmbag (or Starfish)</description></item>
            <item><term>6</term><description>Whale</description></item>
            <item><term>7</term><description>Leviathan</description></item>
            </list>
            Other fishes of sizes not appearing in above don't have well-known names.
            </remarks>
        </member>
        <member name="T:Sudoku.Analytics.Steps.NormalFishStep">
            <summary>
            Provides with a step that is an <b>Normal Fish</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.NormalFishStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,System.Int32,Sudoku.Concepts.CellMap@,System.Nullable{System.Boolean})">
            <summary>
            Provides with a step that is an <b>Normal Fish</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.NormalFishStep.IsSashimi">
            <summary>
            Indicates whether the fish instance is a sashimi fish. All possible values are as belows:
            <list type="table">
            <item>
            <term><see langword="true"/></term>
            <description>The fish is a sashimi fish.</description>
            </item>
            <item>
            <term><see langword="false"/></term>
            <description>The fish is a finned fish.</description>
            </item>
            <item>
            <term><see langword="null"/></term>
            <description>The fish is a normal fish without any fins.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.NormalFishStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.NormalFishStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.NormalFishStep.Fins">
            <summary>
            Indicates the fins.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.NormalFishStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.NormalFishStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.NormalFishStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.NormalFishStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.NormalFishStep.InternalName">
            <summary>
            Indicates the internal name.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Steps.IEquatableStep`1">
            <summary>
            Represents a type that can be used for comparison on two <typeparamref name="TSelf"/> instances.
            </summary>
            <typeparam name="TSelf">The type of the comparsison object. The type must be derived from <see cref="T:Sudoku.Analytics.Step"/>.</typeparam>
            <seealso cref="T:Sudoku.Analytics.Step"/>
        </member>
        <member name="M:Sudoku.Analytics.Steps.IEquatableStep`1.Distinct(System.Collections.Generic.List{`0})">
            <summary>
            Try to compare elements, removing all duplicated ones in this collection,
            which uses the operator <see cref="M:Sudoku.Analytics.Steps.IEquatableStep`1.op_Equality(`0,`0)"/> defined in this interface.
            </summary>
            <param name="list">The list of steps to be processed.</param>
            <returns>The list of steps.</returns>
            <remarks>
            This method does not change the ordering of the original list.
            In other words, if the original list is in order, the final list after invoking this method will be also in order.
            </remarks>
            <seealso cref="M:Sudoku.Analytics.Steps.IEquatableStep`1.op_Equality(`0,`0)"/>
        </member>
        <member name="M:Sudoku.Analytics.Steps.IEquatableStep`1.op_Equality(`0,`0)">
            <summary>
            Determines whether two <typeparamref name="TSelf"/> instances are considered equal.
            </summary>
            <param name="left">The first element to be compared.</param>
            <param name="right">The second element to be compared.</param>
            <returns>A <see cref="T:System.Boolean"/> result indicating whether two <typeparamref name="TSelf"/> instances are considered equal.</returns>
        </member>
        <member name="M:Sudoku.Analytics.Steps.IEquatableStep`1.op_Inequality(`0,`0)">
            <summary>
            Determines whether two <typeparamref name="TSelf"/> instances are not considered equal.
            </summary>
            <param name="left">The first element to be compared.</param>
            <param name="right">The second element to be compared.</param>
            <returns>A <see cref="T:System.Boolean"/> result indicating whether two <typeparamref name="TSelf"/> instances are not considered equal.</returns>
        </member>
        <member name="T:Sudoku.Analytics.Steps.LocalEqualityComparer`1">
            <summary>
            The internal comparer type for <typeparamref name="T"/> instances.
            </summary>
            <typeparam name="T">The type of the step.</typeparam>
        </member>
        <member name="F:Sudoku.Analytics.Steps.LocalEqualityComparer`1.Instance">
            <summary>
            The singleton instance.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.LocalEqualityComparer`1.#ctor">
            <summary>
            The parameterless constructor.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.LocalEqualityComparer`1.Equals(`0,`0)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.Steps.LocalEqualityComparer`1.GetHashCode(`0)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.AlmostLockedCandidatesStep">
            <summary>
            Provides with a step that is an <b>Almost Locked Candidates</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.AlmostLockedCandidatesStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int16,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Boolean)">
            <summary>
            Provides with a step that is an <b>Almost Locked Candidates</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AlmostLockedCandidatesStep.HasValueCell">
            <summary>
            Indicates whether the step contains value cells.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AlmostLockedCandidatesStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AlmostLockedCandidatesStep.Size">
            <summary>
            Indicates the number of digits used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AlmostLockedCandidatesStep.DigitsMask">
            <summary>
            Indicates the mask that contains the digits used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AlmostLockedCandidatesStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AlmostLockedCandidatesStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AlmostLockedCandidatesStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AlmostLockedCandidatesStep.BaseCells">
            <summary>
            Indicates the base cells.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AlmostLockedCandidatesStep.TargetCells">
            <summary>
            Indicates the target cells.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AlmostLockedCandidatesStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.AlmostLockedCandidatesStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.IntersectionStep">
            <summary>
            Provides with a step that is an <b>Intersection</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.IntersectionStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[])">
            <summary>
            Provides with a step that is an <b>Intersection</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.IntersectionStep.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.IntersectionStep.Format">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.LockedCandidatesStep">
            <summary>
            Provides with a step that is a <b>Locked Candidates</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.LockedCandidatesStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Provides with a step that is a <b>Locked Candidates</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.LockedCandidatesStep.Digit">
            <summary>
            Indicates the digit used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.LockedCandidatesStep.BaseSet">
            <summary>
            Indicates the house that the current locked candidates forms.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.LockedCandidatesStep.CoverSet">
            <summary>
            Indicates the house that the current locked candidates influences.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.LockedCandidatesStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.LockedCandidatesStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.LockedCandidatesStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.LockedCandidatesStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.LockedCandidatesStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.InvalidStep">
            <summary>
            The background type that has implemented the type <see cref="T:Sudoku.Analytics.Steps.InvalidStep"/>.
            </summary>
            <seealso cref="T:Sudoku.Analytics.Steps.InvalidStep"/>
        </member>
        <member name="M:Sudoku.Analytics.Steps.InvalidStep.#ctor">
            <summary>
            The background type that has implemented the type <see cref="T:Sudoku.Analytics.Steps.InvalidStep"/>.
            </summary>
            <seealso cref="T:Sudoku.Analytics.Steps.InvalidStep"/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.InvalidStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.InvalidStep.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.InvalidStep.Format">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.InvalidStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.InvalidStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.InvalidStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.InvalidStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.InvalidStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.BruteForceStep">
            <summary>
            Provides with a step that is a <b>Brute Force</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.BruteForceStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[])">
            <summary>
            Provides with a step that is a <b>Brute Force</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.BruteForceStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.BruteForceStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.BruteForceStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.BruteForceStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.BruteForceStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.LastResortStep">
            <summary>
            Provides with a step that is a <b>Last Resort</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.LastResortStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[])">
            <summary>
            Provides with a step that is a <b>Last Resort</b> technique.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Steps.PatternOverlayStep">
            <summary>
            Provides with a step that is a <b>Pattern Overlay</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.PatternOverlayStep.#ctor(Sudoku.Solving.Conclusion[])">
            <summary>
            Provides with a step that is a <b>Pattern Overlay</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.PatternOverlayStep.Digit">
            <summary>
            Indicates the digit.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.PatternOverlayStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.PatternOverlayStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.PatternOverlayStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.PatternOverlayStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.PatternOverlayStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.NegativeRankStep">
            <summary>
            Provides with a step that is a <b>Negative Rank</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.NegativeRankStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[])">
            <summary>
            Provides with a step that is a <b>Negative Rank</b> technique.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Steps.PositiveRankStep">
            <summary>
            Provides with a step that is a <b>Positive Rank</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.PositiveRankStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[])">
            <summary>
            Provides with a step that is a <b>Positive Rank</b> technique.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Steps.RankTheoryStep">
            <summary>
            Provides with a step that is a <b>Rank Theory</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.RankTheoryStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[])">
            <summary>
            Provides with a step that is a <b>Rank Theory</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.RankTheoryStep.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.RankTheoryStep.Format">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.SueDeCoq3DimensionStep">
            <summary>
            Provides with a step that is a <b>3-dimensional Sue de Coq</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.SueDeCoq3DimensionStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int16,System.Int16,System.Int16,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@)">
            <summary>
            Provides with a step that is a <b>3-dimensional Sue de Coq</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoq3DimensionStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoq3DimensionStep.RowDigitsMask">
            <summary>
            Indicates the digits mask that describes which digits are used in this pattern in a row.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoq3DimensionStep.ColumnDigitsMask">
            <summary>
            Indicates the digits mask that describes which digits are used in this pattern in a column.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoq3DimensionStep.BlockDigitsMask">
            <summary>
            Indicates the digits mask that describes which digits are used in this pattern in a block.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoq3DimensionStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoq3DimensionStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoq3DimensionStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoq3DimensionStep.RowCells">
            <summary>
            Indicates the cells used in this pattern in a row.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoq3DimensionStep.ColumnCells">
            <summary>
            Indicates the cells used in this pattern in a column.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoq3DimensionStep.BlockCells">
            <summary>
            Indicates the cells used in this pattern in a block.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoq3DimensionStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.SueDeCoqStep">
            <summary>
            Provides with a step that is a <b>Sue de Coq</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.SueDeCoqStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,System.Int16,System.Int16,System.Int16,System.Boolean,System.Int16,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@)">
            <summary>
            Provides with a step that is a <b>Sue de Coq</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoqStep.IsCannibalistic">
            <summary>
            Indicates whether the SdC is cannibalistic.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoqStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoqStep.Block">
            <summary>
            Indicates the block index that the current pattern used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoqStep.Line">
            <summary>
            Indicates the line (row or column) index that the current pattern used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoqStep.BlockMask">
            <summary>
            Indicates the block mask.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoqStep.LineMask">
            <summary>
            Indicates the line mask.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoqStep.IntersectionMask">
            <summary>
            Indicates the intersection mask.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoqStep.IsolatedDigitsMask">
            <summary>
            The isolated digits mask.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoqStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoqStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoqStep.Group">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoqStep.BlockCells">
            <summary>
            Indicates the cells that the current pattern used in a block.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoqStep.LineCells">
            <summary>
            Indicates the cells that the current pattern used in a line (row or column).
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoqStep.IntersectionCells">
            <summary>
            Indicates the cells that the current pattern used in an intersection of <see cref="P:Sudoku.Analytics.Steps.SueDeCoqStep.BlockCells"/> and <see cref="P:Sudoku.Analytics.Steps.SueDeCoqStep.LineCells"/>.
            </summary>
            <seealso cref="P:Sudoku.Analytics.Steps.SueDeCoqStep.BlockCells"/>
            <seealso cref="P:Sudoku.Analytics.Steps.SueDeCoqStep.LineCells"/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoqStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SueDeCoqStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.ZeroRankStep">
            <summary>
            Provides with a step that is a <b>Zero Rank</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.ZeroRankStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[])">
            <summary>
            Provides with a step that is a <b>Zero Rank</b> technique.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Steps.SingleDigitPatternStep">
            <summary>
            Provides with a step that is a <b>Single Digit Pattern</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.SingleDigitPatternStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32)">
            <summary>
            Provides with a step that is a <b>Single Digit Pattern</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SingleDigitPatternStep.Digit">
            <summary>
            Indicates the digit used in this pattern.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SingleDigitPatternStep.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SingleDigitPatternStep.Format">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SingleDigitPatternStep.Group">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.TwoStrongLinksStep">
            <summary>
            Provides with a step that is a <b>Single Digit Pattern</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.TwoStrongLinksStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Provides with a step that is a <b>Single Digit Pattern</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.TwoStrongLinksStep.BaseHouse">
            <summary>
            Indicates the base house used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.TwoStrongLinksStep.TargetHouse">
            <summary>
            Indicates the target house used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.TwoStrongLinksStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.TwoStrongLinksStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.TwoStrongLinksStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.TwoStrongLinksStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.FullHouseStep">
            <summary>
            Provides with a step that is a <b>Full House</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.FullHouseStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32)">
            <summary>
            Provides with a step that is a <b>Full House</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.FullHouseStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.FullHouseStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.FullHouseStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.HiddenSingleStep">
            <summary>
            Provides with a step that is a <b>Hidden Single</b> or <b>Last Digit</b> (for special cases) technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.HiddenSingleStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Provides with a step that is a <b>Hidden Single</b> or <b>Last Digit</b> (for special cases) technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.HiddenSingleStep.EnableAndIsLastDigit">
            <summary>
            Indicates whether currently options enable "Last Digit" technqiue, and the current instance is a real Last Digit.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.HiddenSingleStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.HiddenSingleStep.House">
            <summary>
            Indicates the house where the current Hidden Single technique forms.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.HiddenSingleStep.Format">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.HiddenSingleStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.HiddenSingleStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.NakedSingleStep">
            <summary>
            Provides with a step that is a <b>Naked Single</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.NakedSingleStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32)">
            <summary>
            Provides with a step that is a <b>Naked Single</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.NakedSingleStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.NakedSingleStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.NakedSingleStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.SingleStep">
            <summary>
            Provides with a step that is a <b>Single</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.SingleStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32)">
            <summary>
            Provides with a step that is a <b>Single</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SingleStep.Cell">
            <summary>
            Indicates the cell used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SingleStep.Digit">
            <summary>
            Indicates the digit used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SingleStep.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SingleStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SingleStep.Group">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.HiddenSubsetStep">
            <summary>
            Provides with a step that is a <b>Hidden Subset</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.HiddenSubsetStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,Sudoku.Concepts.CellMap@,System.Int16)">
            <summary>
            Provides with a step that is a <b>Hidden Subset</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.HiddenSubsetStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.HiddenSubsetStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.HiddenSubsetStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.HiddenSubsetStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.NakedSubsetStep">
            <summary>
            Provides with a step that is a <b>Naked Subset</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.NakedSubsetStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,Sudoku.Concepts.CellMap@,System.Int16,System.Nullable{System.Boolean})">
            <summary>
            Provides with a step that is a <b>Naked Subset</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.NakedSubsetStep.IsLocked">
            <summary>
            Indicates which locked type this subset is. The cases are as belows:
            <list type="table">
            <item>
            <term><see langword="true"/></term>
            <description>The subset is a locked subset.</description>
            </item>
            <item>
            <term><see langword="true"/></term>
            <description>The subset is a naked subset with at least one extra locked candidate.</description>
            </item>
            <item>
            <term><see langword="null"/></term>
            <description>The subset is a normal naked subset without any extra locked candidates.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.NakedSubsetStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.NakedSubsetStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.NakedSubsetStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.SubsetStep">
            <summary>
            Provides with a step that is a <b>Subset</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.SubsetStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,Sudoku.Concepts.CellMap@,System.Int16)">
            <summary>
            Provides with a step that is a <b>Subset</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SubsetStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SubsetStep.House">
            <summary>
            The house that structure lies in.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SubsetStep.Size">
            <summary>
            Indicates the number of cells used.
            Due to the technique logic, you can also treat the result value of this property as the number of digits used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SubsetStep.DigitsMask">
            <summary>
            Indicates the mask that contains all digits used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SubsetStep.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SubsetStep.Format">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SubsetStep.Cells">
            <summary>
            Indicates all cells used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SubsetStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.SubsetStep.Group">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.GroupedWWingStep">
            <summary>
            Provides with a step that is a <b>Grouped W-Wing</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.GroupedWWingStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.CellMap@)">
            <summary>
            Provides with a step that is a <b>Grouped W-Wing</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.GroupedWWingStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.GroupedWWingStep.StartCell">
            <summary>
            Indicates the start cell.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.GroupedWWingStep.EndCell">
            <summary>
            Indicates the end cell.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.GroupedWWingStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.GroupedWWingStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.GroupedWWingStep.Bridge">
            <summary>
            Indicates the bridge cells connecting with cells <see cref="P:Sudoku.Analytics.Steps.GroupedWWingStep.StartCell"/> and <see cref="P:Sudoku.Analytics.Steps.GroupedWWingStep.EndCell"/>.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.GroupedWWingStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.IrregularWingStep">
            <summary>
            Provides with a step that is a <b>Irregular Wing</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.IrregularWingStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[])">
            <summary>
            Provides with a step that is a <b>Irregular Wing</b> technique.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Steps.MultiBranchWWingStep">
            <summary>
            Provides with a step that is a <b>Multi-Branch W-Wing</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.MultiBranchWWingStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],Sudoku.Concepts.CellMap@,Sudoku.Concepts.CellMap@,System.Int32)">
            <summary>
            Provides with a step that is a <b>Multi-Branch W-Wing</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.MultiBranchWWingStep.Size">
            <summary>
            Indicates the number of branches of the technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.MultiBranchWWingStep.House">
            <summary>
            Indicates the house that all cells in <see cref="P:Sudoku.Analytics.Steps.MultiBranchWWingStep.Root"/> lie in.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.MultiBranchWWingStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.MultiBranchWWingStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.MultiBranchWWingStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.MultiBranchWWingStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.MultiBranchWWingStep.Leaves">
            <summary>
            The leaves of the pattern.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.MultiBranchWWingStep.Root">
            <summary>
            The root cells that corresponds to each leaf.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.MultiBranchWWingStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.WWingStep">
            <summary>
            Provides with a step that is a <b>W-Wing</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.WWingStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,Sudoku.Concepts.Conjugate@)">
            <summary>
            Provides with a step that is a <b>W-Wing</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.WWingStep.StartCell">
            <summary>
            Indicates the start cell.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.WWingStep.EndCell">
            <summary>
            Indicates the end cell.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.WWingStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.WWingStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.WWingStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.WWingStep.ConjugatePair">
            <summary>
            Indicates the conjugate pair connecting with cells <see cref="P:Sudoku.Analytics.Steps.WWingStep.StartCell"/> and <see cref="P:Sudoku.Analytics.Steps.WWingStep.EndCell"/>.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.WWingStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.Steps.RegularWingStep">
            <summary>
            Provides with a step that is a <b>Regular Wing</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.RegularWingStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[],System.Int32,System.Int32,System.Int16,Sudoku.Concepts.CellMap@)">
            <summary>
            Provides with a step that is a <b>Regular Wing</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.RegularWingStep.IsIncomplete">
            <summary>
            Indicates whether the structure is incomplete.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.RegularWingStep.BaseDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.RegularWingStep.Size">
            <inheritdoc/>
            <remarks>
            All names are:
            <list type="table">
            <item>
            <term>2</term>
            <description>XY-Wing</description>
            </item>
            <item>
            <term>3</term>
            <description>XYZ-Wing</description>
            </item>
            <item>
            <term>4</term>
            <description>WXYZ-Wing</description>
            </item>
            <item>
            <term>5</term>
            <description>VWXYZ-Wing</description>
            </item>
            <item>
            <term>6</term>
            <description>UVWXYZ-Wing</description>
            </item>
            <item>
            <term>7</term>
            <description>TUVWXYZ-Wing</description>
            </item>
            <item>
            <term>8</term>
            <description>STUVWXYZ-Wing</description>
            </item>
            <item>
            <term>9</term>
            <description>RSTUVWXYZ-Wing</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:Sudoku.Analytics.Steps.RegularWingStep.Pivot">
            <summary>
            Indicates the cell that blossomed its petals.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.RegularWingStep.PivotCandidatesCount">
            <summary>
            Indicates the number of digits in the pivot cell.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.RegularWingStep.DigitsMask">
            <summary>
            Indicates a mask that contains all digits used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.RegularWingStep.Code">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.RegularWingStep.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.RegularWingStep.Petals">
            <summary>
            Indicates the petals used.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.RegularWingStep.ExtraDifficultyCases">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.RegularWingStep.FormatInterpolatedParts">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.RegularWingStep.InternalName">
            <summary>
            Indicates the internal name.
            </summary>
        </member>
        <member name="T:Sudoku.Analytics.Steps.WingStep">
            <summary>
            Provides with a step that is a <b>Wing</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.Steps.WingStep.#ctor(Sudoku.Solving.Conclusion[],Sudoku.Presentation.View[])">
            <summary>
            Provides with a step that is a <b>Wing</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.Steps.WingStep.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.WingStep.Format">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.Steps.WingStep.Group">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Analytics.WrongStepException">
            <summary>
            Indicates an error that throws when a solving step is wrong (may be due to wrong algorithm, bug, etc.).
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.WrongStepException.#ctor(Sudoku.Concepts.Grid@,Sudoku.Analytics.Step)">
            <summary>
            Initializes a <see cref="T:Sudoku.Analytics.WrongStepException"/> with the specified invalid grid and the wrong step.
            </summary>
            <param name="grid">The invalid sudoku grid.</param>
            <param name="wrongStep">The wrong step.</param>
        </member>
        <member name="P:Sudoku.Analytics.WrongStepException.Message">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Analytics.WrongStepException.CurrentInvalidGrid">
            <summary>
            Indicates the invalid sudoku grid. This property is also stored in the property
            <see cref="P:System.Exception.Data"/>.
            </summary>
            <seealso cref="P:System.Exception.Data"/>
        </member>
        <member name="P:Sudoku.Analytics.WrongStepException.WrongStep">
            <summary>
            Indicates the wrong step.
            </summary>
        </member>
    </members>
</doc>
