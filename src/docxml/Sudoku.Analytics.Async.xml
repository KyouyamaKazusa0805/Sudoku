<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.Analytics.Async</name>
    </assembly>
    <members>
        <member name="T:Sudoku.Analytics.AnalyzerAsyncExtensions">
            <summary>
            Provides with extension methods on <see cref="T:Sudoku.Analytics.Analyzer"/>.
            </summary>
            <seealso cref="T:Sudoku.Analytics.Analyzer"/>
        </member>
        <member name="M:Sudoku.Analytics.AnalyzerAsyncExtensions.EnumerateStepsAsync(Sudoku.Analytics.Analyzer,Sudoku.Concepts.Grid,System.Threading.CancellationToken)">
            <summary>
            Analyzes the specified grid, to find for all possible steps and iterate them in asynchronous way.
            </summary>
            <param name="this">The analyzer instance.</param>
            <param name="grid">Indicates the grid to be analyzed.</param>
            <param name="cancellationToken">The cancellation token that can cancel the current operation.</param>
            <returns>A sequence that allows user iterating on it in asynchronous way.</returns>
        </member>
        <member name="T:Sudoku.Analytics.AsyncAnalyzer">
            <summary>
            Represents an analyzer that can asynchronously analyze a puzzle.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.AsyncAnalyzer.AnalyzeAsync(Sudoku.Analytics.Analyzer,Sudoku.Concepts.Grid@,System.IProgress{Sudoku.Analytics.StepGathererProgressPresenter},System.Threading.CancellationToken)">
            <summary>
            Asynchronously analyzes the specified puzzle.
            </summary>
            <param name="analyzer">The analyzer.</param>
            <param name="grid">The grid to be analyzed.</param>
            <param name="progress">The progress reporter.</param>
            <param name="cancellationToken">The cancellation token that can cancel the current operation.</param>
            <returns>An <see cref="T:Sudoku.Analytics.AsyncAnalyzerAwaitable"/> object that can analyze the puzzle asynchronously.</returns>
        </member>
        <member name="M:Sudoku.Analytics.AsyncAnalyzer.ConfigureAwait(Sudoku.Analytics.AsyncAnalyzerAwaitable@,System.Boolean)">
            <summary>
            Updates the awaiting rule to specify whether the execution context will be back to the previous one,
            instead of just using the current context, to reduce memory allocation.
            </summary>
            <param name="this">Indicates the current instance.</param>
            <param name="continueOnCapturedContext">
            Indicates whether to continue works on captured context instead of reverting back to previous context.
            </param>
            <returns>A new <see cref="T:Sudoku.Analytics.AsyncAnalyzerAwaitable"/> instance, with context switching option updated.</returns>
        </member>
        <member name="T:Sudoku.Analytics.AsyncAnalyzerAwaitable">
            <summary>
            Represents an awaitable rule on analysis for a puzzle.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.AsyncAnalyzerAwaitable._continueOnCapturedContext">
            <summary>
            Indicates whether to continue works on captured context instead of reverting back to previous context.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.AsyncAnalyzerAwaitable._grid">
            <summary>
            Indicates the reference to the grid.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.AsyncAnalyzerAwaitable._cancellationToken">
            <summary>
            Indicates the cancellation token that can cancel the current operation.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.AsyncAnalyzerAwaitable._analyzer">
            <summary>
            Indicates the backing analyzer.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.AsyncAnalyzerAwaitable._progress">
            <summary>
            Indicates the progress reporter.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.AsyncAnalyzerAwaitable.#ctor(Sudoku.Analytics.Analyzer,Sudoku.Concepts.Grid@,System.IProgress{Sudoku.Analytics.StepGathererProgressPresenter},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Initializes an <see cref="T:Sudoku.Analytics.AsyncAnalyzerAwaitable"/> object.
            </summary>
            <param name="analyzer">Indicates the analyzer.</param>
            <param name="grid">Indicates the grid.</param>
            <param name="progress">The progress reporter.</param>
            <param name="continueOnCapturedContext">
            Indicates whether to continue works on captured context instead of reverting back to previous context.
            </param>
            <param name="cancellationToken">The cancellation token that can cancel the current operation.</param>
        </member>
        <member name="M:Sudoku.Analytics.AsyncAnalyzerAwaitable.#ctor(Sudoku.Analytics.AsyncAnalyzerAwaitable@,System.Boolean)">
            <summary>
            Copies the specified source, and update for field <see cref="F:Sudoku.Analytics.AsyncAnalyzerAwaitable._continueOnCapturedContext"/>.
            </summary>
            <param name="original">The original value.</param>
            <param name="continueOnCapturedContext">The new value to be assigned to <see cref="F:Sudoku.Analytics.AsyncAnalyzerAwaitable._continueOnCapturedContext"/>.</param>
        </member>
        <member name="M:Sudoku.Analytics.AsyncAnalyzerAwaitable.GetAwaiter">
            <summary>
            Returns an <see cref="T:Sudoku.Analytics.AsyncAnalyzerAwaiter"/> object that supports the internal awaiting rule of analyzing a puzzle.
            </summary>
            <returns>An <see cref="T:Sudoku.Analytics.AsyncAnalyzerAwaiter"/> object.</returns>
        </member>
        <member name="T:Sudoku.Analytics.AsyncAnalyzerAwaiter">
            <summary>
            Represents an awaiter object that analyzes the specified puzzle.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.AsyncAnalyzerAwaiter._continueOnCapturedContext">
            <summary>
            Indicates whether to continue works on captured context instead of reverting back to previous context.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.AsyncAnalyzerAwaiter._grid">
            <summary>
            Indicates the backing grid to be analyzed.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.AsyncAnalyzerAwaiter._lock">
            <summary>
            Indicates the lock.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.AsyncAnalyzerAwaiter._analyzer">
            <summary>
            Indicates the backing analyzer.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.AsyncAnalyzerAwaiter._progress">
            <summary>
            Indicates the progress reporter.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.AsyncAnalyzerAwaiter._isCompleted">
            <summary>
            Indicates whether the operation is completed.
            </summary>
            <remarks>
            <developer-notes>
		<para>
			<b>Developer Notes</b>
		</para>
	</developer-notes>
            <para>
            The field isn't marked as <see langword="volatile" />,
            because the writting operation uses <see langword="lock" /> statement.
            </para>
            </remarks>
        </member>
        <member name="F:Sudoku.Analytics.AsyncAnalyzerAwaiter._cancellationToken">
            <summary>
            Indicates the cancellation token that can cancel the current operation.
            </summary>
        </member>
        <member name="F:Sudoku.Analytics.AsyncAnalyzerAwaiter._result">
            <summary>
            Indicates the result.
            </summary>
            <remarks>
            <inheritdoc cref="F:Sudoku.Analytics.AsyncAnalyzerAwaiter._isCompleted" path="/remarks"/>
            </remarks>
        </member>
        <member name="F:Sudoku.Analytics.AsyncAnalyzerAwaiter._exception">
            <summary>
            Indicates the exception thrown.
            </summary>
            <remarks>
            <inheritdoc cref="F:Sudoku.Analytics.AsyncAnalyzerAwaiter._isCompleted" path="/remarks"/>
            </remarks>
        </member>
        <member name="F:Sudoku.Analytics.AsyncAnalyzerAwaiter._continuation">
            <summary>
            Indicates the callback action on analysis operation having been finished.
            </summary>
            <remarks>
            <inheritdoc cref="F:Sudoku.Analytics.AsyncAnalyzerAwaiter._isCompleted" path="/remarks"/>
            </remarks>
        </member>
        <member name="M:Sudoku.Analytics.AsyncAnalyzerAwaiter.#ctor(Sudoku.Analytics.Analyzer,Sudoku.Concepts.Grid@,System.IProgress{Sudoku.Analytics.StepGathererProgressPresenter},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Initializes an <see cref="T:Sudoku.Analytics.AsyncAnalyzerAwaiter"/> instance via the specified analyzer.
            </summary>
            <param name="analyzer">Indicates the analyzer.</param>
            <param name="grid">Indicates the grid.</param>
            <param name="progress">Indicates the progress reporter.</param>
            <param name="continueOnCapturedContext">
            Indicates whether to continue works on captured context instead of reverting back to previous context.
            </param>
            <param name="cancellationToken">The cancellation token that can cancel the current operation.</param>
        </member>
        <member name="P:Sudoku.Analytics.AsyncAnalyzerAwaiter.IsCompleted">
            <summary>
            Indicates whether the operation is completed.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.AsyncAnalyzerAwaiter.Result">
            <summary>
            Indicates the result.
            </summary>
        </member>
        <member name="P:Sudoku.Analytics.AsyncAnalyzerAwaiter.Exception">
            <summary>
            Indicates the exception thrown.
            </summary>
        </member>
        <member name="M:Sudoku.Analytics.AsyncAnalyzerAwaiter.GetResult">
            <summary>
            Returns the result value, or throw the internal exception if unhandled exception is encountered.
            </summary>
            <returns>The result value.</returns>
        </member>
        <member name="M:Sudoku.Analytics.AsyncAnalyzerAwaiter.OnCompleted(System.Action)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.AsyncAnalyzerAwaiter.UnsafeOnCompleted(System.Action)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Analytics.AsyncAnalyzerAwaiter.OnCompletedInternal(System.Boolean,System.Action)">
            <summary>
            Executes a custom method on work having been completed.
            </summary>
            <param name="continueOnCapturedContext">Indicates whether to capture and marshal back to the current context.</param>
            <param name="continuation">The method to be executed.</param>
        </member>
        <member name="M:Sudoku.Analytics.AsyncAnalyzerAwaiter.StartContinuation(System.Boolean,System.Action)">
            <summary>
            Determine whether we should switch execution context, and start continuation in thread pool from the context decided.
            </summary>
            <param name="continueOnCapturedContext">Indicates whether to capture and marshal back to the current context.</param>
            <param name="continuation">The method to be executed.</param>
        </member>
        <member name="M:Sudoku.Analytics.AsyncAnalyzerAwaiter.CoreOperation(System.Object)">
            <summary>
            Indicates the backing operation.
            </summary>
            <param name="state">An object containing information to be used by the callback method.</param>
        </member>
    </members>
</doc>
