<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.Scripting</name>
    </assembly>
    <members>
        <member name="T:Sudoku.MetaProgramming.ScriptDocument">
            <summary>
            Represents a document that is loaded from local path, describing a script.
            </summary>
            <param name="filePath">Indicates the document file path.</param>
        </member>
        <member name="M:Sudoku.MetaProgramming.ScriptDocument.#ctor(System.String)">
            <summary>
            Represents a document that is loaded from local path, describing a script.
            </summary>
            <param name="filePath">Indicates the document file path.</param>
        </member>
        <member name="F:Sudoku.MetaProgramming.ScriptDocument._isDisposed">
            <summary>
            Indicates whether the object has been already disposed.
            </summary>
        </member>
        <member name="P:Sudoku.MetaProgramming.ScriptDocument.Diagnostics">
            <summary>
            Indicates the diagnostic results if the loading operation is failed.
            </summary>
        </member>
        <member name="P:Sudoku.MetaProgramming.ScriptDocument.Stream">
            <summary>
            Represents a <see cref="T:System.IO.MemoryStream"/> object that describes the method can be run in.
            The value can be <see langword="null"/> if the method <see cref="M:Sudoku.MetaProgramming.ScriptDocument.LoadAsync(System.Threading.CancellationToken)"/> is not called.
            </summary>
            <seealso cref="M:Sudoku.MetaProgramming.ScriptDocument.LoadAsync(System.Threading.CancellationToken)"/>
        </member>
        <member name="P:Sudoku.MetaProgramming.ScriptDocument.Method">
            <summary>
            Indicates the loaded method information. This value can also be used by invocation.
            </summary>
        </member>
        <member name="P:Sudoku.MetaProgramming.ScriptDocument.Compilation">
            <summary>
            Indicates the compilation instance.
            </summary>
        </member>
        <member name="M:Sudoku.MetaProgramming.ScriptDocument.DisposeAsync">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.MetaProgramming.ScriptDocument.LoadAsync(System.Threading.CancellationToken)">
            <summary>
            Loads a file from local path, and parse it into a valid method, making the property <see cref="P:Sudoku.MetaProgramming.ScriptDocument.Method"/>
            not <see langword="null"/>.
            </summary>
            <param name="cancellationToken">The cancellation token that can cancel the loading operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> instance that holds the asynchronous operation; the result value is a <see cref="T:System.Boolean"/> value
            indicating whether the operation is succeeded.
            </returns>
            <seealso cref="P:Sudoku.MetaProgramming.ScriptDocument.Method"/>
        </member>
        <member name="T:Sudoku.MetaProgramming.TypeSystem">
            <summary>
            Represents methods relating to C# type system.
            </summary>
        </member>
        <member name="M:Sudoku.MetaProgramming.TypeSystem.GetFriendlyTypeName(System.Type,System.Globalization.CultureInfo)">
            <summary>
            Try to get friendly type name of a type.
            </summary>
            <param name="type">The type.</param>
            <param name="culture">Indicates the current culture.</param>
            <returns>The friendly name of the type.</returns>
        </member>
        <member name="T:Sudoku.ModuleInitializer">
            <target name="type">
				<summary>
					<para>
						Provides with the type that contains a module initializer method, called automatically by the CLR
						(Common Language Runtime) to initialize some values.
					</para>
					<para>
						<i>
							The type is called by the compiler and the CLR (Common Language Runtime),
							which means you cannot use any members in this type manually.
						</i>
					</para>
				</summary>
			</target>
        </member>
        <member name="M:Sudoku.ModuleInitializer.Initialize">
            <target name="method">
				<summary>
					Called by the runtime automatically while booting on this solution to initialize the values,
					data members or any other things that can or should be initialized here.
				</summary>
				<remarks>
					The concept <b>module</b> is different with <b>assembly</b>.
					The solution can contain multiple assemblies, while each assembly can contain multiple modules.
					However, due to the design of Visual Studio project file system, each assembly will only contain
					one module by default.
				</remarks>
			</target>
        </member>
        <member name="T:Sudoku.Resources.ScriptingResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Sudoku.Resources.ScriptingResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Sudoku.Resources.ScriptingResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Sudoku.Resources.ScriptingResources.Type_Boolean">
            <summary>
              Looks up a localized string similar to Boolean (True &amp; False).
            </summary>
        </member>
        <member name="P:Sudoku.Resources.ScriptingResources.Type_CandidateMap">
            <summary>
              Looks up a localized string similar to Candidate list.
            </summary>
        </member>
        <member name="P:Sudoku.Resources.ScriptingResources.Type_CellMap">
            <summary>
              Looks up a localized string similar to Cell list.
            </summary>
        </member>
        <member name="P:Sudoku.Resources.ScriptingResources.Type_Grid">
            <summary>
              Looks up a localized string similar to Sudoku grid.
            </summary>
        </member>
        <member name="P:Sudoku.Resources.ScriptingResources.Type_Int32">
            <summary>
              Looks up a localized string similar to Integer.
            </summary>
        </member>
        <member name="P:Sudoku.Resources.ScriptingResources.Type_Mask">
            <summary>
              Looks up a localized string similar to Digit list.
            </summary>
        </member>
        <member name="P:Sudoku.Resources.ScriptingResources.Type_NullableBoolean">
            <summary>
              Looks up a localized string similar to Three-valued boolean.
            </summary>
        </member>
        <member name="P:Sudoku.Resources.ScriptingResources.Type_Other">
            <summary>
              Looks up a localized string similar to Other.
            </summary>
        </member>
        <member name="P:Sudoku.Resources.ScriptingResources.Type_Technique">
            <summary>
              Looks up a localized string similar to Technique.
            </summary>
        </member>
        <member name="T:Sudoku.Scripting.AnalyticsCompilation">
            <summary>
            Represents a way to easily handle for analytics APIs in high-level reflection.
            </summary>
        </member>
        <member name="M:Sudoku.Scripting.AnalyticsCompilation.CreateCompilation">
            <summary>
            Creates a <see cref="T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"/> as environment on operating with APIs.
            </summary>
            <returns>A <see cref="T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation"/> instance.</returns>
        </member>
        <member name="T:Sudoku.Scripting.Script">
            <summary>
            Represents a type that contains a list of methods that supports evaluate methods defined in external files,
            e.g. stored in local file path.
            </summary>
        </member>
        <member name="F:Sudoku.Scripting.Script.DefaultTypeName">
            <summary>
            Indicates the default type name.
            </summary>
        </member>
        <member name="F:Sudoku.Scripting.Script.UsingDirectives">
            <summary>
            Indicates the supported <see langword="using"/> directives.
            </summary>
        </member>
        <member name="F:Sudoku.Scripting.Script.DefaultBindingFlags">
            <summary>
            Indicates the invoking binding flags.
            </summary>
        </member>
        <member name="M:Sudoku.Scripting.Script.LoadExternalFactors(Sudoku.Analytics.AnalysisResult,System.String)">
            <summary>
            Loads external <see cref="T:Sudoku.Measuring.Factor"/> source files, and take them into account,
            by inserting factors into <see cref="P:Sudoku.Analytics.Step.ExternalFactors"/>.
            </summary>
            <param name="this">The <see cref="T:Sudoku.Analytics.AnalysisResult"/> instance to be updated.</param>
            <param name="directoryPath">The directory path.</param>
            <seealso cref="T:Sudoku.Measuring.Factor"/>
            <seealso cref="P:Sudoku.Analytics.Step.ExternalFactors"/>
        </member>
        <member name="M:Sudoku.Scripting.Script.EvaluateAsync(System.String,System.String,System.Object[],System.Threading.CancellationToken)">
            <summary>
            Parses the text as a valid C# code for a method declaration, and evaluate the method and return a valid result.
            </summary>
            <param name="script">
            The C# script, code. The text code must be a valid method declaration without keywords like <see langword="public"/>
            and <see langword="static"/>, with an explicit <see langword="return"/> statement.
            </param>
            <param name="methodName">Indicates the method name you want to call in this script.</param>
            <param name="args">The arguments to be passed.</param>
            <param name="cancellationToken">Indicates the cancellation token that can cancel the task.</param>
            <returns>A <see cref="T:Microsoft.CodeAnalysis.SyntaxTree"/> object returned.</returns>
            <exception cref="T:System.AggregateException">Throws when failed to compile the text.</exception>
        </member>
    </members>
</doc>
