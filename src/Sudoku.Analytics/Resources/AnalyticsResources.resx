<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnalysisResultBeenSolved" xml:space="preserve">
    <value>been solved.</value>
  </data>
  <data name="AnalysisResultBottleneckStep" xml:space="preserve">
    <value>Bottleneck step:</value>
  </data>
  <data name="AnalysisResultInStep" xml:space="preserve">
    <value>In step</value>
  </data>
  <data name="AnalysisResultMin" xml:space="preserve">
    <value>min</value>
  </data>
  <data name="AnalysisResultNot" xml:space="preserve">
    <value>not </value>
  </data>
  <data name="AnalysisResultPuzzle" xml:space="preserve">
    <value>Puzzle: </value>
  </data>
  <data name="AnalysisResultPuzzleHas" xml:space="preserve">
    <value>Puzzle has </value>
  </data>
  <data name="AnalysisResultPuzzleRating" xml:space="preserve">
    <value>Puzzle rating: </value>
  </data>
  <data name="AnalysisResultPuzzleSolution" xml:space="preserve">
    <value>Solution: </value>
  </data>
  <data name="AnalysisResultSolvingSteps" xml:space="preserve">
    <value>Solving steps:</value>
  </data>
  <data name="AnalysisResultStepPlural" xml:space="preserve">
    <value>steps</value>
  </data>
  <data name="AnalysisResultStepSingular" xml:space="preserve">
    <value>step</value>
  </data>
  <data name="AnalysisResultTechniqueUsed" xml:space="preserve">
    <value>Technique used:</value>
  </data>
  <data name="AnalysisResultTechniqueUsing" xml:space="preserve">
    <value>  technique using</value>
  </data>
  <data name="AnalysisResultTimeElapsed" xml:space="preserve">
    <value>Time elapsed: </value>
  </data>
  <data name="AnalysisResultTotal" xml:space="preserve">
    <value>total</value>
  </data>
  <data name="BruteForceSolverResultBeenSolved" xml:space="preserve">
    <value>been solved.</value>
  </data>
  <data name="BruteForceSolverResultNot" xml:space="preserve">
    <value>not </value>
  </data>
  <data name="BruteForceSolverResultPuzzle" xml:space="preserve">
    <value>Puzzle: </value>
  </data>
  <data name="BruteForceSolverResultPuzzleHas" xml:space="preserve">
    <value>Puzzle has </value>
  </data>
  <data name="BruteForceSolverResultSolution" xml:space="preserve">
    <value>Solution: </value>
  </data>
  <data name="BruteForceSolverResultTimeElapsed" xml:space="preserve">
    <value>Time elapsed: </value>
  </data>
  <data name="Colon" xml:space="preserve">
    <value>:</value>
  </data>
  <data name="Ellipsis" xml:space="preserve">
    <value>...</value>
  </data>
  <data name="EndoTaraget" xml:space="preserve">
    <value>endo target: </value>
  </data>
  <data name="ExocetBasicEliminationName" xml:space="preserve">
    <value>Target</value>
  </data>
  <data name="ExocetBiBiPatternEliminationName" xml:space="preserve">
    <value>Bi-bi Pattern</value>
  </data>
  <data name="ExocetCompatibilityTestEliminationName" xml:space="preserve">
    <value>Compatibility Test</value>
  </data>
  <data name="ExocetElimination" xml:space="preserve">
    <value> eliminations: </value>
  </data>
  <data name="ExocetGeneralizedSwordfishEliminationName" xml:space="preserve">
    <value>Generalized Swordfish</value>
  </data>
  <data name="ExocetMirrorEliminationName" xml:space="preserve">
    <value>Mirror</value>
  </data>
  <data name="ExocetTargetInferenceEliminationName" xml:space="preserve">
    <value>Target Inference</value>
  </data>
  <data name="ExocetTargetPairEliminationName" xml:space="preserve">
    <value>Target Pair</value>
  </data>
  <data name="ExocetTrueBaseEliminationName" xml:space="preserve">
    <value>True Base</value>
  </data>
  <data name="FalseKeyword" xml:space="preserve">
    <value>false</value>
  </data>
  <data name="Fin" xml:space="preserve">
    <value> f</value>
  </data>
  <data name="GuardianPlural" xml:space="preserve">
    <value>guardians</value>
  </data>
  <data name="GuardianSingular" xml:space="preserve">
    <value>a guardian</value>
  </data>
  <data name="HiddenKeyword" xml:space="preserve">
    <value>hidden</value>
  </data>
  <data name="IncludedExtraHouse" xml:space="preserve">
    <value>. Extra houses will be included:</value>
  </data>
  <data name="KeywordIn" xml:space="preserve">
    <value>in</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>1033</value>
  </data>
  <data name="LockedMemberQ" xml:space="preserve">
    <value>, locked member 1:</value>
  </data>
  <data name="LockedMemberR" xml:space="preserve">
    <value>, locked member 2: </value>
  </data>
  <data name="NakedKeyword" xml:space="preserve">
    <value>naked</value>
  </data>
  <data name="OrKeywordWithSpaces" xml:space="preserve">
    <value> or </value>
  </data>
  <data name="SubsetNamesSize2" xml:space="preserve">
    <value>pair</value>
  </data>
  <data name="SubsetNamesSize3" xml:space="preserve">
    <value>triple</value>
  </data>
  <data name="SubsetNamesSize4" xml:space="preserve">
    <value>quadruple</value>
  </data>
  <data name="SubsetNamesSize5" xml:space="preserve">
    <value>quintuple</value>
  </data>
  <data name="SubsetNamesSize6" xml:space="preserve">
    <value>sextuple</value>
  </data>
  <data name="SubsetNamesSize7" xml:space="preserve">
    <value>septuple</value>
  </data>
  <data name="TechniqueFormat_AlmostLockedCandidatesStep" xml:space="preserve">
    <value>{0} from {1} to {2}</value>
  </data>
  <data name="TechniqueFormat_AlmostLockedSetsWWingStep" xml:space="preserve">
    <value>Two ALSes {0}, {1} connected by {2}, W = {3}, X = {4}</value>
  </data>
  <data name="TechniqueFormat_AlmostLockedSetsXyWingStep" xml:space="preserve">
    <value>{0} -&gt; {1} -&gt; {2}, X = {3}, Y = {4}, Z = {5}</value>
  </data>
  <data name="TechniqueFormat_AlmostLockedSetsXzStep" xml:space="preserve">
    <value>ALS #1: {0}, ALS #2: {1}, X = {2}{3}</value>
  </data>
  <data name="TechniqueFormat_AlternatingInferenceChainStep" xml:space="preserve">
    <value>{Name}: Chain {ChainStr} =&gt; {ElimStr}</value>
  </data>
  <data name="TechniqueFormat_AvoidableRectangleWithHiddenSingleStep" xml:space="preserve">
    <value>Digits {0} and {1} in {2} with hidden single: if cell {3} is filled with the digit {0}, house {4} will only contain a cell {5} can be filled with that digit, but will raise the deadly pattern</value>
  </data>
  <data name="TechniqueFormat_BinaryChainingStep" xml:space="preserve">
    <value>{Name}: It can be proved to be a contradiction if {AnchorIsTrueOrFalseStr} is {AnchorIsNotOnStr} =&gt; {ElimStr}</value>
  </data>
  <data name="TechniqueFormat_BivalueOddagonType1Step" xml:space="preserve">
    <value>If the cell {0} only contains the digits {1} and {2} (or one of those two), the loop {3} will form an error pattern</value>
  </data>
  <data name="TechniqueFormat_BivalueOddagonType2Step" xml:space="preserve">
    <value>If all digit {0} in cells {1} are removed, the loop will from an error pattern</value>
  </data>
  <data name="TechniqueFormat_BivalueOddagonType3Step" xml:space="preserve">
    <value>To avoid the pattern {0} of digits {1} and {2} error, the only way is to form the subset (digits {3} in cells {4})</value>
  </data>
  <data name="TechniqueFormat_BivalueUniversalGraveMultipleStep" xml:space="preserve">
    <value>True candidates: {0}</value>
  </data>
  <data name="TechniqueFormat_BivalueUniversalGraveType2Step" xml:space="preserve">
    <value>{0} with cells {1}</value>
  </data>
  <data name="TechniqueFormat_BivalueUniversalGraveType3Step" xml:space="preserve">
    <value>True candidates {0} with {1} {2} {3} in cells {4}</value>
  </data>
  <data name="TechniqueFormat_BivalueUniversalGraveType4Step" xml:space="preserve">
    <value>{0} in cells {1} with conjugate pair {2}</value>
  </data>
  <data name="TechniqueFormat_BivalueUniversalGraveXzStep" xml:space="preserve">
    <value>{0} with cells {1}, with extra cell {2}</value>
  </data>
  <data name="TechniqueFormat_BowmanBingoStep" xml:space="preserve">
    <value>Try {0}</value>
  </data>
  <data name="TechniqueFormat_BruteForceStep" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="TechniqueFormat_CellChainingStep" xml:space="preserve">
    <value>{Name}: It can be proved using chains that all digits are false from {0} =&gt; {ElimStr}</value>
  </data>
  <data name="TechniqueFormat_ComplexFishStep" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="TechniqueFormat_ContinuousNiceLoopStep" xml:space="preserve">
    <value>{Name}: Loop {ChainStr} =&gt; {ElimStr}</value>
  </data>
  <data name="TechniqueFormat_DominoLoopStep" xml:space="preserve">
    <value>{0} cells {1}</value>
  </data>
  <data name="TechniqueFormat_EmptyRectangleIntersectionPairStep" xml:space="preserve">
    <value>Digits {0} and {1} in bivalue cells {2} and {3} with empty rectangle in {4}</value>
  </data>
  <data name="TechniqueFormat_EmptyRectangleStep" xml:space="preserve">
    <value>{0} in {1} with conjugate pair {2}</value>
  </data>
  <data name="TechniqueFormat_ExtendedRectangleType1Step" xml:space="preserve">
    <value>{0} in {1}</value>
  </data>
  <data name="TechniqueFormat_ExtendedRectangleType2Step" xml:space="preserve">
    <value>{0} in {1} with extra digit {2}</value>
  </data>
  <data name="TechniqueFormat_ExtendedRectangleType3Step" xml:space="preserve">
    <value>{0} in {1} with {2} in cells {3} in {4}</value>
  </data>
  <data name="TechniqueFormat_ExtendedRectangleType4Step" xml:space="preserve">
    <value>{0} in {1} with the conjugate pair {2}</value>
  </data>
  <data name="TechniqueFormat_ExtendedSubsetPrincipleStep" xml:space="preserve">
    <value>Only the digit {0} can be duplicate in cells {1}</value>
  </data>
  <data name="TechniqueFormat_GuardianStep" xml:space="preserve">
    <value>Cells {0} with {1} {2}</value>
  </data>
  <data name="TechniqueFormat_HiddenSingle" xml:space="preserve">
    <value>In {0}</value>
  </data>
  <data name="TechniqueFormat_HiddenSubsetStep" xml:space="preserve">
    <value>{0} in {1}</value>
  </data>
  <data name="TechniqueFormat_LastDigit" xml:space="preserve">
    <value>This is final digit {0}</value>
  </data>
  <data name="TechniqueFormat_LockedCandidatesStep" xml:space="preserve">
    <value>{0} in {1}\{2}</value>
  </data>
  <data name="TechniqueFormat_MultisectorLockedSetsStep" xml:space="preserve">
    <value>{0} cells {1}</value>
  </data>
  <data name="TechniqueFormat_NakedSubsetStep" xml:space="preserve">
    <value>{0} in {1}</value>
  </data>
  <data name="TechniqueFormat_NormalFishStep" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="TechniqueFormat_PatternOverlayStep" xml:space="preserve">
    <value>Enumeration on digit {0}</value>
  </data>
  <data name="TechniqueFormat_QiuDeadlyPatternLockedTypeStep" xml:space="preserve">
    <value>Cells {0} will be a deadly pattern if{1}{2} {3} {4} {5} false</value>
  </data>
  <data name="TechniqueFormat_QiuDeadlyPatternType1Step" xml:space="preserve">
    <value>Cells {0} will be a deadly pattern if arbitary one digit {1} is true in cell {2}</value>
  </data>
  <data name="TechniqueFormat_QiuDeadlyPatternType2Step" xml:space="preserve">
    <value>Cells {0} will be a deadly pattern if all the extra digits {1} in pair cells is false</value>
  </data>
  <data name="TechniqueFormat_QiuDeadlyPatternType3Step" xml:space="preserve">
    <value>Cells {0} won't be a deadly pattern if and only if digits {1} in cells {2} is a naked {3}</value>
  </data>
  <data name="TechniqueFormat_QiuDeadlyPatternType4Step" xml:space="preserve">
    <value>Cells {0} will be a deadly pattern if another digit in either cells lying on the conjugate pair {1} is true</value>
  </data>
  <data name="TechniqueFormat_HouseChainingStep" xml:space="preserve">
    <value>{Name}: It can be proved using chains that digit {DigitStr} from {HouseStr} are false =&gt; {ElimStr}</value>
  </data>
  <data name="TechniqueFormat_RegularWingStep" xml:space="preserve">
    <value>{0} in {1} with {2}</value>
  </data>
  <data name="TechniqueFormat_SueDeCoq3DimensionStep" xml:space="preserve">
    <value>{0}({1}) + {2}({3}) + {4}({5})</value>
  </data>
  <data name="TechniqueFormat_SueDeCoqStep" xml:space="preserve">
    <value>{0}({1}) - {2}({3}) &amp; {4}({5})</value>
  </data>
  <data name="TechniqueFormat_TemplateStep" xml:space="preserve">
    <value>Digit {DigitStr}</value>
  </data>
  <data name="TechniqueFormat_TwoStrongLinksStep" xml:space="preserve">
    <value>{0} in {1}\{2}</value>
  </data>
  <data name="TechniqueFormat_UniqueLoopType1Step" xml:space="preserve">
    <value>Digits {0} and {1} in cells {2}</value>
  </data>
  <data name="TechniqueFormat_UniqueLoopType2Step" xml:space="preserve">
    <value>Digits {0} and {1} in cells {2} with the extra digit {3}</value>
  </data>
  <data name="TechniqueFormat_UniqueLoopType3Step" xml:space="preserve">
    <value>Digits {0} and {1} in cells {2} with the naked {3} with extra digits {4} in cells {5}</value>
  </data>
  <data name="TechniqueFormat_UniqueLoopType4Step" xml:space="preserve">
    <value>Digits {0} and {1} in cells {2} with the conjugate pair {3}</value>
  </data>
  <data name="TechniqueFormat_UniquePolygonType1Step" xml:space="preserve">
    <value>{0} in cells {1}</value>
  </data>
  <data name="TechniqueFormat_UniquePolygonType2Step" xml:space="preserve">
    <value>{0} in cells {1} with the extra digit {2}</value>
  </data>
  <data name="TechniqueFormat_UniquePolygonType3Step" xml:space="preserve">
    <value>{0} in cells {1} with the digits {2} in cells {3}</value>
  </data>
  <data name="TechniqueFormat_UniquePolygonType4Step" xml:space="preserve">
    <value>{0} in cells {1} with the conjugate house {2} of the extra digits {3}</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangle2DOr3XStep" xml:space="preserve">
    <value>Digits {0} and {1} in {2}, with X = {3}, Y = {4} and a bi-value cell {5}</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangleType1Step" xml:space="preserve">
    <value>Digits {0} and {1} in {2}</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangleType2Step" xml:space="preserve">
    <value>Digits {0} and {1} in {2}, with the extra digit {3}</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangleType3Step" xml:space="preserve">
    <value>Digits {0} and {1} in {2}, with the digit {3} in {4}cells {5} in {6}</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangleWithConjugatePairStep" xml:space="preserve">
    <value>Digits {0} and {1} in {2} with {3}conjugate pair{4} {5}</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangleExternalType1Or2Step" xml:space="preserve">
    <value>Digits {0} and {1} in {2} with guardian: digit {3} in cells {4}</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangleWithSueDeCoqStep" xml:space="preserve">
    <value>Digits {0} and {1} in {2}, with a generalized Sue de Coq in cells {3} of digits {4}</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangleWithBabaGroupingStep" xml:space="preserve">
    <value>Digits {0} and {1} in {2}, with baba grouping: Suppose {3} is filled with the unknown digit X (X is {4}), then 4 cells form a UR deadly pattern of digit X and {5}</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangleWithWingStep" xml:space="preserve">
    <value>Digits {0} and {1} in {2}, with a wing (pivots: {3}, with digits: {4} in cells {2})</value>
  </data>
  <data name="TechniqueFormat_UniqueMatrixType1Step" xml:space="preserve">
    <value>Digits {0} in cells {1} will form a deadly pattern if the candidate {2} is false</value>
  </data>
  <data name="TechniqueFormat_UniqueMatrixType2Step" xml:space="preserve">
    <value>Digits {0} in cells {1} will form a deadly pattern if the extra digit {2} is all false in the pattern</value>
  </data>
  <data name="TechniqueFormat_UniqueMatrixType3Step" xml:space="preserve">
    <value>Digits {0} in cells {1} can be avoid to form a deadly pattern if and only if the digits {2} in cells {3} form a naked {4}</value>
  </data>
  <data name="TechniqueFormat_UniqueMatrixType4Step" xml:space="preserve">
    <value>Digits {0} in cells {1} can avoid to form a deadly pattern if and only if the conjugate house {2} can't set the digit neither {3} nor {4}</value>
  </data>
  <data name="TechniqueFormat_WWingStep" xml:space="preserve">
    <value>{0} to {1}, with {2} as connection</value>
  </data>
  <data name="TrueKeyword" xml:space="preserve">
    <value>true</value>
  </data>
  <data name="FullHouse" xml:space="preserve">
    <value>Full House</value>
  </data>
  <data name="LastDigit" xml:space="preserve">
    <value>Last Digit</value>
  </data>
  <data name="HiddenSingleBlock" xml:space="preserve">
    <value>Hidden Single in Block</value>
  </data>
  <data name="HiddenSingleRow" xml:space="preserve">
    <value>Hidden Single in Row</value>
  </data>
  <data name="HiddenSingleColumn" xml:space="preserve">
    <value>Hidden Single in Column</value>
  </data>
  <data name="NakedSingle" xml:space="preserve">
    <value>Naked Single</value>
  </data>
  <data name="Pointing" xml:space="preserve">
    <value>Pointing</value>
  </data>
  <data name="Claiming" xml:space="preserve">
    <value>Claiming</value>
  </data>
  <data name="AlmostLockedPair" xml:space="preserve">
    <value>Almost Locked Pair</value>
  </data>
  <data name="AlmostLockedTriple" xml:space="preserve">
    <value>Almost Locked Triple</value>
  </data>
  <data name="AlmostLockedQuadruple" xml:space="preserve">
    <value>Almost Locked Quadruple</value>
  </data>
  <data name="NakedPair" xml:space="preserve">
    <value>Naked Pair</value>
  </data>
  <data name="NakedPairPlus" xml:space="preserve">
    <value>Naked Pair (+)</value>
  </data>
  <data name="LockedPair" xml:space="preserve">
    <value>Locked Pair</value>
  </data>
  <data name="HiddenPair" xml:space="preserve">
    <value>Hidden Pair</value>
  </data>
  <data name="NakedTriple" xml:space="preserve">
    <value>Naked Triple</value>
  </data>
  <data name="NakedTriplePlus" xml:space="preserve">
    <value>Naked Triple (+)</value>
  </data>
  <data name="LockedTriple" xml:space="preserve">
    <value>Locked Triple</value>
  </data>
  <data name="HiddenTriple" xml:space="preserve">
    <value>Hidden Triple</value>
  </data>
  <data name="NakedQuadruple" xml:space="preserve">
    <value>Naked Quadruple</value>
  </data>
  <data name="NakedQuadruplePlus" xml:space="preserve">
    <value>Naked Quadruple (+)</value>
  </data>
  <data name="HiddenQuadruple" xml:space="preserve">
    <value>Hidden Quadruple</value>
  </data>
  <data name="XWing" xml:space="preserve">
    <value>X-Wing</value>
  </data>
  <data name="FinnedXWing" xml:space="preserve">
    <value>Finned X-Wing</value>
  </data>
  <data name="SashimiXWing" xml:space="preserve">
    <value>Sashimi X-Wing</value>
  </data>
  <data name="SiameseFinnedXWing" xml:space="preserve">
    <value>Siamese Finned X-Wing</value>
  </data>
  <data name="SiameseSashimiXWing" xml:space="preserve">
    <value>Siamese Sashimi X-Wing</value>
  </data>
  <data name="FrankenXWing" xml:space="preserve">
    <value>Franken X-Wing</value>
  </data>
  <data name="FinnedFrankenXWing" xml:space="preserve">
    <value>Finned Franken X-Wing</value>
  </data>
  <data name="SashimiFrankenXWing" xml:space="preserve">
    <value>Sashimi Franken X-Wing</value>
  </data>
  <data name="SiameseFinnedFrankenXWing" xml:space="preserve">
    <value>Siamese Finned Franken X-Wing</value>
  </data>
  <data name="SiameseSashimiFrankenXWing" xml:space="preserve">
    <value>Siamese Sashimi Franken X-Wing</value>
  </data>
  <data name="MutantXWing" xml:space="preserve">
    <value>Mutant X-Wing</value>
  </data>
  <data name="FinnedMutantXWing" xml:space="preserve">
    <value>Finned Mutant X-Wing</value>
  </data>
  <data name="SashimiMutantXWing" xml:space="preserve">
    <value>Sashimi Mutant X-Wing</value>
  </data>
  <data name="SiameseFinnedMutantXWing" xml:space="preserve">
    <value>Siamese Finned Mutant X-Wing</value>
  </data>
  <data name="SiameseSashimiMutantXWing" xml:space="preserve">
    <value>Siamese Sashimi Mutant X-Wing</value>
  </data>
  <data name="Swordfish" xml:space="preserve">
    <value>Swordfish</value>
  </data>
  <data name="FinnedSwordfish" xml:space="preserve">
    <value>Finned Swordfish</value>
  </data>
  <data name="SashimiSwordfish" xml:space="preserve">
    <value>Sashimi Swordfish</value>
  </data>
  <data name="SiameseFinnedSwordfish" xml:space="preserve">
    <value>Siamese Finned Swordfish</value>
  </data>
  <data name="SiameseSashimiSwordfish" xml:space="preserve">
    <value>Siamese Sashimi Swordfish</value>
  </data>
  <data name="FrankenSwordfish" xml:space="preserve">
    <value>Franken Swordfish</value>
  </data>
  <data name="FinnedFrankenSwordfish" xml:space="preserve">
    <value>Finned Franken Swordfish</value>
  </data>
  <data name="SashimiFrankenSwordfish" xml:space="preserve">
    <value>Sashimi Franken Swordfish</value>
  </data>
  <data name="SiameseFinnedFrankenSwordfish" xml:space="preserve">
    <value>Siamese Finned Franken Swordfish</value>
  </data>
  <data name="SiameseSashimiFrankenSwordfish" xml:space="preserve">
    <value>Siamese Sashimi Franken Swordfish</value>
  </data>
  <data name="MutantSwordfish" xml:space="preserve">
    <value>Mutant Swordfish</value>
  </data>
  <data name="FinnedMutantSwordfish" xml:space="preserve">
    <value>Finned Mutant Swordfish</value>
  </data>
  <data name="SashimiMutantSwordfish" xml:space="preserve">
    <value>Sashimi Mutant Swordfish</value>
  </data>
  <data name="SiameseFinnedMutantSwordfish" xml:space="preserve">
    <value>Siamese Finned Mutant Swordfish</value>
  </data>
  <data name="SiameseSashimiMutantSwordfish" xml:space="preserve">
    <value>Siamese Sashimi Mutant Swordfish</value>
  </data>
  <data name="Jellyfish" xml:space="preserve">
    <value>Jellyfish</value>
  </data>
  <data name="FinnedJellyfish" xml:space="preserve">
    <value>Finned Jellyfish</value>
  </data>
  <data name="SashimiJellyfish" xml:space="preserve">
    <value>Sashimi Jellyfish</value>
  </data>
  <data name="SiameseFinnedJellyfish" xml:space="preserve">
    <value>Siamese Finned Jellyfish</value>
  </data>
  <data name="SiameseSashimiJellyfish" xml:space="preserve">
    <value>Siamese Sashimi Jellyfish</value>
  </data>
  <data name="FrankenJellyfish" xml:space="preserve">
    <value>Franken Jellyfish</value>
  </data>
  <data name="FinnedFrankenJellyfish" xml:space="preserve">
    <value>Finned Franken Jellyfish</value>
  </data>
  <data name="SashimiFrankenJellyfish" xml:space="preserve">
    <value>Sashimi Franken Jellyfish</value>
  </data>
  <data name="SiameseFinnedFrankenJellyfish" xml:space="preserve">
    <value>Siamese Finned Franken Jellyfish</value>
  </data>
  <data name="SiameseSashimiFrankenJellyfish" xml:space="preserve">
    <value>Siamese Sashimi Franken Jellyfish</value>
  </data>
  <data name="MutantJellyfish" xml:space="preserve">
    <value>Mutant Jellyfish</value>
  </data>
  <data name="FinnedMutantJellyfish" xml:space="preserve">
    <value>Finned Mutant Jellyfish</value>
  </data>
  <data name="SashimiMutantJellyfish" xml:space="preserve">
    <value>Sashimi Mutant Jellyfish</value>
  </data>
  <data name="SiameseFinnedMutantJellyfish" xml:space="preserve">
    <value>Siamese Finned Mutant Jellyfish</value>
  </data>
  <data name="SiameseSashimiMutantJellyfish" xml:space="preserve">
    <value>Siamese Sashimi Mutant Jellyfish</value>
  </data>
  <data name="Squirmbag" xml:space="preserve">
    <value>Squirmbag</value>
  </data>
  <data name="FinnedSquirmbag" xml:space="preserve">
    <value>Finned Squirmbag</value>
  </data>
  <data name="SashimiSquirmbag" xml:space="preserve">
    <value>Sashimi Squirmbag</value>
  </data>
  <data name="SiameseFinnedSquirmbag" xml:space="preserve">
    <value>Siamese Finned Squirmbag</value>
  </data>
  <data name="SiameseSashimiSquirmbag" xml:space="preserve">
    <value>Siamese Sashimi Squirmbag</value>
  </data>
  <data name="FrankenSquirmbag" xml:space="preserve">
    <value>Franken Squirmbag</value>
  </data>
  <data name="FinnedFrankenSquirmbag" xml:space="preserve">
    <value>Finned Franken Squirmbag</value>
  </data>
  <data name="SashimiFrankenSquirmbag" xml:space="preserve">
    <value>Sashimi Franken Squirmbag</value>
  </data>
  <data name="SiameseFinnedFrankenSquirmbag" xml:space="preserve">
    <value>Siamese Finned Franken Squirmbag</value>
  </data>
  <data name="SiameseSashimiFrankenSquirmbag" xml:space="preserve">
    <value>Siamese Sashimi Franken Squirmbag</value>
  </data>
  <data name="MutantSquirmbag" xml:space="preserve">
    <value>Mutant Squirmbag</value>
  </data>
  <data name="FinnedMutantSquirmbag" xml:space="preserve">
    <value>Finned Mutant Squirmbag</value>
  </data>
  <data name="SashimiMutantSquirmbag" xml:space="preserve">
    <value>Sashimi Mutant Squirmbag</value>
  </data>
  <data name="SiameseFinnedMutantSquirmbag" xml:space="preserve">
    <value>Siamese Finned Mutant Squirmbag</value>
  </data>
  <data name="SiameseSashimiMutantSquirmbag" xml:space="preserve">
    <value>Siamese Sashimi Mutant Squirmbag</value>
  </data>
  <data name="Whale" xml:space="preserve">
    <value>Whale</value>
  </data>
  <data name="FinnedWhale" xml:space="preserve">
    <value>Finned Whale</value>
  </data>
  <data name="SashimiWhale" xml:space="preserve">
    <value>Sashimi Whale</value>
  </data>
  <data name="SiameseFinnedWhale" xml:space="preserve">
    <value>Siamese Finned Whale</value>
  </data>
  <data name="SiameseSashimiWhale" xml:space="preserve">
    <value>Siamese Sashimi Whale</value>
  </data>
  <data name="FrankenWhale" xml:space="preserve">
    <value>Franken Whale</value>
  </data>
  <data name="FinnedFrankenWhale" xml:space="preserve">
    <value>Finned Franken Whale</value>
  </data>
  <data name="SashimiFrankenWhale" xml:space="preserve">
    <value>Sashimi Franken Whale</value>
  </data>
  <data name="SiameseFinnedFrankenWhale" xml:space="preserve">
    <value>Siamese Finned Franken Whale</value>
  </data>
  <data name="SiameseSashimiFrankenWhale" xml:space="preserve">
    <value>Siamese Sashimi Franken Whale</value>
  </data>
  <data name="MutantWhale" xml:space="preserve">
    <value>Mutant Whale</value>
  </data>
  <data name="FinnedMutantWhale" xml:space="preserve">
    <value>Finned Mutant Whale</value>
  </data>
  <data name="SashimiMutantWhale" xml:space="preserve">
    <value>Sashimi Mutant Whale</value>
  </data>
  <data name="SiameseFinnedMutantWhale" xml:space="preserve">
    <value>Siamese Finned Mutant Whale</value>
  </data>
  <data name="SiameseSashimiMutantWhale" xml:space="preserve">
    <value>Siamese Sashimi Mutant Whale</value>
  </data>
  <data name="Leviathan" xml:space="preserve">
    <value>Leviathan</value>
  </data>
  <data name="FinnedLeviathan" xml:space="preserve">
    <value>Finned Leviathan</value>
  </data>
  <data name="SashimiLeviathan" xml:space="preserve">
    <value>Sashimi Leviathan</value>
  </data>
  <data name="SiameseFinnedLeviathan" xml:space="preserve">
    <value>Siamese Finned Leviathan</value>
  </data>
  <data name="SiameseSashimiLeviathan" xml:space="preserve">
    <value>Siamese Sashimi Leviathan</value>
  </data>
  <data name="FrankenLeviathan" xml:space="preserve">
    <value>Franken Leviathan</value>
  </data>
  <data name="FinnedFrankenLeviathan" xml:space="preserve">
    <value>Finned Franken Leviathan</value>
  </data>
  <data name="SashimiFrankenLeviathan" xml:space="preserve">
    <value>Sashimi Franken Leviathan</value>
  </data>
  <data name="SiameseFinnedFrankenLeviathan" xml:space="preserve">
    <value>Siamese Finned Franken Leviathan</value>
  </data>
  <data name="SiameseSashimiFrankenLeviathan" xml:space="preserve">
    <value>Siamese Sashimi Franken Leviathan</value>
  </data>
  <data name="MutantLeviathan" xml:space="preserve">
    <value>Mutant Leviathan</value>
  </data>
  <data name="FinnedMutantLeviathan" xml:space="preserve">
    <value>Finned Mutant Leviathan</value>
  </data>
  <data name="SashimiMutantLeviathan" xml:space="preserve">
    <value>Sashimi Mutant Leviathan</value>
  </data>
  <data name="SiameseFinnedMutantLeviathan" xml:space="preserve">
    <value>Siamese Finned Mutant Leviathan</value>
  </data>
  <data name="SiameseSashimiMutantLeviathan" xml:space="preserve">
    <value>Siamese Sashimi Mutant Leviathan</value>
  </data>
  <data name="XyWing" xml:space="preserve">
    <value>XY-Wing</value>
  </data>
  <data name="XyzWing" xml:space="preserve">
    <value>XYZ-Wing</value>
  </data>
  <data name="WxyzWing" xml:space="preserve">
    <value>WXYZ-Wing</value>
  </data>
  <data name="VwxyzWing" xml:space="preserve">
    <value>VWXYZ-Wing</value>
  </data>
  <data name="UvwxyzWing" xml:space="preserve">
    <value>UVWXYZ-Wing</value>
  </data>
  <data name="TuvwxyzWing" xml:space="preserve">
    <value>TUVWXYZ-Wing</value>
  </data>
  <data name="StuvwxyzWing" xml:space="preserve">
    <value>STUVWXYZ-Wing</value>
  </data>
  <data name="RstuvwxyzWing" xml:space="preserve">
    <value>RSTUVWXYZ-Wing</value>
  </data>
  <data name="IncompleteWxyzWing" xml:space="preserve">
    <value>Incomplete WXYZ-Wing</value>
  </data>
  <data name="IncompleteVwxyzWing" xml:space="preserve">
    <value>Incomplete VWXYZ-Wing</value>
  </data>
  <data name="IncompleteUvwxyzWing" xml:space="preserve">
    <value>Incomplete UVWXYZ-Wing</value>
  </data>
  <data name="IncompleteTuvwxyzWing" xml:space="preserve">
    <value>Incomplete TUVWXYZ-Wing</value>
  </data>
  <data name="IncompleteStuvwxyzWing" xml:space="preserve">
    <value>Incomplete STUVWXYZ-Wing</value>
  </data>
  <data name="IncompleteRstuvwxyzWing" xml:space="preserve">
    <value>Incomplete RSTUVWXYZ-Wing</value>
  </data>
  <data name="WWing" xml:space="preserve">
    <value>W-Wing</value>
  </data>
  <data name="MWing" xml:space="preserve">
    <value>M-Wing</value>
  </data>
  <data name="LWing" xml:space="preserve">
    <value>L-Wing</value>
  </data>
  <data name="SWing" xml:space="preserve">
    <value>S-Wing</value>
  </data>
  <data name="HWing" xml:space="preserve">
    <value>H-Wing</value>
  </data>
  <data name="GroupedWWing" xml:space="preserve">
    <value>Grouped W-Wing</value>
  </data>
  <data name="GroupedMWing" xml:space="preserve">
    <value>Grouped M-Wing</value>
  </data>
  <data name="GroupedLWing" xml:space="preserve">
    <value>Grouped L-Wing</value>
  </data>
  <data name="GroupedSWing" xml:space="preserve">
    <value>Grouped S-Wing</value>
  </data>
  <data name="GroupedHWing" xml:space="preserve">
    <value>Grouped H-Wing</value>
  </data>
  <data name="UniqueRectangleType1" xml:space="preserve">
    <value>Unique Rectangle Type 1</value>
  </data>
  <data name="UniqueRectangleType2" xml:space="preserve">
    <value>Unique Rectangle Type 2</value>
  </data>
  <data name="UniqueRectangleType3" xml:space="preserve">
    <value>Unique Rectangle Type 3</value>
  </data>
  <data name="UniqueRectangleType4" xml:space="preserve">
    <value>Unique Rectangle Type 4</value>
  </data>
  <data name="UniqueRectangleType5" xml:space="preserve">
    <value>Unique Rectangle Type 5</value>
  </data>
  <data name="UniqueRectangleType6" xml:space="preserve">
    <value>Unique Rectangle Type 6</value>
  </data>
  <data name="HiddenUniqueRectangle" xml:space="preserve">
    <value>Hidden Unique Rectangle</value>
  </data>
  <data name="UniqueRectangle2D" xml:space="preserve">
    <value>Unique Rectangle + 2D</value>
  </data>
  <data name="UniqueRectangle2B1" xml:space="preserve">
    <value>Unique Rectangle + 2B/1SL</value>
  </data>
  <data name="UniqueRectangle2D1" xml:space="preserve">
    <value>Unique Rectangle + 2D/1SL</value>
  </data>
  <data name="UniqueRectangle3X" xml:space="preserve">
    <value>Unique Rectangle + 3X</value>
  </data>
  <data name="UniqueRectangle3X1L" xml:space="preserve">
    <value>Unique Rectangle + 3x/1SL</value>
  </data>
  <data name="UniqueRectangle3X1U" xml:space="preserve">
    <value>Unique Rectangle + 3X/1SL</value>
  </data>
  <data name="UniqueRectangle3X2" xml:space="preserve">
    <value>Unique Rectangle + 3X/2SL</value>
  </data>
  <data name="UniqueRectangle3N2" xml:space="preserve">
    <value>Unique Rectangle + 3N/2SL</value>
  </data>
  <data name="UniqueRectangle3U2" xml:space="preserve">
    <value>Unique Rectangle + 3U/2SL</value>
  </data>
  <data name="UniqueRectangle3E2" xml:space="preserve">
    <value>Unique Rectangle + 3E/2SL</value>
  </data>
  <data name="UniqueRectangle4X1L" xml:space="preserve">
    <value>Unique Rectangle + 4x/1SL</value>
  </data>
  <data name="UniqueRectangle4X1U" xml:space="preserve">
    <value>Unique Rectangle + 4X/1SL</value>
  </data>
  <data name="UniqueRectangle4X2L" xml:space="preserve">
    <value>Unique Rectangle + 4x/2SL</value>
  </data>
  <data name="UniqueRectangle4X2U" xml:space="preserve">
    <value>Unique Rectangle + 4X/2SL</value>
  </data>
  <data name="UniqueRectangle4X3" xml:space="preserve">
    <value>Unique Rectangle + 4X/3SL</value>
  </data>
  <data name="UniqueRectangle4C3" xml:space="preserve">
    <value>Unique Rectangle + 4C/3SL</value>
  </data>
  <data name="UniqueRectangleXyWing" xml:space="preserve">
    <value>Unique Rectangle XY-Wing</value>
  </data>
  <data name="UniqueRectangleXyzWing" xml:space="preserve">
    <value>Unique Rectangle XYZ-Wing</value>
  </data>
  <data name="UniqueRectangleWxyzWing" xml:space="preserve">
    <value>Unique Rectangle WXYZ-Wing</value>
  </data>
  <data name="UniqueRectangleSueDeCoq" xml:space="preserve">
    <value>Unique Rectangle Sue de Coq</value>
  </data>
  <data name="UniqueRectangleBabaGrouping" xml:space="preserve">
    <value>Unique Rectangle Baba Grouping</value>
  </data>
  <data name="UniqueRectangleExternalType2" xml:space="preserve">
    <value>Unique Rectangle External Type 2</value>
  </data>
  <data name="AvoidableRectangleType1" xml:space="preserve">
    <value>Avoidable Rectangle Type 1</value>
  </data>
  <data name="AvoidableRectangleType2" xml:space="preserve">
    <value>Avoidable Rectangle Type 2</value>
  </data>
  <data name="AvoidableRectangleType3" xml:space="preserve">
    <value>Avoidable Rectangle Type 3</value>
  </data>
  <data name="AvoidableRectangleType5" xml:space="preserve">
    <value>Avoidable Rectangle Type 5</value>
  </data>
  <data name="HiddenAvoidableRectangle" xml:space="preserve">
    <value>Hidden Avoidable Rectangle</value>
  </data>
  <data name="AvoidableRectangle2D" xml:space="preserve">
    <value>Avoidable Rectangle + 2D</value>
  </data>
  <data name="AvoidableRectangle3X" xml:space="preserve">
    <value>Avoidable Rectangle + 3X</value>
  </data>
  <data name="AvoidableRectangleXyWing" xml:space="preserve">
    <value>Avoidable Rectangle XY-Wing</value>
  </data>
  <data name="AvoidableRectangleXyzWing" xml:space="preserve">
    <value>Avoidable Rectangle XYZ-Wing</value>
  </data>
  <data name="AvoidableRectangleWxyzWing" xml:space="preserve">
    <value>Avoidable Rectangle WXYZ-Wing</value>
  </data>
  <data name="AvoidableRectangleSueDeCoq" xml:space="preserve">
    <value>Avoidable Rectangle Sue de Coq</value>
  </data>
  <data name="AvoidableRectangleHiddenSingleBlock" xml:space="preserve">
    <value>Avoidable Rectangle Hidden Single in Block</value>
  </data>
  <data name="AvoidableRectangleHiddenSingleRow" xml:space="preserve">
    <value>Avoidable Rectangle Hidden Single in Row</value>
  </data>
  <data name="AvoidableRectangleHiddenSingleColumn" xml:space="preserve">
    <value>Avoidable Rectangle Hidden Single in Column</value>
  </data>
  <data name="UniqueLoopType1" xml:space="preserve">
    <value>Unique Loop Type 1</value>
  </data>
  <data name="UniqueLoopType2" xml:space="preserve">
    <value>Unique Loop Type 2</value>
  </data>
  <data name="UniqueLoopType3" xml:space="preserve">
    <value>Unique Loop Type 3</value>
  </data>
  <data name="UniqueLoopType4" xml:space="preserve">
    <value>Unique Loop Type 4</value>
  </data>
  <data name="ExtendedRectangleType1" xml:space="preserve">
    <value>Extended Rectangle Type 1</value>
  </data>
  <data name="ExtendedRectangleType2" xml:space="preserve">
    <value>Extended Rectangle Type 2</value>
  </data>
  <data name="ExtendedRectangleType3" xml:space="preserve">
    <value>Extended Rectangle Type 3</value>
  </data>
  <data name="ExtendedRectangleType4" xml:space="preserve">
    <value>Extended Rectangle Type 4</value>
  </data>
  <data name="BivalueUniversalGraveType1" xml:space="preserve">
    <value>Bi-value Universal Grave Type 1</value>
  </data>
  <data name="BivalueUniversalGraveType2" xml:space="preserve">
    <value>Bi-value Universal Grave Type 2</value>
  </data>
  <data name="BivalueUniversalGraveType3" xml:space="preserve">
    <value>Bi-value Universal Grave Type 3</value>
  </data>
  <data name="BivalueUniversalGraveType4" xml:space="preserve">
    <value>Bi-value Universal Grave Type 4</value>
  </data>
  <data name="BivalueUniversalGravePlusN" xml:space="preserve">
    <value>Bi-value Universal Grave + n</value>
  </data>
  <data name="BivalueUniversalGravePlusNForcingChains" xml:space="preserve">
    <value>Bi-value Universal Grave Forcing Chains + n</value>
  </data>
  <data name="BivalueUniversalGraveXzRule" xml:space="preserve">
    <value>Bi-value Universal Grave XZ Rule</value>
  </data>
  <data name="BivalueUniversalGraveXyWing" xml:space="preserve">
    <value>Bi-value Universal Grave XY-Wing</value>
  </data>
  <data name="BorescoperDeadlyPatternType1" xml:space="preserve">
    <value>Borescoper's Deadly Pattern Type 1</value>
  </data>
  <data name="BorescoperDeadlyPatternType2" xml:space="preserve">
    <value>Borescoper's Deadly Pattern Type 2</value>
  </data>
  <data name="BorescoperDeadlyPatternType3" xml:space="preserve">
    <value>Borescoper's Deadly Pattern Type 3</value>
  </data>
  <data name="BorescoperDeadlyPatternType4" xml:space="preserve">
    <value>Borescoper's Deadly Pattern Type 4</value>
  </data>
  <data name="QiuDeadlyPatternType1" xml:space="preserve">
    <value>Qiu's Deadly Pattern Type 1</value>
  </data>
  <data name="QiuDeadlyPatternType2" xml:space="preserve">
    <value>Qiu's Deadly Pattern Type 2</value>
  </data>
  <data name="QiuDeadlyPatternType3" xml:space="preserve">
    <value>Qiu's Deadly Pattern Type 3</value>
  </data>
  <data name="QiuDeadlyPatternType4" xml:space="preserve">
    <value>Qiu's Deadly Pattern Type 4</value>
  </data>
  <data name="LockedQiuDeadlyPattern" xml:space="preserve">
    <value>Locked Qiu's Deadly Pattern</value>
  </data>
  <data name="UniqueMatrixType1" xml:space="preserve">
    <value>Unique Matrix Type 1</value>
  </data>
  <data name="UniqueMatrixType2" xml:space="preserve">
    <value>Unique Matrix Type 2</value>
  </data>
  <data name="UniqueMatrixType3" xml:space="preserve">
    <value>Unique Matrix Type 3</value>
  </data>
  <data name="UniqueMatrixType4" xml:space="preserve">
    <value>Unique Matrix Type 4</value>
  </data>
  <data name="SueDeCoq" xml:space="preserve">
    <value>Sue de Coq</value>
  </data>
  <data name="SueDeCoqIsolated" xml:space="preserve">
    <value>Sue de Coq Isolated Digit</value>
  </data>
  <data name="SueDeCoq3Dimension" xml:space="preserve">
    <value>Sue de Coq 3 Dimension</value>
  </data>
  <data name="SueDeCoqCannibalism" xml:space="preserve">
    <value>Sue de Coq Cannibalism</value>
  </data>
  <data name="Skyscraper" xml:space="preserve">
    <value>Skyscraper</value>
  </data>
  <data name="TwoStringKite" xml:space="preserve">
    <value>Two-String Kite</value>
  </data>
  <data name="TurbotFish" xml:space="preserve">
    <value>Turbot Fish</value>
  </data>
  <data name="EmptyRectangle" xml:space="preserve">
    <value>Empty Rectangle</value>
  </data>
  <data name="BrokenWing" xml:space="preserve">
    <value>Guardian</value>
  </data>
  <data name="BivalueOddagonType1" xml:space="preserve">
    <value>Bi-value Oddagon Type 1</value>
  </data>
  <data name="BivalueOddagonType2" xml:space="preserve">
    <value>Bi-value Oddagon Type 2</value>
  </data>
  <data name="BivalueOddagonType3" xml:space="preserve">
    <value>Bi-value Oddagon Type 3</value>
  </data>
  <data name="GroupedBivalueOddagon" xml:space="preserve">
    <value>Grouped Bi-value Oddagon</value>
  </data>
  <data name="XChain" xml:space="preserve">
    <value>X-Chain</value>
  </data>
  <data name="YChain" xml:space="preserve">
    <value>Y-Chain</value>
  </data>
  <data name="FishyCycle" xml:space="preserve">
    <value>Fishy Cycle</value>
  </data>
  <data name="XyChain" xml:space="preserve">
    <value>XY-Chain</value>
  </data>
  <data name="XyCycle" xml:space="preserve">
    <value>XY-Cycle</value>
  </data>
  <data name="XyXChain" xml:space="preserve">
    <value>XY-X-Chain</value>
  </data>
  <data name="PurpleCow" xml:space="preserve">
    <value>Purple Cow</value>
  </data>
  <data name="DiscontinuousNiceLoop" xml:space="preserve">
    <value>Discontinuous Nice Loop</value>
  </data>
  <data name="ContinuousNiceLoop" xml:space="preserve">
    <value>Continuous Nice Loop</value>
  </data>
  <data name="AlternatingInferenceChain" xml:space="preserve">
    <value>Alternating Inference Chain</value>
  </data>
  <data name="GroupedXChain" xml:space="preserve">
    <value>Grouped X-Chain</value>
  </data>
  <data name="GroupedFishyCycle" xml:space="preserve">
    <value>Grouped Fishy Cycle</value>
  </data>
  <data name="GroupedXyChain" xml:space="preserve">
    <value>Grouped XY-Chain</value>
  </data>
  <data name="GroupedXyCycle" xml:space="preserve">
    <value>Grouped XY-Cycle</value>
  </data>
  <data name="GroupedXyXChain" xml:space="preserve">
    <value>Grouped XY-X-Chain</value>
  </data>
  <data name="GroupedPurpleCow" xml:space="preserve">
    <value>Grouped Purple Cow</value>
  </data>
  <data name="GroupedDiscontinuousNiceLoop" xml:space="preserve">
    <value>Grouped Discontinuous Nice Loop</value>
  </data>
  <data name="GroupedContinuousNiceLoop" xml:space="preserve">
    <value>Grouped Continuous Nice Loop</value>
  </data>
  <data name="GroupedAlternatingInferenceChain" xml:space="preserve">
    <value>Grouped Alternating Inference Chain</value>
  </data>
  <data name="NishioForcingChains" xml:space="preserve">
    <value>Nishio Forcing Chains</value>
  </data>
  <data name="RegionForcingChains" xml:space="preserve">
    <value>Region Forcing Chains</value>
  </data>
  <data name="CellForcingChains" xml:space="preserve">
    <value>Cell Forcing Chains</value>
  </data>
  <data name="DynamicRegionForcingChains" xml:space="preserve">
    <value>Dynamic Region Forcing Chains</value>
  </data>
  <data name="DynamicCellForcingChains" xml:space="preserve">
    <value>Dynamic Cell Forcing Chains</value>
  </data>
  <data name="DynamicContradictionForcingChains" xml:space="preserve">
    <value>Dynamic Contradiction Forcing Chains</value>
  </data>
  <data name="DynamicDoubleForcingChains" xml:space="preserve">
    <value>Dynamic Double Forcing Chains</value>
  </data>
  <data name="DynamicForcingChains" xml:space="preserve">
    <value>Dynamic Forcing Chains</value>
  </data>
  <data name="EmptyRectangleIntersectionPair" xml:space="preserve">
    <value>Empty Rectangle Intersection Pair</value>
  </data>
  <data name="SinglyLinkedAlmostLockedSetsXzRule" xml:space="preserve">
    <value>Singly-Linked Almost Locked Sets XZ Rule</value>
  </data>
  <data name="DoublyLinkedAlmostLockedSetsXzRule" xml:space="preserve">
    <value>Doubly-Linked Almost Locked Sets XZ Rule</value>
  </data>
  <data name="AlmostLockedSetsXyWing" xml:space="preserve">
    <value>Almost Locked Sets XY-Wing</value>
  </data>
  <data name="AlmostLockedSetsWWing" xml:space="preserve">
    <value>Almost Locked Sets W-Wing</value>
  </data>
  <data name="DeathBlossom" xml:space="preserve">
    <value>Death Blossom</value>
  </data>
  <data name="GurthSymmetricalPlacement" xml:space="preserve">
    <value>Gurth's Symmetrical Placement</value>
  </data>
  <data name="ExtendedGurthSymmetricalPlacement" xml:space="preserve">
    <value>Extended Gurth's Symmetrical Placement</value>
  </data>
  <data name="JuniorExocet" xml:space="preserve">
    <value>Junior Exocet</value>
  </data>
  <data name="SeniorExocet" xml:space="preserve">
    <value>Senior Exocet</value>
  </data>
  <data name="DominoLoop" xml:space="preserve">
    <value>Domino Loop</value>
  </data>
  <data name="MultisectorLockedSets" xml:space="preserve">
    <value>Multi-sector Locked Sets</value>
  </data>
  <data name="PatternOverlay" xml:space="preserve">
    <value>Pattern Overlay</value>
  </data>
  <data name="TemplateSet" xml:space="preserve">
    <value>Template Set</value>
  </data>
  <data name="TemplateDelete" xml:space="preserve">
    <value>Template Delete</value>
  </data>
  <data name="BowmanBingo" xml:space="preserve">
    <value>Bowman Bingo</value>
  </data>
  <data name="BruteForce" xml:space="preserve">
    <value>Brute Force</value>
  </data>
  <data name="NodeCollision" xml:space="preserve">
    <value>Node Collision</value>
  </data>
  <data name="AlmostLockedSetsChain" xml:space="preserve">
    <value>Almost Locked Sets Chain</value>
  </data>
  <data name="AlmostHiddenSetsChain" xml:space="preserve">
    <value>Almost Hidden Sets Chain</value>
  </data>
  <data name="RemotePair" xml:space="preserve">
    <value>Remote Pair</value>
  </data>
  <data name="ChromaticPatternType1" xml:space="preserve">
    <value>Chromatic Pattern Type 1</value>
  </data>
  <data name="ChromaticPatternType2" xml:space="preserve">
    <value>Chromatic Pattern Type 2</value>
  </data>
  <data name="ChromaticPatternType3" xml:space="preserve">
    <value>Chromatic Pattern Type 3</value>
  </data>
  <data name="ChromaticPatternType4" xml:space="preserve">
    <value>Chromatic Pattern Type 4</value>
  </data>
  <data name="TechniqueFormat_ChromaticPatternType1Step" xml:space="preserve">
    <value>Cells {0} in blocks {1} will form an invalid pattern if these cells only contain the digits {2}</value>
  </data>
  <data name="ChromaticPatternXzRule" xml:space="preserve">
    <value>Chromatic Pattern XZ Rule</value>
  </data>
  <data name="TechniqueFormat_ChromaticPatternXzStep" xml:space="preserve">
    <value>Digits {0} in cells {1} in blocks {2}, with extra cell {3}</value>
  </data>
  <data name="TechniqueFormat_JuniorExocetStep" xml:space="preserve">
    <value>{Name}: Base cells {BaseCellsStr}, target cells {TargetCellsStr}, digits {DigitsStr} =&gt; {ElimStr}</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangleExternalType3Step" xml:space="preserve">
    <value>Digits {0} and {1} in {2} with cells {3} for digits {4} as subset</value>
  </data>
  <data name="UniqueRectangleExternalType3" xml:space="preserve">
    <value>Unique Rectangle External Type 3</value>
  </data>
  <data name="FireworkQuadruple" xml:space="preserve">
    <value>Firework Quadruple</value>
  </data>
  <data name="FireworkTriple" xml:space="preserve">
    <value>Firework Triple</value>
  </data>
  <data name="TechniqueFormat_FireworkTripleStep" xml:space="preserve">
    <value>Cells {0} Must form a hidden triple of digits {1} in multiple houses</value>
  </data>
  <data name="TechniqueFormat_FireworkQuadrupleStep" xml:space="preserve">
    <value>Cells {0} must form a hidden quadruple of digits {1}</value>
  </data>
  <data name="TechniqueFormat_FireworkPairType1Step" xml:space="preserve">
    <value>Two of three cells {0} must form a hidden pair of digits {1}, therefore one of cells {2} and {3} should be a naked pair with that firework</value>
  </data>
  <data name="TechniqueFormat_FireworkPairType2Step" xml:space="preserve">
    <value>Two fireworks {0} and {1} of digits {2}, and an extra cell {3}</value>
  </data>
  <data name="TechniqueFormat_FireworkPairType3Step" xml:space="preserve">
    <value>Cells {0} of digits {1} is a firework, with empty rectangle in house {2}</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangleExternalType4Step" xml:space="preserve">
    <value>Digits {0} and {1} in {2} with conjugate pair {3}</value>
  </data>
  <data name="UniqueRectangleExternalType1" xml:space="preserve">
    <value>Unique Rectangle External Type 1</value>
  </data>
  <data name="UniqueRectangleExternalType4" xml:space="preserve">
    <value>Unique Rectangle External Type 4</value>
  </data>
  <data name="BivalueUniversalGraveFalseCandidateType" xml:space="preserve">
    <value>Bivalue Universal Grave False Candidate</value>
  </data>
  <data name="TechniqueFormat_BivalueUniversalGraveFalseCandidateTypeStep" xml:space="preserve">
    <value>If {0} is true, the grid will be reduced to a BUG deadly pattern</value>
  </data>
  <data name="ChineseComma" xml:space="preserve">
    <value>, </value>
  </data>
  <data name="Comma" xml:space="preserve">
    <value>, </value>
  </data>
  <data name="TechniqueFormat_UniquenessClueCoverStep" xml:space="preserve">
    <value>Enumerates all possible cases filling the chute {0} (i.e. houses {1}), we can find two digits that cannot cover</value>
  </data>
  <data name="UniquenessClueCover" xml:space="preserve">
    <value>Uniqueness Clue Cover</value>
  </data>
  <data name="ReverseBivalueUniversalGraveType1" xml:space="preserve">
    <value>Reverse Bivalue Universal Grave Type 1</value>
  </data>
  <data name="ReverseBivalueUniversalGraveType2" xml:space="preserve">
    <value>Reverse Bivalue Universal Grave Type 2</value>
  </data>
  <data name="ReverseBivalueUniversalGraveType3" xml:space="preserve">
    <value>Reverse Bivalue Universal Grave Type 3</value>
  </data>
  <data name="ReverseBivalueUniversalGraveType4" xml:space="preserve">
    <value>Reverse Bivalue Universal Grave Type 4</value>
  </data>
  <data name="TechniqueFormat_ReverseUniqueRectangleType1Step" xml:space="preserve">
    <value>Only cells {0} gives the value of digits {1}, meaning digits will be a deadly pattern if the target cell {2} is filled with {3}</value>
  </data>
  <data name="TechniqueFormat_ReverseUniqueRectangleType2Step" xml:space="preserve">
    <value>Cells {0} of digits {1}, with an extra digit {2}</value>
  </data>
  <data name="TechniqueFormat_RwDeadlyPatternStep" xml:space="preserve">
    <value>Cells {0}, digits {1}</value>
  </data>
  <data name="RwDeadlyPattern" xml:space="preserve">
    <value>RW's Deadly Pattern</value>
  </data>
  <data name="MultiBranchWWing" xml:space="preserve">
    <value>W-Wing Multiple Branches</value>
  </data>
  <data name="TechniqueFormat_MultiBranchWWingStep" xml:space="preserve">
    <value>Leaves {0}, root cells {1} in house {2}</value>
  </data>
  <data name="TechniqueFormat_GurthSymmetricalPlacementStep" xml:space="preserve">
    <value>The grid must hold symmetrical placement; otherwise, no solution. Symmetry type: {0}, mapping relations: {1}</value>
  </data>
  <data name="NoMappingRelation" xml:space="preserve">
    <value>No mapping</value>
  </data>
  <data name="AntiDiagonalSymmetry" xml:space="preserve">
    <value>Anti-diagonal</value>
  </data>
  <data name="CentralSymmetry" xml:space="preserve">
    <value>Central</value>
  </data>
  <data name="DiagonalSymmetry" xml:space="preserve">
    <value>Diagonal</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangleExternalAlmostLockedSetsXzStep" xml:space="preserve">
    <value>Digits {0} and {1} in {2} with a guardian in cells {3}, with external ALS {4}</value>
  </data>
  <data name="UniqueRectangleExternalAlmostLockedSetsXz" xml:space="preserve">
    <value>Unique Rectangle External Almost Locked Sets XZ Rule</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangleExternalXyWingStep" xml:space="preserve">
    <value>Digits {0} and {1} in {2} with a guardian in cells {3}, with external XY-Wing, with cell pair {4}</value>
  </data>
  <data name="UniqueRectangleExternalXyWing" xml:space="preserve">
    <value>Unique Rectangle External XY-Wing</value>
  </data>
  <data name="AvoidableRectangleExternalAlmostLockedSetsXz" xml:space="preserve">
    <value>Avoidable Rectangle External Almost Locked Sets XZ Rule</value>
  </data>
  <data name="AvoidableRectangleExternalXyWing" xml:space="preserve">
    <value>Avoidable Rectangle External XY-Wing</value>
  </data>
  <data name="AvoidableRectangleExternalType1" xml:space="preserve">
    <value>Avoidable Rectangle External Type 1</value>
  </data>
  <data name="AvoidableRectangleExternalType2" xml:space="preserve">
    <value>Avoidable Rectangle External Type 2</value>
  </data>
  <data name="AvoidableRectangleExternalType3" xml:space="preserve">
    <value>Avoidable Rectangle External Type 3</value>
  </data>
  <data name="AvoidableRectangleExternalType4" xml:space="preserve">
    <value>Avoidable Rectangle External Type 4</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangleExternalTurbotFishStep" xml:space="preserve">
    <value>Digits {0} and {1} in {2} with guardian cells {3}, forming a turbot fish</value>
  </data>
  <data name="UniqueRectangleExternalTurbotFish" xml:space="preserve">
    <value>Unique Rectangle External Turbot Fish</value>
  </data>
  <data name="AbsurdChains" xml:space="preserve">
    <value>Dynamic Contradiction Forcing Chains</value>
  </data>
  <data name="CellChains" xml:space="preserve">
    <value>Cell Forcing Chains</value>
  </data>
  <data name="DoubleChains" xml:space="preserve">
    <value>Dynamic Double Forcing Chains</value>
  </data>
  <data name="DynamicKeyword" xml:space="preserve">
    <value>Dynamic</value>
  </data>
  <data name="HouseChains" xml:space="preserve">
    <value>House Forcing Chains</value>
  </data>
  <data name="NestedSuffix_Level1" xml:space="preserve">
    <value> (+)</value>
  </data>
  <data name="NestedSuffix_Level2" xml:space="preserve">
    <value> (+ AICs)</value>
  </data>
  <data name="NestedSuffix_Level3" xml:space="preserve">
    <value> (+ Multiple Forcing Chains)</value>
  </data>
  <data name="NestedSuffix_Level4" xml:space="preserve">
    <value> (+ Dynamic Forcing Chains)</value>
  </data>
  <data name="NestedSuffix_Level5OrGreater" xml:space="preserve">
    <value> (+ Dynamic Forcing Chains {0})</value>
  </data>
  <data name="NishioChains" xml:space="preserve">
    <value>Nishio Forcing Chains</value>
  </data>
  <data name="NishioKeyword" xml:space="preserve">
    <value>Nishio</value>
  </data>
  <data name="NormalChains" xml:space="preserve">
    <value>AICs</value>
  </data>
  <data name="TechniqueFormat_BidirectionalCycleStep" xml:space="preserve">
    <value>All candidates {0} can be eliminated because a loop is formed</value>
  </data>
  <data name="TechniqueFormat_CellForcingChainsStep" xml:space="preserve">
    <value>It is proved that all candidates in cell {0} will lead to a same conclusion</value>
  </data>
  <data name="TechniqueFormat_ContradictionForcingChainsStep" xml:space="preserve">
    <value>It is proved that the candidate {0} is {1}, both true and false states of candidate {2} can be found, leading to a contradiction</value>
  </data>
  <data name="TechniqueFormat_DoubleForcingChainsStep" xml:space="preserve">
    <value>It is proved that a same conclusion {0} being {2}, no matter which state the candidate {1} is</value>
  </data>
  <data name="TechniqueFormat_ForcingChainStep" xml:space="preserve">
    <value>It is proved that the candidate {0} is {1}, the state of the candidate will be flipped, forming a contradiction</value>
  </data>
  <data name="TechniqueFormat_RegionForcingChainsStep" xml:space="preserve">
    <value>It is proved that all position of digit {0} in house {1} will lead to a same conclusion</value>
  </data>
  <data name="StepSearcherName_AdvancedMultipleChainingStepSearcher" xml:space="preserve">
    <value>Multiple Forcing Chains (Advanced)</value>
  </data>
  <data name="StepSearcherName_AlmostLockedCandidatesStepSearcher" xml:space="preserve">
    <value>Almost Locked Candidates</value>
  </data>
  <data name="StepSearcherName_AlmostLockedSetsWWingStepSearcher" xml:space="preserve">
    <value>Almost Locked Sets W-Wing</value>
  </data>
  <data name="StepSearcherName_AlmostLockedSetsXyWingStepSearcher" xml:space="preserve">
    <value>Almost Locked Sets XY-Wing</value>
  </data>
  <data name="StepSearcherName_AlmostLockedSetsXzStepSearcher" xml:space="preserve">
    <value>Almost Locked Sets XZ</value>
  </data>
  <data name="StepSearcherName_BivalueOddagonStepSearcher" xml:space="preserve">
    <value>Bivalue Oddagon</value>
  </data>
  <data name="StepSearcherName_BivalueUniversalGraveStepSearcher" xml:space="preserve">
    <value>Bivalue Universal Grave</value>
  </data>
  <data name="StepSearcherName_BowmanBingoStepSearcher" xml:space="preserve">
    <value>Bowman's Bingo</value>
  </data>
  <data name="StepSearcherName_BruteForceStepSearcher" xml:space="preserve">
    <value>Brute Force</value>
  </data>
  <data name="StepSearcherName_ChromaticPatternStepSearcher" xml:space="preserve">
    <value>Chromatic Pattern</value>
  </data>
  <data name="StepSearcherName_ComplexFishStepSearcher" xml:space="preserve">
    <value>Complex Fishes</value>
  </data>
  <data name="StepSearcherName_DeathBlossomStepSearcher" xml:space="preserve">
    <value>Death Blossom</value>
  </data>
  <data name="StepSearcherName_DominoLoopStepSearcher" xml:space="preserve">
    <value>Domino Loop</value>
  </data>
  <data name="StepSearcherName_EmptyRectangleIntersectionPairStepSearcher" xml:space="preserve">
    <value>Empty Rectangle Intersection Pair</value>
  </data>
  <data name="StepSearcherName_EmptyRectangleStepSearcher" xml:space="preserve">
    <value>Empty Rectangle</value>
  </data>
  <data name="StepSearcherName_ExtendedRectangleStepSearcher" xml:space="preserve">
    <value>Extended Rectangle</value>
  </data>
  <data name="StepSearcherName_FireworkStepSearcher" xml:space="preserve">
    <value>Firework</value>
  </data>
  <data name="StepSearcherName_GuardianStepSearcher" xml:space="preserve">
    <value>Guardian</value>
  </data>
  <data name="StepSearcherName_AntiGurthSymmetricalPlacementStepSearcher" xml:space="preserve">
    <value>Gurth's Symmetrical Placement</value>
  </data>
  <data name="StepSearcherName_LockedCandidatesStepSearcher" xml:space="preserve">
    <value>Locked Candidates</value>
  </data>
  <data name="StepSearcherName_MultisectorLockedSetsStepSearcher" xml:space="preserve">
    <value>Multi-Sector Locked Sets</value>
  </data>
  <data name="StepSearcherName_NormalFishStepSearcher" xml:space="preserve">
    <value>Normal Fishes</value>
  </data>
  <data name="StepSearcherName_PatternOverlayStepSearcher" xml:space="preserve">
    <value>Pattern Overlay</value>
  </data>
  <data name="StepSearcherName_QiuDeadlyPatternStepSearcher" xml:space="preserve">
    <value>Qiu's Deadly Pattern</value>
  </data>
  <data name="StepSearcherName_RegularWingStepSearcher" xml:space="preserve">
    <value>Regular Wings</value>
  </data>
  <data name="StepSearcherName_ReverseBivalueUniversalGraveStepSearcher" xml:space="preserve">
    <value>Reverse Bivalue Universal Grave</value>
  </data>
  <data name="StepSearcherName_RwDeadlyPatternStepSearcher" xml:space="preserve">
    <value>RW's Deadly Pattern</value>
  </data>
  <data name="StepSearcherName_SingleStepSearcher" xml:space="preserve">
    <value>Singles</value>
  </data>
  <data name="StepSearcherName_NormalSubsetStepSearcher" xml:space="preserve">
    <value>Normal Subsets</value>
  </data>
  <data name="StepSearcherName_SueDeCoq3DimensionStepSearcher" xml:space="preserve">
    <value>Sue de Coq 3 Dimension</value>
  </data>
  <data name="StepSearcherName_SueDeCoqStepSearcher" xml:space="preserve">
    <value>Sue de Coq</value>
  </data>
  <data name="StepSearcherName_TemplateStepSearcher" xml:space="preserve">
    <value>Templates</value>
  </data>
  <data name="StepSearcherName_TwoStrongLinksStepSearcher" xml:space="preserve">
    <value>Two-Strong Links</value>
  </data>
  <data name="StepSearcherName_UniqueLoopStepSearcher" xml:space="preserve">
    <value>Unique Loop</value>
  </data>
  <data name="StepSearcherName_UniqueMatrixStepSearcher" xml:space="preserve">
    <value>Unique Matrix</value>
  </data>
  <data name="StepSearcherName_UniquenessClueCoverStepSearcher" xml:space="preserve">
    <value>Uniqueness Clue Cover</value>
  </data>
  <data name="StepSearcherName_BorescoperDeadlyPatternStepSearcher" xml:space="preserve">
    <value>Borescoper's Deadly Pattern</value>
  </data>
  <data name="StepSearcherName_UniqueRectangleStepSearcher" xml:space="preserve">
    <value>Unique Rectangle</value>
  </data>
  <data name="ExtraDifficultyFactorNames_Avoidable" xml:space="preserve">
    <value>Avoidable logic</value>
  </data>
  <data name="ExtraDifficultyFactorNames_IncompatiblePair" xml:space="preserve">
    <value>Incompatible pair</value>
  </data>
  <data name="ExtraDifficultyFactorNames_Cannibalism" xml:space="preserve">
    <value>Cannibalism</value>
  </data>
  <data name="ExtraDifficultyFactorNames_ConjugatePair" xml:space="preserve">
    <value>Conjugate pair</value>
  </data>
  <data name="ExtraDifficultyFactorNames_ExtraDigit" xml:space="preserve">
    <value>Extra digit</value>
  </data>
  <data name="ExtraDifficultyFactorNames_ExtraHouse" xml:space="preserve">
    <value>Extra house</value>
  </data>
  <data name="ExtraDifficultyFactorNames_FishShape" xml:space="preserve">
    <value>Fish shape</value>
  </data>
  <data name="ExtraDifficultyFactorNames_GeneralizedFish" xml:space="preserve">
    <value>Fish</value>
  </data>
  <data name="ExtraDifficultyFactorNames_Guardian" xml:space="preserve">
    <value>Guardian logic</value>
  </data>
  <data name="ExtraDifficultyFactorNames_Hidden" xml:space="preserve">
    <value>Hidden logic</value>
  </data>
  <data name="ExtraDifficultyFactorNames_Incompleteness" xml:space="preserve">
    <value>Incompleteness logic</value>
  </data>
  <data name="ExtraDifficultyFactorNames_Isolated" xml:space="preserve">
    <value>Isolated logic</value>
  </data>
  <data name="ExtraDifficultyFactorNames_Length" xml:space="preserve">
    <value>Length</value>
  </data>
  <data name="ExtraDifficultyFactorNames_Locked" xml:space="preserve">
    <value>Locked logic</value>
  </data>
  <data name="ExtraDifficultyFactorNames_LockedDigit" xml:space="preserve">
    <value>Locked digit</value>
  </data>
  <data name="ExtraDifficultyFactorNames_Mirror" xml:space="preserve">
    <value>Mirror eliminations</value>
  </data>
  <data name="ExtraDifficultyFactorNames_Petals" xml:space="preserve">
    <value>Petal</value>
  </data>
  <data name="ExtraDifficultyFactorNames_Sashimi" xml:space="preserve">
    <value>Sashimi logic</value>
  </data>
  <data name="ExtraDifficultyFactorNames_Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="ExtraDifficultyFactorNames_TargetPair" xml:space="preserve">
    <value>Target pair</value>
  </data>
  <data name="ExtraDifficultyFactorNames_ValueCell" xml:space="preserve">
    <value>Value logic</value>
  </data>
  <data name="ExtraDifficultyFactorNames_WingSize" xml:space="preserve">
    <value>Wing branches</value>
  </data>
  <data name="TechniqueAbbr_AlmostLockedPair" xml:space="preserve">
    <value>ALP</value>
  </data>
  <data name="TechniqueAbbr_AlmostLockedQuadruple" xml:space="preserve">
    <value>ALQ</value>
  </data>
  <data name="TechniqueAbbr_AlmostLockedSetsChain" xml:space="preserve">
    <value>ALS</value>
  </data>
  <data name="TechniqueAbbr_AlmostLockedSetsWWing" xml:space="preserve">
    <value>ALS</value>
  </data>
  <data name="TechniqueAbbr_AlmostLockedSetsXyWing" xml:space="preserve">
    <value>ALS</value>
  </data>
  <data name="TechniqueAbbr_AlmostLockedTriple" xml:space="preserve">
    <value>ALT</value>
  </data>
  <data name="TechniqueAbbr_AlternatingInferenceChain" xml:space="preserve">
    <value>AIC</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangle2D" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangle3X" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleBrokenWing" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleExternalAlmostLockedSetsXz" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleExternalSkyscraper" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleExternalTurbotFish" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleExternalTwoStringKite" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleExternalType1" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleExternalType2" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleExternalType3" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleExternalType4" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleExternalXyWing" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleHiddenSingleBlock" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleHiddenSingleColumn" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleHiddenSingleRow" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleSueDeCoq" xml:space="preserve">
    <value>AR SDC</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleType1" xml:space="preserve">
    <value>AR1</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleType2" xml:space="preserve">
    <value>AR2</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleType3" xml:space="preserve">
    <value>AR3</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleType5" xml:space="preserve">
    <value>AR5</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleWxyzWing" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleXyWing" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_AvoidableRectangleXyzWing" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="TechniqueAbbr_BivalueUniversalGraveFalseCandidateType" xml:space="preserve">
    <value>BUG</value>
  </data>
  <data name="TechniqueAbbr_BivalueUniversalGravePlusN" xml:space="preserve">
    <value>BUG</value>
  </data>
  <data name="TechniqueAbbr_BivalueUniversalGravePlusNForcingChains" xml:space="preserve">
    <value>BUG</value>
  </data>
  <data name="TechniqueAbbr_BivalueUniversalGraveType1" xml:space="preserve">
    <value>BUG1</value>
  </data>
  <data name="TechniqueAbbr_BivalueUniversalGraveType2" xml:space="preserve">
    <value>BUG2</value>
  </data>
  <data name="TechniqueAbbr_BivalueUniversalGraveType3" xml:space="preserve">
    <value>BUG3</value>
  </data>
  <data name="TechniqueAbbr_BivalueUniversalGraveType4" xml:space="preserve">
    <value>BUG4</value>
  </data>
  <data name="TechniqueAbbr_BivalueUniversalGraveXyWing" xml:space="preserve">
    <value>BUG</value>
  </data>
  <data name="TechniqueAbbr_BivalueUniversalGraveXzRule" xml:space="preserve">
    <value>BUG</value>
  </data>
  <data name="TechniqueAbbr_BruteForce" xml:space="preserve">
    <value>BF</value>
  </data>
  <data name="TechniqueAbbr_ComplexSeniorExocet" xml:space="preserve">
    <value>SE</value>
  </data>
  <data name="TechniqueAbbr_ContinuousNiceLoop" xml:space="preserve">
    <value>CNL</value>
  </data>
  <data name="TechniqueAbbr_DiscontinuousNiceLoop" xml:space="preserve">
    <value>DNL</value>
  </data>
  <data name="TechniqueAbbr_DoublyLinkedAlmostLockedSetsXzRule" xml:space="preserve">
    <value>ALS</value>
  </data>
  <data name="TechniqueAbbr_EmptyRectangle" xml:space="preserve">
    <value>ER</value>
  </data>
  <data name="TechniqueAbbr_EmptyRectangleIntersectionPair" xml:space="preserve">
    <value>ERIP</value>
  </data>
  <data name="TechniqueAbbr_ExtendedRectangleType1" xml:space="preserve">
    <value>XR1</value>
  </data>
  <data name="TechniqueAbbr_ExtendedRectangleType2" xml:space="preserve">
    <value>XR2</value>
  </data>
  <data name="TechniqueAbbr_ExtendedRectangleType3" xml:space="preserve">
    <value>XR3</value>
  </data>
  <data name="TechniqueAbbr_ExtendedRectangleType4" xml:space="preserve">
    <value>XR4</value>
  </data>
  <data name="TechniqueAbbr_GurthSymmetricalPlacement" xml:space="preserve">
    <value>GSP</value>
  </data>
  <data name="TechniqueAbbr_HiddenAvoidableRectangle" xml:space="preserve">
    <value>HAR</value>
  </data>
  <data name="TechniqueAbbr_HiddenUniqueRectangle" xml:space="preserve">
    <value>HUR</value>
  </data>
  <data name="TechniqueAbbr_JuniorExocet" xml:space="preserve">
    <value>JE</value>
  </data>
  <data name="TechniqueAbbr_MultisectorLockedSets" xml:space="preserve">
    <value>MSLS</value>
  </data>
  <data name="TechniqueAbbr_PatternOverlay" xml:space="preserve">
    <value>POM</value>
  </data>
  <data name="TechniqueAbbr_SeniorExocet" xml:space="preserve">
    <value>SE</value>
  </data>
  <data name="TechniqueAbbr_SinglyLinkedAlmostLockedSetsXzRule" xml:space="preserve">
    <value>ALS</value>
  </data>
  <data name="TechniqueAbbr_SueDeCoq" xml:space="preserve">
    <value>SDC</value>
  </data>
  <data name="TechniqueAbbr_SueDeCoq3Dimension" xml:space="preserve">
    <value>SDC</value>
  </data>
  <data name="TechniqueAbbr_SueDeCoqCannibalism" xml:space="preserve">
    <value>SDC</value>
  </data>
  <data name="TechniqueAbbr_SueDeCoqIsolated" xml:space="preserve">
    <value>SDC</value>
  </data>
  <data name="TechniqueAbbr_UniqueLoopType1" xml:space="preserve">
    <value>UL1</value>
  </data>
  <data name="TechniqueAbbr_UniqueLoopType2" xml:space="preserve">
    <value>UL2</value>
  </data>
  <data name="TechniqueAbbr_UniqueLoopType3" xml:space="preserve">
    <value>UL3</value>
  </data>
  <data name="TechniqueAbbr_UniqueLoopType4" xml:space="preserve">
    <value>UL4</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangle2B1" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangle2D" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangle2D1" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangle3E2" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangle3N2" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangle3U2" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangle3X" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangle3X1L" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangle3X1U" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangle3X2" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangle4C3" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangle4X1L" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangle4X1U" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangle4X2L" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangle4X2U" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangle4X3" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleBabaGrouping" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleExternalAlmostLockedSetsXz" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleExternalSkyscraper" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleExternalTurbotFish" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleExternalTwoStringKite" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleExternalType1" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleExternalType2" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleExternalType3" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleExternalType4" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleExternalXyWing" xml:space="preserve">
    <value>UR</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleSueDeCoq" xml:space="preserve">
    <value>UR SDC</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleType1" xml:space="preserve">
    <value>UR1</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleType2" xml:space="preserve">
    <value>UR2</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleType3" xml:space="preserve">
    <value>UR3</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleType4" xml:space="preserve">
    <value>UR4</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleType5" xml:space="preserve">
    <value>UR5</value>
  </data>
  <data name="TechniqueAbbr_UniqueRectangleType6" xml:space="preserve">
    <value>UR6</value>
  </data>
  <data name="TechniqueAlias_Claiming" xml:space="preserve">
    <value>Locked Candidates Type 2</value>
  </data>
  <data name="TechniqueAlias_FireworkPairType1" xml:space="preserve">
    <value>Hanabi;Hanabi Pair</value>
  </data>
  <data name="TechniqueAlias_FireworkPairType2" xml:space="preserve">
    <value>Hanabi;Hanabi Pair</value>
  </data>
  <data name="TechniqueAlias_FireworkPairType3" xml:space="preserve">
    <value>Hanabi;Hanabi Pair</value>
  </data>
  <data name="TechniqueAlias_FireworkQuadruple" xml:space="preserve">
    <value>Hanabi;Hanabi Quadruple;Hanabi Quad</value>
  </data>
  <data name="TechniqueAlias_FireworkTriple" xml:space="preserve">
    <value>Hanabi;Hanabi Triple;Hanabi Triplet</value>
  </data>
  <data name="TechniqueAlias_HiddenUniqueRectangle" xml:space="preserve">
    <value>Hidden Rectangle</value>
  </data>
  <data name="TechniqueAlias_Jellyfish" xml:space="preserve">
    <value>4-Fish</value>
  </data>
  <data name="TechniqueAlias_Leviathan" xml:space="preserve">
    <value>7-Fish</value>
  </data>
  <data name="TechniqueAlias_NakedQuadruple" xml:space="preserve">
    <value>Naked Quad</value>
  </data>
  <data name="TechniqueAlias_NakedQuadruplePlus" xml:space="preserve">
    <value>Naked Quad (+)</value>
  </data>
  <data name="TechniqueAlias_NakedTriple" xml:space="preserve">
    <value>Naked Triplet</value>
  </data>
  <data name="TechniqueAlias_NakedTriplePlus" xml:space="preserve">
    <value>Naked Triplet (+)</value>
  </data>
  <data name="TechniqueAlias_Pointing" xml:space="preserve">
    <value>Locked Candidates Type 1</value>
  </data>
  <data name="TechniqueAlias_Squirmbag" xml:space="preserve">
    <value>5-Fish;Starfish</value>
  </data>
  <data name="TechniqueAlias_SueDeCoq" xml:space="preserve">
    <value>Two-sector Locked Set</value>
  </data>
  <data name="TechniqueAlias_Swordfish" xml:space="preserve">
    <value>3-Fish</value>
  </data>
  <data name="TechniqueAlias_Whale" xml:space="preserve">
    <value>6-Fish</value>
  </data>
  <data name="AlignedPairExclusion" xml:space="preserve">
    <value>Aligned Pair Exclusion</value>
  </data>
  <data name="AlignedQuadrupleExclusion" xml:space="preserve">
    <value>Aligned Quadruple Exclusion</value>
  </data>
  <data name="AlignedQuintupleExclusion" xml:space="preserve">
    <value>Aligned Quintuple Exclusion</value>
  </data>
  <data name="AlignedTripleExclusion" xml:space="preserve">
    <value>Aligned Triple Exclusion</value>
  </data>
  <data name="TechniqueFormat_AlignedExclusionStep" xml:space="preserve">
    <value>Enumerate possible combinations of cells {0}, then all possible cases with {1} are wrong</value>
  </data>
  <data name="StepSearcherName_AlignedExclusionStepSearcher" xml:space="preserve">
    <value>Aligned Exclusion</value>
  </data>
  <data name="TechniqueFormat_ReverseBivalueUniversalGraveType1Step" xml:space="preserve">
    <value>Digits {0} and {1} will lead to a deadly pattern if the grid only contains cells {2} hold that digits</value>
  </data>
  <data name="TechniqueFormat_ReverseBivalueUniversalGraveType2Step" xml:space="preserve">
    <value>Extra digit: {0}</value>
  </data>
  <data name="TechniqueFormat_ReverseBivalueUniversalGraveType4Step" xml:space="preserve">
    <value>Conjugate pair: {0}</value>
  </data>
  <data name="BlossomLoop" xml:space="preserve">
    <value>Blossom Loop</value>
  </data>
  <data name="TechniqueFormat_BlossomLoopStep" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="StepSearcherName_BlossomLoopStepSearcher" xml:space="preserve">
    <value>Blossom Loop</value>
  </data>
  <data name="LockedHiddenPair" xml:space="preserve">
    <value>Locked Hidden Pair</value>
  </data>
  <data name="LockedHiddenTriple" xml:space="preserve">
    <value>Locked Hidden Triple</value>
  </data>
  <data name="StepSearcherName_LockedSubsetStepSearcher" xml:space="preserve">
    <value>Locked Subsets</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangleExternalWWingStep" xml:space="preserve">
    <value>Digits {0} and {1} in {2} with a guardian in cells {3}, with external W-Wing, with cell pair {4}</value>
  </data>
  <data name="UniqueRectangleExternalWWing" xml:space="preserve">
    <value>Unique Rectangle External W-Wing</value>
  </data>
  <data name="AvoidableRectangleExternalWWing" xml:space="preserve">
    <value>Avoidable Rectangle External W-Wing</value>
  </data>
  <data name="TechniqueFormat_ReverseBivalueUniversalGraveType3Step" xml:space="preserve">
    <value>Extra house {0}, with extra digits {1}</value>
  </data>
  <data name="AvoidableRectangleWWing" xml:space="preserve">
    <value>Avoidable Rectangle W-Wing</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangleWithWWingStep" xml:space="preserve">
    <value>Digits {0} and {1} in {2}, with a W-Wing, connectors are {3}, end cells are {4}, w = {5}</value>
  </data>
  <data name="UniqueRectangleWWing" xml:space="preserve">
    <value>Unique Rectangle W-Wing</value>
  </data>
  <data name="GroupedSkyscraper" xml:space="preserve">
    <value>Grouped Skyscraper</value>
  </data>
  <data name="GroupedTurbotFish" xml:space="preserve">
    <value>Grouped Turbot Fish</value>
  </data>
  <data name="GroupedTwoStringKite" xml:space="preserve">
    <value>Grouped Two-String Kite</value>
  </data>
  <data name="StepSearcherName_GroupedTwoStrongLinksStepSearcher" xml:space="preserve">
    <value>Grouped Two-Strong Links</value>
  </data>
  <data name="QiuDeadlyPatternExternalType1" xml:space="preserve">
    <value>Qiu's Deadly Pattern External Type 1</value>
  </data>
  <data name="QiuDeadlyPatternExternalType2" xml:space="preserve">
    <value>Qiu's Deadly Pattern External Type 2</value>
  </data>
  <data name="TechniqueFormat_QiuDeadlyPatternExternalType1Step" xml:space="preserve">
    <value>Cells {0} will be a deadly pattern if all digits {1} are false in cell {2}</value>
  </data>
  <data name="TechniqueFormat_QiuDeadlyPatternExternalType2Step" xml:space="preserve">
    <value>Cells {0} will be a deadly pattern if digit {1} is false in cells {2}</value>
  </data>
  <data name="AlmostLockedTripleValueType" xml:space="preserve">
    <value>Extended Almost Locked Triple</value>
  </data>
  <data name="AlmostLockedQuadrupleValueType" xml:space="preserve">
    <value>Extended Almost Locked Quadruple</value>
  </data>
  <data name="EndofinsAre" xml:space="preserve">
    <value>endofins are: {0}</value>
  </data>
  <data name="ExofinsAre" xml:space="preserve">
    <value>exofins are: {0}</value>
  </data>
  <data name="AntiGurthSymmetricalPlacement" xml:space="preserve">
    <value>Anti Gurth's Symmetrical Placement</value>
  </data>
  <data name="TechniqueFormat_AntiGurthSymmetricalPlacementStep" xml:space="preserve">
    <value>Due to being an asymmetrical grid pattern, initial grid will also be asymmetrical. Symmetry type: {0}, mapping relations: {1}</value>
  </data>
  <data name="XAxisSymmetry" xml:space="preserve">
    <value>X-Axis</value>
  </data>
  <data name="YAxisSymmetry" xml:space="preserve">
    <value>Y-Axis</value>
  </data>
  <data name="TechniqueGroup_AlignedExclusion" xml:space="preserve">
    <value>Aligned Exclusion</value>
  </data>
  <data name="TechniqueGroup_AlmostLockedCandidates" xml:space="preserve">
    <value>Almost Locked Candidates</value>
  </data>
  <data name="TechniqueGroup_AlmostLockedSetsChainingLike" xml:space="preserve">
    <value>Almost Locked Set</value>
  </data>
  <data name="TechniqueGroup_AlternatingInferenceChain" xml:space="preserve">
    <value>Alternating Inference Chain</value>
  </data>
  <data name="TechniqueGroup_AvoidableRectangle" xml:space="preserve">
    <value>Avoidable Rectangle</value>
  </data>
  <data name="TechniqueGroup_BivalueOddagon" xml:space="preserve">
    <value>Bi-value Oddagon</value>
  </data>
  <data name="TechniqueGroup_BivalueUniversalGrave" xml:space="preserve">
    <value>Bi-value Universal Grave</value>
  </data>
  <data name="TechniqueGroup_BlossomLoop" xml:space="preserve">
    <value>Blossom Loop</value>
  </data>
  <data name="TechniqueGroup_BorescoperDeadlyPattern" xml:space="preserve">
    <value>Borescoper's Deadly Pattern</value>
  </data>
  <data name="TechniqueGroup_BowmanBingo" xml:space="preserve">
    <value>Bowman's Bingo</value>
  </data>
  <data name="TechniqueGroup_BrokenWing" xml:space="preserve">
    <value>Guardian</value>
  </data>
  <data name="TechniqueGroup_BruteForce" xml:space="preserve">
    <value>Brute Force</value>
  </data>
  <data name="TechniqueGroup_ChromaticPattern" xml:space="preserve">
    <value>Chromatic Pattern</value>
  </data>
  <data name="TechniqueGroup_ComplexFish" xml:space="preserve">
    <value>Complex Fish</value>
  </data>
  <data name="TechniqueGroup_DeathBlossom" xml:space="preserve">
    <value>Death Blossom</value>
  </data>
  <data name="TechniqueGroup_DominoLoop" xml:space="preserve">
    <value>Domino Loop</value>
  </data>
  <data name="TechniqueGroup_EmptyRectangle" xml:space="preserve">
    <value>Empty Rectangle</value>
  </data>
  <data name="TechniqueGroup_EmptyRectangleIntersectionPair" xml:space="preserve">
    <value>Empty Rectangle Intersection Pair</value>
  </data>
  <data name="TechniqueGroup_Exocet" xml:space="preserve">
    <value>Exocet</value>
  </data>
  <data name="TechniqueGroup_ExtendedRectangle" xml:space="preserve">
    <value>Extended Rectangle</value>
  </data>
  <data name="TechniqueGroup_ExtendedSubsetPrinciple" xml:space="preserve">
    <value>Extended Subset Principle</value>
  </data>
  <data name="TechniqueGroup_Firework" xml:space="preserve">
    <value>Firework</value>
  </data>
  <data name="TechniqueGroup_ForcingChains" xml:space="preserve">
    <value>Forcing Chains</value>
  </data>
  <data name="TechniqueGroup_LockedCandidates" xml:space="preserve">
    <value>Locked Candidates</value>
  </data>
  <data name="TechniqueGroup_MultisectorLockedSets" xml:space="preserve">
    <value>Multi-sector Locked Set</value>
  </data>
  <data name="TechniqueGroup_NormalFish" xml:space="preserve">
    <value>Normal Fish</value>
  </data>
  <data name="TechniqueGroup_PatternOverlay" xml:space="preserve">
    <value>Pattern Overlay</value>
  </data>
  <data name="TechniqueGroup_QiuDeadlyPattern" xml:space="preserve">
    <value>Qiu's Deadly Pattern</value>
  </data>
  <data name="TechniqueGroup_RankTheory" xml:space="preserve">
    <value>Rank Theory</value>
  </data>
  <data name="TechniqueGroup_ReverseBivalueUniversalGrave" xml:space="preserve">
    <value>Reverse Bi-value Universal Grave</value>
  </data>
  <data name="TechniqueGroup_RwDeadlyPattern" xml:space="preserve">
    <value>RW's Deadly Pattern</value>
  </data>
  <data name="TechniqueGroup_Single" xml:space="preserve">
    <value>Single</value>
  </data>
  <data name="TechniqueGroup_SingleDigitPattern" xml:space="preserve">
    <value>Single-Digit Pattern</value>
  </data>
  <data name="TechniqueGroup_Subset" xml:space="preserve">
    <value>Subset</value>
  </data>
  <data name="TechniqueGroup_SueDeCoq" xml:space="preserve">
    <value>Sue de Coq</value>
  </data>
  <data name="TechniqueGroup_Symmetry" xml:space="preserve">
    <value>Symmetry</value>
  </data>
  <data name="TechniqueGroup_Templating" xml:space="preserve">
    <value>Templating</value>
  </data>
  <data name="TechniqueGroup_UniqueLoop" xml:space="preserve">
    <value>Unique Loop</value>
  </data>
  <data name="TechniqueGroup_UniqueMatrix" xml:space="preserve">
    <value>Unique Matrix</value>
  </data>
  <data name="TechniqueGroup_UniquenessClueCover" xml:space="preserve">
    <value>Uniqueness Clue Cover</value>
  </data>
  <data name="TechniqueGroup_UniqueRectangle" xml:space="preserve">
    <value>Unique Rectangle</value>
  </data>
  <data name="TechniqueGroup_RegularWing" xml:space="preserve">
    <value>Regular Wing</value>
  </data>
  <data name="TechniqueGroup_IrregularWing" xml:space="preserve">
    <value>Irregular Wing</value>
  </data>
  <data name="StepSearcherName_ExocetStepSearcher" xml:space="preserve">
    <value>Exocets</value>
  </data>
  <data name="JuniorExocetMirrorConjugatePair" xml:space="preserve">
    <value>Junior Exocet (Mirror Conjugate Pair)</value>
  </data>
  <data name="JuniorExocetAdjacentTarget" xml:space="preserve">
    <value>Junior Exocet (Adjacent Target)</value>
  </data>
  <data name="SeniorExocetMirrorConjugatePair" xml:space="preserve">
    <value>Senior Exocet (Mirror Conjugate Pair)</value>
  </data>
  <data name="JuniorExocetGeneralizedFish" xml:space="preserve">
    <value>Junior Exocet (Fish)</value>
  </data>
  <data name="JuniorExocetIncompatiblePair" xml:space="preserve">
    <value>Junior Exocet (Incompatible Pair)</value>
  </data>
  <data name="JuniorExocetTargetPair" xml:space="preserve">
    <value>Junior Exocet (Target Pair)</value>
  </data>
  <data name="ExtraDifficultyFactorNames_AlmostHiddenSet" xml:space="preserve">
    <value>Almost Hidden Set (AHS) logic</value>
  </data>
  <data name="JuniorExocetConjugatePair" xml:space="preserve">
    <value>Junior Exocet (Target Conjugate Pair)</value>
  </data>
  <data name="JuniorExocetMirrorAlmostHiddenSet" xml:space="preserve">
    <value>Junior Exocet (Mirror Alomst Hidden Set)</value>
  </data>
  <data name="ExtraDifficultyFactorNames_LockedMember" xml:space="preserve">
    <value>Locked member logic</value>
  </data>
  <data name="JuniorExocetLockedMember" xml:space="preserve">
    <value>Junior Exocet (Locked Member)</value>
  </data>
  <data name="SeniorExocetLockedMember" xml:space="preserve">
    <value>Senior Exocet (Locked Member)</value>
  </data>
  <data name="JuniorExocetMirrorSync" xml:space="preserve">
    <value>Junior Exocet (Mirror Sync)</value>
  </data>
  <data name="WeakExocet" xml:space="preserve">
    <value>Weak Exocet</value>
  </data>
  <data name="WeakExocetAdjacentTarget" xml:space="preserve">
    <value>Weak Exocet (Adjacent Target)</value>
  </data>
  <data name="ExtraDifficultyFactorNames_BzRectangle" xml:space="preserve">
    <value>B-Z rectangle</value>
  </data>
  <data name="ExtraDifficultyFactorNames_SlashElimination" xml:space="preserve">
    <value>Slash pattern</value>
  </data>
  <data name="WeakExocetBzRectangle" xml:space="preserve">
    <value>Weak Exocet (BZ Rectangle)</value>
  </data>
  <data name="WeakExocetSlash" xml:space="preserve">
    <value>Weak Exocet (Slash)</value>
  </data>
  <data name="ExtraDifficultyFactorNames_MissingStabilityBalancer" xml:space="preserve">
    <value>Missing stability balancer</value>
  </data>
  <data name="LameWeakExocet" xml:space="preserve">
    <value>Lame Weak Exocet</value>
  </data>
  <data name="DoubleExocet" xml:space="preserve">
    <value>Double Exocet</value>
  </data>
  <data name="FrankenJuniorExocet" xml:space="preserve">
    <value>Franken Junior Exocet</value>
  </data>
  <data name="FrankenSeniorExocet" xml:space="preserve">
    <value>Franken Senior Exocet</value>
  </data>
  <data name="MutantJuniorExocet" xml:space="preserve">
    <value>Mutant Junior Exocet</value>
  </data>
  <data name="MutantSeniorExocet" xml:space="preserve">
    <value>Mutant Senior Exocet</value>
  </data>
  <data name="PatternLockedQuadruple" xml:space="preserve">
    <value>Pattern-Locked Quadruple</value>
  </data>
  <data name="DoubleExocetGeneralizedFish" xml:space="preserve">
    <value>Double Exocet (Fish)</value>
  </data>
  <data name="FrankenJuniorExocetLockedMember" xml:space="preserve">
    <value>Franken Junior Exocet (Locked Member)</value>
  </data>
  <data name="FrankenSeniorExocetLockedMember" xml:space="preserve">
    <value>Franken Senior Exocet (Locked Member)</value>
  </data>
  <data name="MutantJuniorExocetLockedMember" xml:space="preserve">
    <value>Mutant Junior Exocet (Locked Member)</value>
  </data>
  <data name="MutantSeniorExocetLockedMember" xml:space="preserve">
    <value>Mutant Senior Exocet (Locked Member)</value>
  </data>
  <data name="FrankenSeniorExocetTargetExternalAlmostHiddenSet" xml:space="preserve">
    <value>Franken Senior Exocet (External Target AHS)</value>
  </data>
  <data name="AdvancedMutantSeniorExocet" xml:space="preserve">
    <value>Advanced Mutant Senior Exocet</value>
  </data>
  <data name="AdvancedFrankenSeniorExocet" xml:space="preserve">
    <value>Advanced Franken Senior Exocet</value>
  </data>
  <data name="FrankenJuniorExocetAdjacentTarget" xml:space="preserve">
    <value>Franken Junior Exocet (Adjacent Target)</value>
  </data>
  <data name="FrankenJuniorExocetMirrorConjugatePair" xml:space="preserve">
    <value>Franken Junior Exocet (Mirror Conjugate Pair)</value>
  </data>
  <data name="MutantJuniorExocetAdjacentTarget" xml:space="preserve">
    <value>Mutant Junior Exocet (Adjacent Target)</value>
  </data>
  <data name="MutantJuniorExocetMirrorConjugatePair" xml:space="preserve">
    <value>Mutant Junior Exocet (Mirror Conjugate Pair)</value>
  </data>
  <data name="ExtraDifficultyFactorNames_TrueBase" xml:space="preserve">
    <value>True base</value>
  </data>
  <data name="SeniorExocetTrueBase" xml:space="preserve">
    <value>Senior Exocet (True Base)</value>
  </data>
  <data name="XyzLoop" xml:space="preserve">
    <value>XYZ-Loop</value>
  </data>
  <data name="XyzNiceLoop" xml:space="preserve">
    <value>XYZ-Loop (Nice)</value>
  </data>
  <data name="StepSearcherName_XyzRingStepSearcher" xml:space="preserve">
    <value>XYZ-Ring</value>
  </data>
  <data name="GroupedXyzLoop" xml:space="preserve">
    <value>Grouped XYZ-Loop</value>
  </data>
  <data name="GroupedXyzNiceLoop" xml:space="preserve">
    <value>Grouped XYZ-Loop (Nice)</value>
  </data>
  <data name="CrosshatchingBlock" xml:space="preserve">
    <value>Crosshatching in Block</value>
  </data>
  <data name="CrosshatchingColumn" xml:space="preserve">
    <value>Crosshatching in Column</value>
  </data>
  <data name="CrosshatchingRow" xml:space="preserve">
    <value>Crosshatching in Row</value>
  </data>
  <data name="Single" xml:space="preserve">
    <value>Single</value>
  </data>
  <data name="ExtendedSubsetPrinciple" xml:space="preserve">
    <value>Extended Subset Principle</value>
  </data>
  <data name="TechniqueFormat_DeathBlossomStep" xml:space="preserve">
    <value>Pivot: {0}, Branches: {1}</value>
  </data>
  <data name="StepSearcherName_LawOfLeftoverStepSearcher" xml:space="preserve">
    <value>Law of Leftover</value>
  </data>
  <data name="LawOfLeftover" xml:space="preserve">
    <value>Law of Leftover</value>
  </data>
  <data name="TechniqueFormat_LawOfLeftoverStep" xml:space="preserve">
    <value>The filling digits from set {0} is equal to {1}</value>
  </data>
  <data name="NTimesAlmostLockedSetsDeathBlossom" xml:space="preserve">
    <value>Death Blossom (ALS Blooming)</value>
  </data>
  <data name="TechniqueFormat_NTimesAlmostLockedSetsDeathBlossomStep" xml:space="preserve">
    <value>Pivot: {0}-times ALS (cells: {1}, digits: {2}), branches: {3}</value>
  </data>
  <data name="HouseDeathBlossom" xml:space="preserve">
    <value>Death Blossom (House Blooming)</value>
  </data>
  <data name="TechniqueFormat_HouseDeathBlossomStep" xml:space="preserve">
    <value>House: {0}, Branches: {1}</value>
  </data>
  <data name="RectangleDeathBlossom" xml:space="preserve">
    <value>Death Blossom (Rectangle Blooming)</value>
  </data>
  <data name="TechniqueFormat_RectangleDeathBlossomStep" xml:space="preserve">
    <value>Rectangle cells: {0}, Branches: {1}</value>
  </data>
  <data name="StepSearcherName_ExtendedSubsetPrincipleStepSearcher" xml:space="preserve">
    <value>Extended Subset Principle</value>
  </data>
  <data name="SiameseGroupedXyzLoop" xml:space="preserve">
    <value>Siamese Grouped XYZ-Loop</value>
  </data>
  <data name="SiameseGroupedXyzNiceLoop" xml:space="preserve">
    <value>Siamese Grouped XYZ-Loop (Nice)</value>
  </data>
  <data name="SiameseXyzLoop" xml:space="preserve">
    <value>Siamese XYZ-Loop</value>
  </data>
  <data name="SiameseXyzNiceLoop" xml:space="preserve">
    <value>Siamese XYZ-Loop (Nice)</value>
  </data>
  <data name="TechniqueGroup_XyzRing" xml:space="preserve">
    <value>XYZ-Ring</value>
  </data>
  <data name="ExtraDifficultyFactorNames_IsGrouped" xml:space="preserve">
    <value>Grouped</value>
  </data>
  <data name="TechniqueFormat_MWingStep" xml:space="preserve">
    <value>Nodes {0} and {1} with XY cells {2} and {3}</value>
  </data>
  <data name="TechniqueFormat_SWingStep" xml:space="preserve">
    <value>Both strong links {0} and {1} connect with mid cell {2}</value>
  </data>
  <data name="TechniqueFormat_HWingStep" xml:space="preserve">
    <value>Strong link {0} connects with two cells {1}</value>
  </data>
  <data name="StepSearcherName_IrregularWingStepSearcher" xml:space="preserve">
    <value>Irregular Wing</value>
  </data>
  <data name="StepSearcherName_DirectIntersectionStepSearcher" xml:space="preserve">
    <value>Direct Intersection</value>
  </data>
  <data name="PointingCrosshatchingBlock" xml:space="preserve">
    <value>Pointing Crosshatching in Block</value>
  </data>
  <data name="PointingCrosshatchingColumn" xml:space="preserve">
    <value>Pointing Crosshatching in Column</value>
  </data>
  <data name="PointingCrosshatchingRow" xml:space="preserve">
    <value>Pointing Crosshatching in Row</value>
  </data>
  <data name="PointingFullHouse" xml:space="preserve">
    <value>Pointing Full House</value>
  </data>
  <data name="PointingNakedSingle" xml:space="preserve">
    <value>Pointing Naked Single</value>
  </data>
  <data name="ClaimingCrosshatchingBlock" xml:space="preserve">
    <value>Claiming Crosshatching in Block</value>
  </data>
  <data name="ClaimingCrosshatchingColumn" xml:space="preserve">
    <value>Claiming Crosshatching in Column</value>
  </data>
  <data name="ClaimingCrosshatchingRow" xml:space="preserve">
    <value>Claiming Crosshatching in Row</value>
  </data>
  <data name="ClaimingFullHouse" xml:space="preserve">
    <value>Claiming Full House</value>
  </data>
  <data name="ClaimingNakedSingle" xml:space="preserve">
    <value>Claiming Naked Single</value>
  </data>
  <data name="TechniqueGroup_ComplexSingle" xml:space="preserve">
    <value>Complex Single</value>
  </data>
  <data name="TechniqueFormat_DirectIntersectionStep" xml:space="preserve">
    <value>Cells {0} is formed a locked candidates in {1}, then {2} cannot be filled with digit {3}, so the {4} is formed</value>
  </data>
  <data name="StepSearcherName_DirectSubsetStepSearcher" xml:space="preserve">
    <value>Direct Subset</value>
  </data>
  <data name="NakedPairFullHouse" xml:space="preserve">
    <value>Naked Pair Full House</value>
  </data>
  <data name="NakedPairPlusFullHouse" xml:space="preserve">
    <value>Naked Pair (+) Full House</value>
  </data>
  <data name="HiddenPairFullHouse" xml:space="preserve">
    <value>Hidden Pair Full House</value>
  </data>
  <data name="LockedPairFullHouse" xml:space="preserve">
    <value>Locked Pair Full House</value>
  </data>
  <data name="LockedHiddenPairFullHouse" xml:space="preserve">
    <value>Locked Hidden Pair Full House</value>
  </data>
  <data name="NakedTripleFullHouse" xml:space="preserve">
    <value>Naked Triple Full House</value>
  </data>
  <data name="NakedTriplePlusFullHouse" xml:space="preserve">
    <value>Naked Triple (+) Full House</value>
  </data>
  <data name="HiddenTripleFullHouse" xml:space="preserve">
    <value>Hidden Triple Full House</value>
  </data>
  <data name="LockedTripleFullHouse" xml:space="preserve">
    <value>Locked Triple Full House</value>
  </data>
  <data name="LockedHiddenTripleFullHouse" xml:space="preserve">
    <value>Locked Hidden Triple Full House</value>
  </data>
  <data name="NakedQuadrupleFullHouse" xml:space="preserve">
    <value>Naked Quadruple Full House</value>
  </data>
  <data name="NakedQuadruplePlusFullHouse" xml:space="preserve">
    <value>Naked Quadruple (+) Full House</value>
  </data>
  <data name="HiddenQuadrupleFullHouse" xml:space="preserve">
    <value>Hidden Quadruple Full House</value>
  </data>
  <data name="NakedPairCrosshatchingBlock" xml:space="preserve">
    <value>Naked Pair Crosshatching Block</value>
  </data>
  <data name="NakedPairPlusCrosshatchingBlock" xml:space="preserve">
    <value>Naked Pair (+) Crosshatching Block</value>
  </data>
  <data name="HiddenPairCrosshatchingBlock" xml:space="preserve">
    <value>Hidden Pair Crosshatching Block</value>
  </data>
  <data name="LockedPairCrosshatchingBlock" xml:space="preserve">
    <value>Locked Pair Crosshatching Block</value>
  </data>
  <data name="LockedHiddenPairCrosshatchingBlock" xml:space="preserve">
    <value>Locked Hidden Pair Crosshatching Block</value>
  </data>
  <data name="NakedTripleCrosshatchingBlock" xml:space="preserve">
    <value>Naked Triple Crosshatching Block</value>
  </data>
  <data name="NakedTriplePlusCrosshatchingBlock" xml:space="preserve">
    <value>Naked Triple (+) Crosshatching Block</value>
  </data>
  <data name="HiddenTripleCrosshatchingBlock" xml:space="preserve">
    <value>Hidden Triple Crosshatching Block</value>
  </data>
  <data name="LockedTripleCrosshatchingBlock" xml:space="preserve">
    <value>Locked Triple Crosshatching Block</value>
  </data>
  <data name="LockedHiddenTripleCrosshatchingBlock" xml:space="preserve">
    <value>Locked Hidden Triple Crosshatching Block</value>
  </data>
  <data name="NakedQuadrupleCrosshatchingBlock" xml:space="preserve">
    <value>Naked Quadruple Crosshatching Block</value>
  </data>
  <data name="NakedQuadruplePlusCrosshatchingBlock" xml:space="preserve">
    <value>Naked Quadruple (+) Crosshatching Block</value>
  </data>
  <data name="HiddenQuadrupleCrosshatchingBlock" xml:space="preserve">
    <value>Hidden Quadruple Crosshatching Block</value>
  </data>
  <data name="NakedPairCrosshatchingRow" xml:space="preserve">
    <value>Naked Pair Crosshatching Row</value>
  </data>
  <data name="NakedPairPlusCrosshatchingRow" xml:space="preserve">
    <value>Naked Pair (+) Crosshatching Row</value>
  </data>
  <data name="HiddenPairCrosshatchingRow" xml:space="preserve">
    <value>Hidden Pair Crosshatching Row</value>
  </data>
  <data name="LockedPairCrosshatchingRow" xml:space="preserve">
    <value>Locked Pair Crosshatching Row</value>
  </data>
  <data name="LockedHiddenPairCrosshatchingRow" xml:space="preserve">
    <value>Locked Hidden Pair Crosshatching Row</value>
  </data>
  <data name="NakedTripleCrosshatchingRow" xml:space="preserve">
    <value>Naked Triple Crosshatching Row</value>
  </data>
  <data name="NakedTriplePlusCrosshatchingRow" xml:space="preserve">
    <value>Naked Triple (+) Crosshatching Row</value>
  </data>
  <data name="HiddenTripleCrosshatchingRow" xml:space="preserve">
    <value>Hidden Triple Crosshatching Row</value>
  </data>
  <data name="LockedTripleCrosshatchingRow" xml:space="preserve">
    <value>Locked Triple Crosshatching Row</value>
  </data>
  <data name="LockedHiddenTripleCrosshatchingRow" xml:space="preserve">
    <value>Locked Hidden Triple Crosshatching Row</value>
  </data>
  <data name="NakedQuadrupleCrosshatchingRow" xml:space="preserve">
    <value>Naked Quadruple Crosshatching Row</value>
  </data>
  <data name="NakedQuadruplePlusCrosshatchingRow" xml:space="preserve">
    <value>Naked Quadruple (+) Crosshatching Row</value>
  </data>
  <data name="HiddenQuadrupleCrosshatchingRow" xml:space="preserve">
    <value>Hidden Quadruple Crosshatching Row</value>
  </data>
  <data name="NakedPairCrosshatchingColumn" xml:space="preserve">
    <value>Naked Pair Crosshatching Column</value>
  </data>
  <data name="NakedPairPlusCrosshatchingColumn" xml:space="preserve">
    <value>Naked Pair (+) Crosshatching Column</value>
  </data>
  <data name="HiddenPairCrosshatchingColumn" xml:space="preserve">
    <value>Hidden Pair Crosshatching Column</value>
  </data>
  <data name="LockedPairCrosshatchingColumn" xml:space="preserve">
    <value>Locked Pair Crosshatching Column</value>
  </data>
  <data name="LockedHiddenPairCrosshatchingColumn" xml:space="preserve">
    <value>Locked Hidden Pair Crosshatching Column</value>
  </data>
  <data name="NakedTripleCrosshatchingColumn" xml:space="preserve">
    <value>Naked Triple Crosshatching Column</value>
  </data>
  <data name="NakedTriplePlusCrosshatchingColumn" xml:space="preserve">
    <value>Naked Triple (+) Crosshatching Column</value>
  </data>
  <data name="HiddenTripleCrosshatchingColumn" xml:space="preserve">
    <value>Hidden Triple Crosshatching Column</value>
  </data>
  <data name="LockedTripleCrosshatchingColumn" xml:space="preserve">
    <value>Locked Triple Crosshatching Column</value>
  </data>
  <data name="LockedHiddenTripleCrosshatchingColumn" xml:space="preserve">
    <value>Locked Hidden Triple Crosshatching Column</value>
  </data>
  <data name="NakedQuadrupleCrosshatchingColumn" xml:space="preserve">
    <value>Naked Quadruple Crosshatching Column</value>
  </data>
  <data name="NakedQuadruplePlusCrosshatchingColumn" xml:space="preserve">
    <value>Naked Quadruple (+) Crosshatching Column</value>
  </data>
  <data name="HiddenQuadrupleCrosshatchingColumn" xml:space="preserve">
    <value>Hidden Quadruple Crosshatching Column</value>
  </data>
  <data name="NakedPairNakedSingle" xml:space="preserve">
    <value>Naked Pair Naked Single</value>
  </data>
  <data name="NakedPairPlusNakedSingle" xml:space="preserve">
    <value>Naked Pair (+) Naked Single</value>
  </data>
  <data name="HiddenPairNakedSingle" xml:space="preserve">
    <value>Hidden Pair Naked Single</value>
  </data>
  <data name="LockedPairNakedSingle" xml:space="preserve">
    <value>Locked Pair Naked Single</value>
  </data>
  <data name="LockedHiddenPairNakedSingle" xml:space="preserve">
    <value>Locked Hidden Pair Naked Single</value>
  </data>
  <data name="NakedTripleNakedSingle" xml:space="preserve">
    <value>Naked Triple Naked Single</value>
  </data>
  <data name="NakedTriplePlusNakedSingle" xml:space="preserve">
    <value>Naked Triple (+) Naked Single</value>
  </data>
  <data name="HiddenTripleNakedSingle" xml:space="preserve">
    <value>Hidden Triple Naked Single</value>
  </data>
  <data name="LockedTripleNakedSingle" xml:space="preserve">
    <value>Locked Triple Naked Single</value>
  </data>
  <data name="LockedHiddenTripleNakedSingle" xml:space="preserve">
    <value>Locked Hidden Triple Naked Single</value>
  </data>
  <data name="NakedQuadrupleNakedSingle" xml:space="preserve">
    <value>Naked Quadruple Naked Single</value>
  </data>
  <data name="NakedQuadruplePlusNakedSingle" xml:space="preserve">
    <value>Naked Quadruple (+) Naked Single</value>
  </data>
  <data name="HiddenQuadrupleNakedSingle" xml:space="preserve">
    <value>Hidden Quadruple Naked Single</value>
  </data>
  <data name="TechniqueFormat_DirectSubsetStep" xml:space="preserve">
    <value>Cells {0} is formed a {6} in {1} of digits {5}, then {2} cannot be filled with digit {3}, so the {4} is formed</value>
  </data>
  <data name="ErrorInfo_ModeIsUndefined" xml:space="preserve">
    <value>The property value 'Collector.DifficultyLevelMode' is undefined.</value>
  </data>
  <data name="ErrorInfo_ComplexSingleNotSupportedToday" xml:space="preserve">
    <value>The group of indirect technique field is neither locked candidates nor subset, which is not supported today. In future, the field might be expanded to wider, and this value might be available.</value>
  </data>
  <data name="ErrorInfo_TechniqueLevelCannotBeDetermined" xml:space="preserve">
    <value>The target level is unknown. If you see this exception thrown, please append 'Sudoku.Analytics.Categorization.DifficultyLevelAttribute' to the target technique code field defined in type 'Sudoku.Analytics.Categorization.Technique'.</value>
  </data>
  <data name="ErrorInfo_GridIsInvalidOrSolved" xml:space="preserve">
    <value>The value is invalid or solved.</value>
  </data>
  <data name="ErrorInfo_GridAlreadySolved" xml:space="preserve">
    <value>This puzzle has already been solved.</value>
  </data>
  <data name="ErrorInfo_StepContainsNoConclusions" xml:space="preserve">
    <value>The step doesn't contain any conclusions, which is disallowed in API. Please report the message to the author.</value>
  </data>
  <data name="ErrorInfo_ChainMemberNotOverridden" xml:space="preserve">
    <value>The target type of the chain is not supported. You should override this property for that type.</value>
  </data>
  <data name="ErrorInfo_SubsetSizeExceeds" xml:space="preserve">
    <value>The subset is too complex to be calculated.</value>
  </data>
  <data name="ErrorInfo_ParentNotFoundInChain" xml:space="preserve">
    <value>Parent not found.</value>
  </data>
  <data name="ErrorInfo_SashimiPropertyInvalid" xml:space="preserve">
    <value>Sashimi property is invalid.</value>
  </data>
  <data name="ErrorInfo_ComplexFishCannotBeNormal" xml:space="preserve">
    <value>A complex fish cannot hold a normal shape kind.</value>
  </data>
  <data name="ErrorInfo_NormalFishViewInvalid" xml:space="preserve">
    <value>The view in the second fish is invalid.</value>
  </data>
  <data name="ErrorInfo_TooMuchAttributes" xml:space="preserve">
    <value>The field has marked too much attributes.</value>
  </data>
  <data name="ErrorInfo_AlsMissingCellsInTargetHouse" xml:space="preserve">
    <value>Missing cells or target house.</value>
  </data>
  <data name="ErrorInfo_AlsMissingSlash" xml:space="preserve">
    <value>The ALS notation must contain only 1 slash character.</value>
  </data>
  <data name="ErrorInfo_ChainNodeDataInvalid" xml:space="preserve">
    <value>The specified node with suitable data is not found.</value>
  </data>
  <data name="ErrorInfo_GridMustBeSolved" xml:space="preserve">
    <value>The puzzle must have been solved before you consume this member.</value>
  </data>
  <data name="ErrorInfo_FilteringExpressionNotSupported" xml:space="preserve">
    <value>The specified match is not supported to be replaced.</value>
  </data>
  <data name="Easy" xml:space="preserve">
    <value>Easy</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="Moderate" xml:space="preserve">
    <value>Moderate</value>
  </data>
  <data name="Hard" xml:space="preserve">
    <value>Hard</value>
  </data>
  <data name="Fiendish" xml:space="preserve">
    <value>Fiendish</value>
  </data>
  <data name="Nightmare" xml:space="preserve">
    <value>Nightmare</value>
  </data>
  <data name="LastResort" xml:space="preserve">
    <value>Last Resort</value>
  </data>
  <data name="Message_WrongStepException" xml:space="preserve">
    <value>The step may exist bug that causes the wrong handling.
Current grid: '{0:#}'
Current step: '{1}'</value>
  </data>
  <data name="Message_PuzzleInvalidException" xml:space="preserve">
    <value>Unexpected error thrown. This exception may be thrown if the puzzle is invalid.
Error grid: '{0:#}'</value>
  </data>
  <data name="Message_MissingDifficultyLevelException" xml:space="preserve">
    <value>The member '{0}' is missing difficulty level attribute.</value>
  </data>
  <data name="Message_MissingTechniqueGroupException" xml:space="preserve">
    <value>The member '{0}' is missing technique group attribute.</value>
  </data>
  <data name="SingleTechnique_HiddenSingle" xml:space="preserve">
    <value>Hidden Single</value>
  </data>
  <data name="SingleTechnique_NakedSingle" xml:space="preserve">
    <value>Naked Single</value>
  </data>
  <data name="CountBetweenConstraint" xml:space="preserve">
    <value>Count between rule: {0} should be between {1} and {2}, {3}</value>
  </data>
  <data name="GivenCell" xml:space="preserve">
    <value>Number of given cells</value>
  </data>
  <data name="EmptyCell" xml:space="preserve">
    <value>Number of empty cells</value>
  </data>
  <data name="BothOpen" xml:space="preserve">
    <value>both side open</value>
  </data>
  <data name="LeftOpen" xml:space="preserve">
    <value>only left open</value>
  </data>
  <data name="RightOpen" xml:space="preserve">
    <value>only right open</value>
  </data>
  <data name="BothClosed" xml:space="preserve">
    <value>both side closed</value>
  </data>
  <data name="DifficultyLevelConstraint" xml:space="preserve">
    <value>Difficulty level rule: {0} {1} ({2})</value>
  </data>
  <data name="_Token_Comma" xml:space="preserve">
    <value>, </value>
  </data>
  <data name="IttoryuConstraint" xml:space="preserve">
    <value>Ittoryu rule: finish puzzle with {0} {1} rounds</value>
  </data>
  <data name="IttoryuLengthConstraint" xml:space="preserve">
    <value>Ittoryu length rule: {0} {1} consecutively-finished digits</value>
  </data>
  <data name="MinimalConstraint" xml:space="preserve">
    <value>Minimal rule: should {0}be a minimal puzzle</value>
  </data>
  <data name="NoString" xml:space="preserve">
    <value>not </value>
  </data>
  <data name="PearlOrDiamondConstraint" xml:space="preserve">
    <value>{0} rule: should {1}be a {2} puzzle</value>
  </data>
  <data name="PearlString" xml:space="preserve">
    <value>pearl</value>
  </data>
  <data name="DiamondString" xml:space="preserve">
    <value>diamond</value>
  </data>
  <data name="SymmetryConstraint" xml:space="preserve">
    <value>Symmetry rule: {0}</value>
  </data>
  <data name="TechniqueConstraint" xml:space="preserve">
    <value>Technique rule: {0}</value>
  </data>
  <data name="TechniqueCountConstraint" xml:space="preserve">
    <value>Technique appearing times rule: {0} appears {1} {2} time(s)</value>
  </data>
  <data name="ConclusionConstraint" xml:space="preserve">
    <value>Conclusion count rule: conclusion {0} should {1}appear</value>
  </data>
  <data name="NounPluralSuffix" xml:space="preserve">
    <value>s</value>
  </data>
  <data name="PrimarySingleConstraint" xml:space="preserve">
    <value>Single rule: {0} is primary technique, Hidden Single in rows or columns {1}included</value>
  </data>
  <data name="EliminationCountConstraint" xml:space="preserve">
    <value>Elimination count rule: a {3} step must contain {0} {1} elimination{2}</value>
  </data>
  <data name="UniqueRectangleBurredSubset" xml:space="preserve">
    <value>Unique Rectangle Burred Subset</value>
  </data>
  <data name="TechniqueFormat_UniqueRectangleBurredSubsetStep" xml:space="preserve">
    <value>Either a UR in cells {0} of digits {1} forms, or a subset in cells {2} of digits {3} forms</value>
  </data>
  <data name="ErrorInfo_SudokuExplainerAttributeInvalidRating" xml:space="preserve">
    <value>Cannot call setter 'Rating.set' because the property 'Rating' has an invalid value that cannot return with only one value.</value>
  </data>
  <data name="SymmetryConstraint_NoSymmetrySelected" xml:space="preserve">
    <value>&lt;None Selected&gt;</value>
  </data>
  <data name="ErrorInfo_ArgumentMustBeSingle" xml:space="preserve">
    <value>The argument must be a single.</value>
  </data>
  <data name="GeneratedPuzzleConstraintPage_HighestSingleTechnique" xml:space="preserve">
    <value>Highest technique:</value>
  </data>
  <data name="ErrorInfo_TechniqueIsNotImplemented" xml:space="preserve">
    <value>The current technique is not implemented.</value>
  </data>
  <data name="BottleneckStepRatingConstraint" xml:space="preserve">
    <value>Bottleneck rating: rating of bottleneck step should be between {0} and {1}, {2}</value>
  </data>
  <data name="BottleneckTechniqueConstraint" xml:space="preserve">
    <value>Bottleneck technique: Bottleneck must be any one of technique set {0}.</value>
  </data>
  <data name="ErrorInfo_LengthMustBeSame" xml:space="preserve">
    <value>The length of arguments '{0}' and '{1}' must be same.</value>
  </data>
  <data name="LastingConstraint" xml:space="preserve">
    <value>Lasting: a {0} must hold a lasting of {1} {2} empty cells</value>
  </data>
  <data name="Factor_HiddenSubsetIsLockedFactor" xml:space="preserve">
    <value>Locked type in hidden subset</value>
  </data>
  <data name="Factor_NakedSubsetIsLockedFactor" xml:space="preserve">
    <value>Locked type in naked subset</value>
  </data>
  <data name="Factor_NakedSubsetSizeFactor" xml:space="preserve">
    <value>Size in naked subset</value>
  </data>
  <data name="Factor_HiddenSubsetSizeFactor" xml:space="preserve">
    <value>Size in hidden subset</value>
  </data>
  <data name="ErrorInfo_ScaleValueCannotBeNegative" xml:space="preserve">
    <value>Scale value cannot be negative.</value>
  </data>
  <data name="ErrorInfo_TechiqueIsNotSupported" xml:space="preserve">
    <value>The specified technique is not supported.</value>
  </data>
  <data name="Factor_AlmostLockedCandidatesSizeFactor" xml:space="preserve">
    <value>Size in almost locked candidates</value>
  </data>
  <data name="Factor_AlmostLockedCandidatesValueCellExistenceFactor" xml:space="preserve">
    <value>Value cell existence in almost locked candidates</value>
  </data>
  <data name="Factor_BasicChainLengthFactor" xml:space="preserve">
    <value>Length in chains</value>
  </data>
  <data name="Factor_BasicDeathBlossomPetalsCountFactor" xml:space="preserve">
    <value>The number of petals in death blossom</value>
  </data>
  <data name="Factor_BivalueOddagonLengthFactor" xml:space="preserve">
    <value>Length in bi-value oddagon</value>
  </data>
  <data name="Factor_BivalueOddagonSubsetSizeFactor" xml:space="preserve">
    <value>Size of subset in bi-value oddagon</value>
  </data>
  <data name="Factor_BlossomLoopLengthFactor" xml:space="preserve">
    <value>Length of blossom loop</value>
  </data>
  <data name="Factor_ExtendedSubsetPrincipleSizeFactor" xml:space="preserve">
    <value>Size of extended subset principle</value>
  </data>
  <data name="Factor_HouseDeathBlossomPetalsCountFactor" xml:space="preserve">
    <value>The number of petals in death blossom (house type)</value>
  </data>
  <data name="Factor_NTimesAlmostLockedSetsDeathBlossomPetalsCountFactor" xml:space="preserve">
    <value>The number of petals in death blossom (A^nLS type)</value>
  </data>
  <data name="Factor_RectangleDeathBlossomIsAvoidableFactor" xml:space="preserve">
    <value>Death blossom (rectangle type) uses avoidable rectangle</value>
  </data>
  <data name="Factor_RectangleDeathBlossomPetalsCountFactor" xml:space="preserve">
    <value>The number of petals in death blossom (rectangle type)</value>
  </data>
  <data name="Factor_ComplexFishCannibalismFactor" xml:space="preserve">
    <value>Cannibalism in complex fish</value>
  </data>
  <data name="Factor_ComplexFishIsSashimiFactor" xml:space="preserve">
    <value>Sashimi in complex fish</value>
  </data>
  <data name="Factor_ComplexFishShapeFactor" xml:space="preserve">
    <value>Shape of complex fish</value>
  </data>
  <data name="Factor_ComplexFishSizeFactor" xml:space="preserve">
    <value>Size of complex fish</value>
  </data>
  <data name="Factor_GuardianFactor" xml:space="preserve">
    <value>Guardian</value>
  </data>
  <data name="Factor_IrregularWingIsGroupedFactor" xml:space="preserve">
    <value>Irregular wing is grouped</value>
  </data>
  <data name="Factor_MultiBranchWWingBranchesCountFactor" xml:space="preserve">
    <value>The number of branches in W-Wing</value>
  </data>
  <data name="Factor_NormalFishIsSashimiFactor" xml:space="preserve">
    <value>Sashimi in normal fish</value>
  </data>
  <data name="Factor_NormalFishSizeFactor" xml:space="preserve">
    <value>Size of normal fish</value>
  </data>
  <data name="Factor_RegularWingIncompletenessFactor" xml:space="preserve">
    <value>Incompleteness of regular wing</value>
  </data>
  <data name="Factor_RegularWingSizeFactor" xml:space="preserve">
    <value>Size of regular wing</value>
  </data>
  <data name="Factor_SueDeCoqCannibalismFactor" xml:space="preserve">
    <value>Cannibalism in Sue de Coq</value>
  </data>
  <data name="Factor_SueDeCoqIsolatedFactor" xml:space="preserve">
    <value>Isolated digits in Sue de Coq</value>
  </data>
  <data name="Factor_BivalueUniversalGraveSubsetIsHiddenFactor" xml:space="preserve">
    <value>Subset in Bi-value universal grave is hidden</value>
  </data>
  <data name="Factor_BivalueUniversalGraveSubsetSizeFactor" xml:space="preserve">
    <value>Subset size of bi-value universal grave</value>
  </data>
  <data name="Factor_BorescoperDeadlyPatternSubsetSizeFactor" xml:space="preserve">
    <value>Subset size of Borescoper's deadly pattern</value>
  </data>
  <data name="Factor_BowmanBingoLengthFactor" xml:space="preserve">
    <value>Length of Bowman's bingo</value>
  </data>
  <data name="Factor_DirectSubsetIsLockedFactor" xml:space="preserve">
    <value>Subset in direct subset is locked</value>
  </data>
  <data name="Factor_DirectSubsetSizeFactor" xml:space="preserve">
    <value>Subset size in direct subset</value>
  </data>
  <data name="Factor_ExtendedRectangleSizeFactor" xml:space="preserve">
    <value>Size of extended rectangle</value>
  </data>
  <data name="Factor_ExtendedRectangleSubsetSizeFactor" xml:space="preserve">
    <value>Subset size in extended rectangle</value>
  </data>
  <data name="Factor_QiuDeadlyPatternSubsetSizeFactor" xml:space="preserve">
    <value>Subset size in Qiu's deadly pattern</value>
  </data>
  <data name="Factor_ReverseBivalueUniversalGraveSizeFactor" xml:space="preserve">
    <value>Size of reverse bi-value universal grave</value>
  </data>
  <data name="Factor_UniqueLoopLengthFactor" xml:space="preserve">
    <value>Length of unique loop</value>
  </data>
  <data name="Factor_UniqueLoopSubsetSizeFactor" xml:space="preserve">
    <value>Subset size in unique loop</value>
  </data>
  <data name="Factor_UniqueMatrixSubsetSizeFactor" xml:space="preserve">
    <value>Subset size in unique matrix</value>
  </data>
  <data name="Factor_UniquenessClueCoverExtraCellsFactor" xml:space="preserve">
    <value>The number of extra cells used in uniqueness clue cover</value>
  </data>
  <data name="Factor_UniqueRectangleSubsetIsHiddenFactor" xml:space="preserve">
    <value>Subset in unique rectangle is hidden</value>
  </data>
  <data name="Factor_UniqueRectangleSubsetSizeFactor" xml:space="preserve">
    <value>Subset size in unique rectangle</value>
  </data>
  <data name="Factor_MultisectorLockedSetsSizeFactor" xml:space="preserve">
    <value>Size of multi-sector locked set</value>
  </data>
  <data name="Factor_RectangleIsAvoidableFactor" xml:space="preserve">
    <value>Rectangle is avoidable</value>
  </data>
  <data name="Factor_UniqueRectangleExternalGuardianFactor" xml:space="preserve">
    <value>Guardians in unique rectangle</value>
  </data>
  <data name="Factor_UniqueRectangleExternalSubsetSizeFactor" xml:space="preserve">
    <value>Subset size in unique rectangle</value>
  </data>
  <data name="Factor_UniqueRectangleExternalType3IsIncompleteFactor" xml:space="preserve">
    <value>Rectangle is incomplete</value>
  </data>
  <data name="Factor_UniqueRectangleExternalType4IsIncompleteFactor" xml:space="preserve">
    <value>Rectangle is incomplete</value>
  </data>
  <data name="Factor_UniqueRectangleExternalType1Or2IsIncompleteFactor" xml:space="preserve">
    <value>Rectangle is incomplete</value>
  </data>
  <data name="Factor_BivalueUniversalGraveTrueCandidateFactor" xml:space="preserve">
    <value>Number of true candidates</value>
  </data>
  <data name="Factor_RectangleConjugatePairsCountFactor" xml:space="preserve">
    <value>Number of conjugate pairs appeared in rectangle</value>
  </data>
  <data name="Factor_RectangleSueDeCoqCannibalismFactor" xml:space="preserve">
    <value>Sue de Coq in rectangle is cannibalism</value>
  </data>
  <data name="Factor_UniqueRectangleBurredSubsetSizeFactor" xml:space="preserve">
    <value>Burred subset size in unique rectangle</value>
  </data>
  <data name="Factor_RectangleSueDeCoqIsolatedFactor" xml:space="preserve">
    <value>Sue de Coq appeared in rectangle contains isolated digits</value>
  </data>
  <data name="Factor_UniqueRectangleExternalAlmostLockedSetsXzGuardianFactor" xml:space="preserve">
    <value>Guardians in rectangle</value>
  </data>
  <data name="Factor_UniqueRectangleExternalAlmostLockedSetsXzGuardianIsIncompleteFactor" xml:space="preserve">
    <value>Rectangle is incomplete</value>
  </data>
  <data name="Factor_UniqueRectangleExternalTurbotFishGuardianFactor" xml:space="preserve">
    <value>Guardians in rectangle</value>
  </data>
  <data name="Factor_UniqueRectangleExternalTurbotFishIsIncompleteFactor" xml:space="preserve">
    <value>Rectangle is incomplete</value>
  </data>
  <data name="Factor_UniqueRectangleExternalType1Or2GuardianFactor" xml:space="preserve">
    <value>Guardians in rectangle</value>
  </data>
  <data name="Factor_UniqueRectangleExternalWWingGuardianFactor" xml:space="preserve">
    <value>Guardians in rectangle</value>
  </data>
  <data name="Factor_UniqueRectangleExternalWWingIsCompleteFactor" xml:space="preserve">
    <value>Rectangle is incomplete</value>
  </data>
  <data name="Factor_UniqueRectangleExternalXyWingGuardianFactor" xml:space="preserve">
    <value>Guardians in rectangle</value>
  </data>
  <data name="Factor_UniqueRectangleExternalXyWingIsCompleteFactor" xml:space="preserve">
    <value>Rectangle is incomplete</value>
  </data>
  <data name="Factor_UniqueRectangleWingSizeFactor" xml:space="preserve">
    <value>Wing size in unique rectangle</value>
  </data>
  <data name="Factor_ExocetAlmostHiddenSetSizeFactor" xml:space="preserve">
    <value>Size of almost hidden subset in exocet</value>
  </data>
  <data name="Factor_ExocetConjugatePairsCountFactor" xml:space="preserve">
    <value>Number of conjugate pairs used in exocet</value>
  </data>
  <data name="Factor_BivalueUniversalGraveType2TrueCandidateFactor" xml:space="preserve">
    <value>Number of true candidates</value>
  </data>
  <data name="Factor_BivalueUniversalGraveMultipleTrueCandidateFactor" xml:space="preserve">
    <value>Number of true candidates</value>
  </data>
  <data name="_Token_Colon" xml:space="preserve">
    <value>: </value>
  </data>
  <data name="ExtendedRectangleType3Cannibalism" xml:space="preserve">
    <value>Extended Rectangle Type 3 (Cannibalism)</value>
  </data>
  <data name="Factor_ExtendedRectangleCannibalismFactor" xml:space="preserve">
    <value>Subset in extended rectangle is cannibalism</value>
  </data>
  <data name="StepSearcherName_ComplexSingleStepSearcher" xml:space="preserve">
    <value>Complex Single</value>
  </data>
  <data name="ComplexFullHouse" xml:space="preserve">
    <value>Complex Full House</value>
  </data>
  <data name="ComplexCrosshatchingBlock" xml:space="preserve">
    <value>Complex Crosshatching in Block</value>
  </data>
  <data name="ComplexCrosshatchingRow" xml:space="preserve">
    <value>Complex Crosshatching in Row</value>
  </data>
  <data name="ComplexCrosshatchingColumn" xml:space="preserve">
    <value>Complex Crosshatching in Column</value>
  </data>
  <data name="ComplexNakedSingle" xml:space="preserve">
    <value>Complex Naked Single</value>
  </data>
  <data name="Factor_ComplexSingleFactor" xml:space="preserve">
    <value>Complex single</value>
  </data>
  <data name="Concept_LockedCandidates" xml:space="preserve">
    <value>Locked Candidates</value>
  </data>
  <data name="Concept_Subset" xml:space="preserve">
    <value>Subset</value>
  </data>
  <data name="TechniqueFormat_ComplexSingleStep" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="TechniqueSetConstraint" xml:space="preserve">
    <value>Technique sets: a puzzle can be solved by using only techniques {0}</value>
  </data>
  <data name="ErrorInfo_LengthMustBeAnEven" xml:space="preserve">
    <value>The length of argument must be an even number.</value>
  </data>
  <data name="ErrorInfo_LengthExceeded" xml:space="preserve">
    <value>The length is exceeded. The limit value is '{0}'.</value>
  </data>
  <data name="StepSearcherName_ChainStepSearcher" xml:space="preserve">
    <value>Chain</value>
  </data>
  <data name="SelfConstraint" xml:space="preserve">
    <value>Self Constraint</value>
  </data>
  <data name="GroupedSelfConstraint" xml:space="preserve">
    <value>Grouped Self Constraint</value>
  </data>
  <data name="TechniqueFormat_NormalChainStep" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="Factor_ChainLengthFactor" xml:space="preserve">
    <value>Length of chain</value>
  </data>
  <data name="Factor_ChainGroupedFactor" xml:space="preserve">
    <value>Chain contains grouped nodes</value>
  </data>
  <data name="StepSearcherName_GroupedChainStepSearcher" xml:space="preserve">
    <value>Grouped Chains</value>
  </data>
  <data name="Factor_ChainGroupedNodeFactor" xml:space="preserve">
    <value>Grouped nodes in chain</value>
  </data>
  <data name="TechniqueGroup_PatternConstruction" xml:space="preserve">
    <value>Pattern Constructions</value>
  </data>
  <data name="StepSearcherName_MultipleForcingChainsStepSearcher" xml:space="preserve">
    <value>Multiple Forcing Chains</value>
  </data>
  <data name="TechniqueFormat_MultipleForcingChainsStep" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="Factor_MultipleForcingChainsGroupedFactor" xml:space="preserve">
    <value>Multiple forcing chains contains grouped nodes</value>
  </data>
  <data name="Factor_MultipleForcingChainsGroupedNodeFactor" xml:space="preserve">
    <value>Grouped nodes in multiple forcing chains</value>
  </data>
  <data name="Factor_MultipleForcingChainsLengthFactor" xml:space="preserve">
    <value>Length of multiple forcing chains</value>
  </data>
  <data name="FinnedChain" xml:space="preserve">
    <value>Finned Chain</value>
  </data>
  <data name="FinnedGroupedChain" xml:space="preserve">
    <value>Grouped Finned Chain</value>
  </data>
  <data name="ErrorInfo_CannotCastFinnedChain" xml:space="preserve">
    <value>The current chain cannot convert into a valid finned chain.</value>
  </data>
  <data name="TechniqueFormat_FinnedChainStep" xml:space="preserve">
    <value>{0}, with fins {1}</value>
  </data>
  <data name="StepSearcherName_FinnedChainStepSearcher" xml:space="preserve">
    <value>Finned Chain</value>
  </data>
  <data name="Factor_BlossomLoopGroupedFactor" xml:space="preserve">
    <value>Blossom loop is grouped</value>
  </data>
  <data name="Factor_BlossomLoopGroupedNodeFactor" xml:space="preserve">
    <value>Grouped nodes in blossom loop</value>
  </data>
</root>